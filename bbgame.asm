; Disassembly of file: bbgame.obj
; Sun Jan  7 18:53:44 2024
; Mode: 32 bits
; Syntax: MASM/ML
; Instruction set: 80386, 80x87

.386
.387
option dotname
.model flat

public ___MAIN
public __fdelete_all
public __fupdate_hills
public __fupdate_back_elements
public __frender_bg
public __fenter_name
public __fupdateentername
public __frenderentername
public __fplaysounds
public __fget_keys
public __fmakebullet
public __ffirebullet
public __fstarburst
public __fmake_shard
public __fmake_big_shard
public __fmake_star
public __fmake_bonus
public __fmake_balloon
public __fmake_ground_target
public __fmake_enemy
public __fmake_turret
public __fmake_turret2
public __fmountguns
public __fmake_little_splash
public __fcollide_player
public __fgroundenemy
public __fenemy
public __fcollision_enemy_bullet
public __fmake_explosion
public __fmake_smoke_ring
public __ffire_enemy_bullet
public __ffire_enemy_bullet_2
public __fmake_bonuses
public __fprintline
public __fmakeletter
public __fupdateletters
public __fdrawletters
public __fupdatecounters
public __fmakecounter
public __fupdatedigits
public __fdrawdigits
public __fdo_flip
public __fload_explosion
public __fload_enemy
public __fload_font
public __ffree_font
public __ffastload_font
public __ffastfree_font
public __ffree_all
public __fload_hill
public __fkill_hills
public __fmake_score
public __fload_base
public __fexplosion_square
public __fupdate_splinters
public __fdraw_splinters
public __fnew_matrix
public __fshatter
public __fhill_offset
public __fmake_parachuter
public __finit_level
public __finit_title
public __fsave_recording
public __fload_recording
public __fchoose_key
public __fwritedatafile
public __fload_level_images
public __ffree_level_images
public __fzzz
public __frendermenu
public __fdrawtext
public __fdomouse
public __fdonagstuff
public __fmikesearchimage
public __fmikeisimage
public __fmikesearchsound
public __fmikeloadimage
public __fmikeloadanimimage
public __fmikeloadsound
public __fmikefreeimage
public __fmikefreesound
public __fcleargfx
public __fclearsound
public __fmikedrawblock
public __fmikedrawimage
public __fpause_game
public _DllEntry
public __792
public __vvendor
public __vghpause
public __vcheating
public __vpause
public __vfree_version
public __vshowlink
public __vilink
public __793
public __vvisiturl
public __794
public __vfullscreen
public __vghlinkx
public __vghlinky
public __vghloadingscreen
public __vshowlogo
public __vghlogo
public __vghlogox
public __vghlogoy
public __vlogo_im
public __vmusicchannel
public __vnuffz
public __vdifficulty
public __vmhit
public __vroll_timer
public __alightch
public __vcurx
public __vcury
public __vmhit2
public __vnag_im
public __vsmall_logo
public __vnag_x
public __vnagged_once
public __vdemo_time_left
public __vstippletoggle
public __vbase_im
public __vbase_loaded
public __asigh
public __vpaused
public __vslow_im
public __vzzz_im
public __vend_bonus
public __vlives_off
public __akeydes
public __ausejoy
public __vmfader
public __vdemoupto
public __atitle_roller
public __vtitle_upto
public __vstip
public __vsmy
public __vsmx
public __vuptoletter
public __vnameentered
public __vwait_for_no_button
public __valldone
public __vrander
public __arands
public __atypein
public __arecorded
public __vrecording
public __vrecordupto
public __aexplosion_loaded
public __802
public __vframerate
public __vtimery
public __asint
public __acost
public __ahighest_score
public __vscreen_splinter_im
public __vscreen_splinter2_im
public __vimg
public __vspl_frm
public __amatrix
public __aleg_im
public __atrain
public __atrainbonus
public __asmok_im
public __acardam
public __awater_im
public __awateroff
public __vcarload
public __vtray_im
public __vbigbarrel_im
public __acartop_im
public __vsuspension_im
public __vmiss_im
public __vwheel_im
public __vbig_gun_im
public __afont_im
public __vunload
public __aexofx
public __aexofy
public __ahiscore
public __ahiname
public __atargname
public __atargpts
public __817
public __akey_up
public __akey_down
public __akey_left
public __akey_right
public __akey_fire
public __vjoy
public __vcolour
public __vmusic
public __vmusicvol
public __vbroken
public __aship_script
public __vfishfire
public __aleveldata
public __vskyoffset
public __vskyrise
public __alayer_block
public __amess
public __822
public __823
public __824
public __825
public __vcounter
public __vdataevent
public __vlevel
public __varea
public __voldcounter
public __826
public __abonusscore
public __abonus_at
public __aship_im
public __ax
public __ay
public __aweapon
public __aframe
public __ais_active
public __ais_moving
public __alightning
public __aflames
public __ashooting
public __atofire
public __abuttondown
public __aweapon_count
public __ascore
public __alives
public __adead
public __apod
public __apress_up
public __apress_down
public __apress_left
public __apress_right
public __apress_fire
public __afiredelay
public __astar_iris_im
public __astar_irisp_im
public __aflsh
public __atrigger
public __acountervalue
public __acountercounter
public __adigid
public __acounteractive
public __acounterdigits
public __aoldcountervalue
public __ashard_im
public __abullet_im
public __vlowrand
public __vhighrand
public __vhighfront
public __vlowfront
public __asethill
public __alayery
public __alayerxoff
public __alayeryoff
public __vbird_focus_x
public __vbird_focus_y
public __vwire_slam
public __aenemy_im
public __vcanvas_im
public __vpshotno
public __venemyno
public __veshotno
public __vshardno
public __vstarno
public __vlight_on_off
public __vvertscroll
public __vplayer
public __vexplosionno
public __vshotspeed
public __vshotchance
public __vmaxshot
public __vshotwait
public __vhitfirst
public __vpodcounter
public __vpodoffset
public __viris
public __abonuscounter
public __abonustype
public __vspinster
public __vcredits
public __vnofire
public __vprims
public __vprims_hit
public __vsecs
public __vsecs_hit
public __vnocollect
public __vendcounter
public __vscroll_counter
public __vscroll_timer
public __ahill_im
public __ahillx
public __asoundplaying
public __vcounta
public __vtarget_im
public __vtargloaded
public __vroll_state
public __vworld_im
public __aenemy_loaded
public __aenemy_active
public __afont_loaded
public __afont_active
public __ahill_loaded
public __ahill_active
public __ahillpop
public __839
public __844
public __vwaterfall_im
public __vwaterfall_top_im
public __vwaterfall2_im
public __vwaterfall2_top_im
public __vfrayed_body_im
public __vfrayed_body2_im
public __vhomer1_im
public __vhomer2_im
public __varm1_im
public __varm2_im
public __vbomb_balloon_im
public __vballoon_bomb_im
public __vbomb_tye_im
public __vbomb_rope_im
public __vwake_im
public __vbig_wake_im
public __vbigger_wake_im
public __vlauncher_im
public __vsub_back_im
public __vwater_spray_im
public __vlast_boss_hatch_im
public __vmouse_cursor_im
public __asmoke_im
public __845
public __846
public __vdot_im
public __vpyx
public __vpyy
public __847
public __ascores_im
public __848
public __849
public __850
public __851
public __852
public __853
public __854
public __855
public __vdelend_im
public __856
public __astipple_im
public __857
public __858
public __vskystrip_im
public __vground_im
public __vlake_im
public __vtransition_im
public __vsquidbottom_im
public __vbig_squidbottom_im
public __vlaser_squidbottom_im
public __859
public __860
public __861
public __862
public __atitle_balloon_im
public __vselector_box_im
public __863
public __vselx
public __vsely
public __vselax
public __vselay
public __aback_im
public __864
public __865
public __866
public __aexplosion_im
public __aenemybullet_im
public __867
public __868
public __869
public __870
public __vbird_im
public __871
public __vparachute_man_im
public __872
public __vshot
public __873
public __vchute_im
public __874
public __aboulder_im
public __877
public __878
public __879
public __880
public __vpod_im
public __881
public __aflash_im
public __882
public __883
public __vlightning_im
public __venemy_lightning_im
public __886
public __887
public __888
public __893
public __894
public __895
public __896
public __897
public __898
public __899
public __900
public __901
public __902
public __903
public __904
public __905
public __906
public __907
public __908
public __909
public __910
public __911
public __912
public __913
public __914
public __915
public __916
public __917
public __vturret_im
public __918
public __vbarrel_im
public __919
public __vstar_im
public __920
public __vbonus_im
public __921
public __vballoon_im
public __922
public __vstring_im
public __923
public __vcrate_im
public __924
public __vbig_squid_gun_im
public __925
public __vlaser_squid_gun_im
public __926
public __vsquid_gun_im
public __927
public __amoon_im
public __928
public __929
public __930
public __931
public __vblimp_im
public __932
public __asmoke_ring_im
public __933
public __934
public __935
public __936
public __937
public __amorph_im
public __938
public __939
public __vlittleships_im
public __940
public __vfire_to_join_im
public __941
public __vcredits_im
public __942
public __vcreditcount_im
public __943
public __vcollect_these_im
public __944
public __vtitle_im
public __asfx_sd
public __945
public __946
public __947
public __948
public __949
public __950
public __951
public __952
public __953
public __954
public __955
public __956
public __957
public __958
public __959
public __960
public __961
public __962
public __963
public __964
public __965
public __vs_lightning
public __966
public __972
public __980
public __986
public __987
public __988
public __990
public __991
public __995
public __1000
public __1003
public __1004
public __1005
public __1006
public __1007
public __1008
public __1009
public __1012
public __1013
public __1014
public __1015
public __1016
public __1017
public __1018
public __vplanecounter
public __vkillthrusters
public __vtraincounter
public __verupt
public __vmountedguns
public __awaterfaller
public __adoubler
public __vexplod
public __vspecial
public __vfirewait
public __vhoming_speed
public __vpt1
public __vpt2
public __vfirstplane
public __vcounter2
public __1178
public __1179
public __1180
public __1214
public __1218
public __1222
public __1225
public __1226
public __asel_im
public __1229
public __1230
public __1231
public __aex_play
public __abloop_play
public __1280
public __1281
public __1282
public __1283
public __1284
public __1286
public __1289
public __1291
public __1396
public __1398
public __1430
public __1431
public __1432
public __1433
public __1437
public __1439
public __1441
public __1443
public __1444
public __1445
public __1447
public __1449
public __1450
public __1451
public __1453
public __1455
public __1456
public __1464
public __1468
public __1469
public __1471
public __1472
public __1474
public __1476
public __1478
public __1479
public __1501
public __1503
public __1505
public __1507
public __1509
public __1511
public __1512
public __1514
public __1919
public __1920
public __1921
public __1922
public __aexplosion_active
public __2002
public __2003
public __2004
public __2005
public __2006
public __2007
public __2008
public __2009
public __abase_active
public __2168
public __2169
public __2171
public __2172
public __vdeltax
public __vdeltay
public __tpic_shard
public __2182
public __2183
public __ttitle_cloud
public __2184
public __2185
public __tletter
public __2186
public __2187
public __tdigit
public __2188
public __2189
public __tscroll_letter
public __2190
public __2191
public __tscores
public __2192
public __2193
public __thill
public __2194
public __2195
public __tbird
public __2196
public __2197
public __tsmoke_ring
public __2198
public __2199
public __tstar
public __2200
public __2201
public __tbonus
public __2202
public __2203
public __tballoon
public __2204
public __2205
public __tskystar
public __2206
public __2207
public __tparachuter
public __2208
public __2209
public __tflash
public __2210
public __2211
public __tboulder
public __2212
public __2213
public __tblimp
public __2214
public __2215
public __tmoon
public __2216
public __2217
public __tplayershot
public __2218
public __2219
public __tenemyshot
public __2220
public __2221
public __tground_target
public __2222
public __2223
public __tshard
public __2224
public __2225
public __tbouncywheel
public __2226
public __2227
public __twaterfall
public __2228
public __2229
public __twaterfall2
public __2230
public __2231
public __tback_element
public __2232
public __2233
public __tenemy_zap
public __2234
public __2235
public __tenemy
public __2236
public __2237
public __tcar
public __2238
public __2239
public __tturret
public __2240
public __2241
public __tturret2
public __2242
public __2243
public __texplosion
public __2244
public __2245
public __tloadsprite
public __2246
public __2247
public __tsoundloader
public __2248
public __2249
public __2402
public __2403
public __2404
public __2405
public __2406
public __2417
public __2418
public __2419
public __2422
public __2426
public __2427
public __2441
public __2474
public __3450
public __3522
public __3530
public __3560
public __3561
public __3564
public __3565
public __3567
public __3568
public __3642
public __3643
public __3644
public __3645
public __3646
public __3647
public __3648
public __3649
public __3650
public __3651
public __3652
public __3653
public __3654
public __3655
public __3656
public __3657
public __3658
public __3659
public __3660
public __3661
public __3662
public __3663
public __3664
public __3665
public __3666
public __3667
public __3668
public __3669
public __3670
public __3671
public __3672
public __3673
public __3674
public __3675
public __3676
public __3677
public __3678
public __3679
public __3680
public __3681
public __3682
public __3683
public __3684
public __3685
public __3686
public __3687
public __3688
public __3689
public __3690
public __3691
public __3692
public __3693
public __3694
public __3695
public __3696
public __3697
public __3698
public __3699
public __3700
public __3701
public __3702
public __3703
public __3704
public __3705
public __3706
public __3707
public __3708
public __3709
public __3710
public __3711
public __3712
public __3713
public __3714
public __3715
public __3721
public __3722
public __3723
public __3724
public __3725
public __3726
public __3738
public __3739
public __3741
public __3744
public __3745
public __3747
public __3750
public __3751
public __3752
public __3753
public __3755
public __3780
public __3781
public __3782
public __3784
public __3786
public __3787
public __3788
public __3795
public __3796
public __3797
public __3799
public __3801
public __3803
public __3804
public __3805
public __3812
public __3813
public __3814
public __3816
public __3818
public __3820
public __3822
public __3823
public __3824
public __3830
public __3831
public __3832
public __3834
public __3836
public __3838
public __3839
public __3840
public __3856
public __3870
public __3889
public __3908
public __3929
public __3932
public __3933
public __4014
public __4015
public __4025
public __4030
public __4040
public __4041
public __4042
public __4043
public __4044
public __4045
public __4046
public __4047
public __4048
public __4049
public __4050
public __4051
public __4052
public __4053
public __4054
public __4055
public __4056
public __4057
public __4058
public __4059
public __4060
public __4061
public __4062
public __4063
public __4064
public __4067
public __4068
public __4073
public __4074
public __4075
public __4076
public __4077
public __4078
public __4079
public __4080
public __4081
public __4082
public __4083
public __4086
public __4087
public __4088
public __4089
public __4090
public __4091
public __4092
public __4093
public __4094
public __4095
public __4096
public __4097
public __4098
public __4101
public __4102
public __4103
public __4104
public __4105
public __4106
public __4107
public __4134
public __4136
public __4138
public __4181
public __4184
public __4187
public __4189
public __4192
public __4194
public __4196
public __4199
public __4201
public __4203
public __4205
public __4206
public __4208
public __4210
public __4213
public __4214
public __4220
public __4250
public __4252
public __4260
public __4262
public __4264
public __4267
public __4268
public __4269
public __4270
public __4271
public __4272
public __4273
public __4275
public __4276
public __4277
public __4278
public __4279
public __4280
public __4281
public __4282
public __4283
public __4284
public __4285
public __496
public __497
public __498
public __499
public __500
public __501
public __502
public __503
public __504
public __505
public __506
public __507
public __508
public __509
public __510
public __511
public __512
public __513
public __514
public __515
public __516
public __517
public __518
public __519
public __520
public __521
public __522
public __523
public __524
public __525
public __526
public __527
public __528
public __529
public __530
public __531
public __532
public __533
public __534
public __535
public __536
public __537
public __538
public __539
public __540
public __541
public __542
public __543
public __544
public __545
public __546
public __547
public __548
public __549
public __550
public __551
public __552
public __553
public __554
public __555
public __556
public __557
public __558
public __559
public __560
public __561
public __562
public __563
public __564
public __565
public __566
public __567
public __568
public __569
public __570
public __571
public __572
public __573
public __574
public __575
public __576
public __577
public __578
public __579
public __580
public __581
public __582
public __583
public __584
public __585
public __586
public __587
public __588
public __589
public __590
public __591
public __592
public __593
public __594
public __595
public __596
public __597
public __598
public __599
public __600
public __601
public __602
public __603
public __604
public __605
public __606
public __607
public __608
public __609
public __610
public __611
public __612
public __613
public __614
public __615
public __616
public __617
public __618
public __619
public __620
public __621
public __622
public __623
public __624
public __625
public __626
public __627
public __628
public __629
public __630
public __631
public __632
public __633
public __634
public __635
public __636
public __637
public __638
public __639
public __640
public __641
public __642
public __643
public __644
public __645
public __646
public __647
public __648
public __649
public __650
public __651
public __652
public __653
public __654
public __655
public __656
public __657
public __658
public __659
public __660
public __661
public __662
public __663
public __664
public __665
public __666
public __667
public __668
public __669
public __670
public __671
public __672
public __673
public __674
public __675
public __676
public __677
public __678
public __679
public __680
public __681
public __682
public __683
public __684
public __685
public __686
public __687
public __688
public __689
public __690
public __691
public __692
public __693
public __694
public __695
public __696
public __697
public __698
public __699
public __700
public __701
public __702
public __703
public __704
public __705
public __706
public __707
public __708
public __709
public __710
public __711
public __712
public __713
public __714
public __715
public __716
public __717
public __718
public __719
public __720
public __721
public __722
public __723
public __724
public __725
public __726
public __727
public __728
public __729
public __730
public __731
public __732
public __733
public __734
public __735
public __736
public __737
public __738
public __739
public __740
public __741
public __742
public __743
public __744
public __745
public __746
public __747
public __748
public __749
public __750
public __751
public __752
public __753
public __754
public __755
public __756
public __757
public __758
public __759
public __760
public __761
public __762
public __763
public __764
public __765
public __766
public __767
public __768
public __769
public __770
public __771
public __772
public __773
public __774
public __775
public __776
public __777
public __778
public __779
public __780
public __781
public __782
public __783
public __784
public __785
public __786
public __787
public __788
public __789
public __790
public __791
public ___LIBS
public ___DATA
public ___bbIntType
public ___bbFltType
public ___bbStrType
public ___bbCStrType
public ___bbObjType
public ___bbVecType

extern __fdrawimage: near
extern __fdrawblock: near
extern __ffreesound: near
extern __ffreeimage: near
extern __floadsound: near
extern __floadanimimage: near
extern __floadimage: near
extern __fexecfile: near
extern __fendgraphics: near
extern __fright: near
extern __freadline: near
extern __fcopyrect: near
extern __fwritestring: near
extern __fwriteint: near
extern __fwritefile: near
extern __fwritebyte: near
extern __fruntimeerror: near
extern __ffrontbuffer: near
extern __fflip: near
extern __fupper: near
extern __fsqr: near
extern __fjoyxdir: near
extern __fjoyydir: near
extern __fmovemouse: near
extern __fmousedown: near
extern __fmousey: near
extern __fmousex: near
extern __fgetkey: near
extern __fplot: near
extern __fleft: near
extern ___bbStrCompare: near
extern __ftext: near
extern __funlockbuffer: near
extern __fwritepixelfast: near
extern __freadpixelfast: near
extern __flockbuffer: near
extern ___bbObjNext: near
extern ___bbStrRelease: near
extern ___bbObjRelease: near
extern __frect: near
extern __fviewport: near
extern __fchannelpitch: near
extern __fatan: near
extern __fimagescollide: near
extern ___bbFMod: near
extern ___bbAbs: near
extern ___bbObjFirst: near
extern __fkeyhit: near
extern __fjoydown: near
extern __favailvidmem: near
extern __fend: near
extern ___bbMod: near
extern __fline: near
extern __fcolor: near
extern ___bbObjPrev: near
extern ___bbObjCompare: near
extern ___bbObjLast: near
extern __fasc: near
extern __fmid: near
extern ___bbObjEachNext: near
extern ___bbObjDelete: near
extern ___bbObjEachFirst: near
extern __frnd: near
extern ___bbObjStore: near
extern ___bbObjNew: near
extern __flen: near
extern ___bbObjDeleteEach: near
extern __fkeydown: near
extern __fflushkeys: near
extern __fplaysound: near
extern __fstopchannel: near
extern __fdelay: near
extern __fchannelvolume: near
extern __fsoundvolume: near
extern __floopsound: near
extern __fimageheight: near
extern __fimagewidth: near
extern ___bbStrConcat: near
extern ___bbStrFromInt: near
extern __fhandleimage: near
extern __fmidhandle: near
extern __fcreateimage: near
extern __fhidepointer: near
extern __fmaskimage: near
extern __fautomidhandle: near
extern __fsetbuffer: near
extern __fbackbuffer: near
extern __fgraphics: near
extern __freadstring: near
extern __freadbyte: near
extern ___bbReadFloat: near
extern __fclosefile: near
extern __freadint: near
extern __freadfile: near
extern __fcos: near
extern __fsin: near
extern __fapptitle: near
extern ___bbStrLoad: near
extern __fchr: near
extern ___bbReadInt: near
extern __frand: near
extern __fseedrnd: near
extern __fmillisecs: near
extern ___bbReadStr: near
extern ___bbDimArray: near
extern ___bbUndimArray: near
extern ___bbStrStore: near
extern ___bbStrConst: near
extern ___bbLoadLibs: near
extern ___bbRestore: near


.CODE

___MAIN PROC
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 396
        sub     esp, 4
        mov     eax, offset ___DATA
        mov     dword ptr [esp], eax
        call    ___bbRestore
        sub     esp, 4
        mov     eax, offset ___LIBS
        mov     dword ptr [esp], eax
        call    ___bbLoadLibs
        call    __2_begin
        jmp     __2_leave

__2_begin:
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
        mov     dword ptr [ebp-28H], ebx
        mov     dword ptr [ebp-2CH], ebx
        mov     dword ptr [ebp-30H], ebx
        mov     dword ptr [ebp-34H], ebx
        mov     dword ptr [ebp-38H], ebx
        mov     dword ptr [ebp-3CH], ebx
        mov     dword ptr [ebp-40H], ebx
        mov     dword ptr [ebp-44H], ebx
        mov     dword ptr [ebp-48H], ebx
        mov     dword ptr [ebp-4CH], ebx
        mov     dword ptr [ebp-50H], ebx
        mov     dword ptr [ebp-54H], ebx
        mov     dword ptr [ebp-58H], ebx
        mov     dword ptr [ebp-5CH], ebx
        mov     dword ptr [ebp-60H], ebx
        mov     dword ptr [ebp-64H], ebx
        mov     dword ptr [ebp-68H], ebx
        mov     dword ptr [ebp-6CH], ebx
        mov     dword ptr [ebp-70H], ebx
        mov     dword ptr [ebp-74H], ebx
        mov     dword ptr [ebp-78H], ebx
        mov     dword ptr [ebp-7CH], ebx
        mov     dword ptr [ebp-80H], ebx
        mov     dword ptr [ebp-84H], ebx
        mov     dword ptr [ebp-88H], ebx
        mov     dword ptr [ebp-8CH], ebx
        mov     dword ptr [ebp-90H], ebx
        mov     dword ptr [ebp-94H], ebx
        mov     dword ptr [ebp-98H], ebx
        mov     dword ptr [ebp-9CH], ebx
        mov     dword ptr [ebp-0A0H], ebx
        mov     dword ptr [ebp-0A4H], ebx
        mov     dword ptr [ebp-0A8H], ebx
        mov     dword ptr [ebp-0ACH], ebx
        mov     dword ptr [ebp-0B0H], ebx
        mov     dword ptr [ebp-0B4H], ebx
        mov     dword ptr [ebp-0B8H], ebx
        mov     dword ptr [ebp-0BCH], ebx
        mov     dword ptr [ebp-0C0H], ebx
        mov     dword ptr [ebp-0C4H], ebx
        mov     dword ptr [ebp-0C8H], ebx
        mov     dword ptr [ebp-0CCH], ebx
        mov     dword ptr [ebp-0D0H], ebx
        mov     dword ptr [ebp-0D4H], ebx
        mov     dword ptr [ebp-0D8H], ebx
        mov     dword ptr [ebp-0DCH], ebx
        mov     dword ptr [ebp-0E0H], ebx
        mov     dword ptr [ebp-0E4H], ebx
        mov     dword ptr [ebp-0E8H], ebx
        mov     dword ptr [ebp-0ECH], ebx
        mov     dword ptr [ebp-0F0H], ebx
        mov     dword ptr [ebp-0F4H], ebx
        mov     dword ptr [ebp-0F8H], ebx
        mov     dword ptr [ebp-0FCH], ebx
        mov     dword ptr [ebp-100H], ebx
        mov     dword ptr [ebp-104H], ebx
        mov     dword ptr [ebp-108H], ebx
        mov     dword ptr [ebp-10CH], ebx
        mov     dword ptr [ebp-110H], ebx
        mov     dword ptr [ebp-114H], ebx
        mov     dword ptr [ebp-118H], ebx
        mov     dword ptr [ebp-11CH], ebx
        mov     dword ptr [ebp-120H], ebx
        mov     dword ptr [ebp-124H], ebx
        mov     dword ptr [ebp-128H], ebx
        mov     dword ptr [ebp-12CH], ebx
        mov     dword ptr [ebp-130H], ebx
        mov     dword ptr [ebp-134H], ebx
        mov     dword ptr [ebp-138H], ebx
        mov     dword ptr [ebp-13CH], ebx
        mov     dword ptr [ebp-140H], ebx
        mov     dword ptr [ebp-144H], ebx
        mov     dword ptr [ebp-148H], ebx
        mov     dword ptr [ebp-14CH], ebx
        mov     dword ptr [ebp-150H], ebx
        mov     dword ptr [ebp-154H], ebx
        mov     dword ptr [ebp-158H], ebx
        mov     dword ptr [ebp-15CH], ebx
        mov     dword ptr [ebp-160H], ebx
        mov     dword ptr [ebp-164H], ebx
        mov     dword ptr [ebp-168H], ebx
        mov     dword ptr [ebp-16CH], ebx
        mov     dword ptr [ebp-170H], ebx
        mov     dword ptr [ebp-174H], ebx
        mov     dword ptr [ebp-178H], ebx
        mov     dword ptr [ebp-17CH], ebx
        mov     dword ptr [ebp-180H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __792
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvendor], 99
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vghpause], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcheating], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpause], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfree_version], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshowlink], 1
        sub     esp, 8
        mov     dword ptr [esp], offset __vilink
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __793
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        mov     dword ptr [esp], offset __vvisiturl
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __794
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfullscreen], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnuffz], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdifficulty], 2
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 0
        sub     esp, 4
        mov     eax, offset __alightch
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __alightch
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alightch
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcurx], 320
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcury], 240
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit2], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnagged_once], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdemo_time_left], 3600000
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstippletoggle], 0
        sub     esp, 4
        mov     eax, offset __asigh
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __asigh
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asigh
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpaused], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlives_off], 0
        sub     esp, 4
        mov     eax, offset __akeydes
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 221
        mov     esi, offset __akeydes
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __akeydes
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __795

__796:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akeydes]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        mov     eax, ebx
        call    ___bbReadStr
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        add     dword ptr [ebp-8H], 1

__795:
        cmp     dword ptr [ebp-8H], 221
        jle     __796

__3:
        sub     esp, 4
        mov     eax, offset __ausejoy
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ausejoy
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ausejoy
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmfader], 100
        sub     esp, 4
        call    __fmillisecs
        mov     dword ptr [esp], eax
        call    __fseedrnd
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 5
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdemoupto], eax
        sub     esp, 4
        mov     eax, offset __atitle_roller
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 19
        mov     esi, offset __atitle_roller
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atitle_roller
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __797

__798:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_roller]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__797:
        cmp     dword ptr [ebp-8H], 18
        jle     __798

__4:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        jne     __799
        mov     ebx, 99
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_roller]
        mov     dword ptr [esi], ebx

__799:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 0
        sub     esp, 4
        mov     eax, offset __arands
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __arands
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __arands
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __atypein
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 60
        mov     esi, offset __atypein
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atypein
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 1
        jmp     __800

__801:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atypein]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        mov     eax, ebx
        call    ___bbReadStr
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        add     dword ptr [ebp-8H], 1

__800:
        cmp     dword ptr [ebp-8H], 53
        jle     __801

__5:
        sub     esp, 8
        mov     eax, 44
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atypein]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 34
        mov     eax, ebx
        call    __fchr
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 4
        mov     eax, offset __arecorded
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8000
        mov     esi, offset __arecorded
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, offset __arecorded
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __arecorded
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aexplosion_loaded
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 61
        mov     esi, offset __aexplosion_loaded
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aexplosion_loaded
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 12
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __802
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    __fapptitle
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vframerate], 60
        sub     esp, 4
        mov     eax, offset __asint
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 360
        mov     esi, offset __asint
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asint
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __acost
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 360
        mov     esi, offset __acost
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acost
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __803

__804:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fsin
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__803:
        cmp     dword ptr [ebp-8H], 360
        jle     __804

__6:
        sub     esp, 4
        mov     eax, offset __ahighest_score
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ahighest_score
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahighest_score
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vspl_frm], 71
        sub     esp, 4
        mov     eax, offset __amatrix
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __amatrix
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, offset __amatrix
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, offset __amatrix
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __amatrix
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aleg_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 4
        mov     esi, offset __aleg_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aleg_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __atrain
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __atrain
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atrain
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __805

__806:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrain]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__805:
        cmp     dword ptr [ebp-8H], 16
        jle     __806

__7:
        sub     esp, 4
        mov     eax, offset __atrainbonus
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __atrainbonus
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atrainbonus
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __807

__808:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrainbonus]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__807:
        cmp     dword ptr [ebp-8H], 16
        jle     __808

__8:
        sub     esp, 4
        mov     eax, offset __asmok_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 7
        mov     esi, offset __asmok_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asmok_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __acardam
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 5
        mov     esi, offset __acardam
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acardam
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __809

__810:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acardam]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__809:
        cmp     dword ptr [ebp-8H], 4
        jle     __810

__9:
        sub     esp, 4
        mov     eax, offset __awater_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 5
        mov     esi, offset __awater_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __awater_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __awateroff
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 6
        mov     esi, offset __awateroff
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __awateroff
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcarload], 0
        sub     esp, 4
        mov     eax, offset __acartop_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 3
        mov     esi, offset __acartop_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acartop_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __afont_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 9
        mov     esi, offset __afont_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, offset __afont_im
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __afont_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aexofx
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 12
        mov     esi, offset __aexofx
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aexofx
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aexofy
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 12
        mov     esi, offset __aexofy
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aexofy
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 1
        jmp     __811

__812:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexofx]
        mov     dword ptr [ebx], eax
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexofy]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__811:
        cmp     dword ptr [ebp-8H], 12
        jle     __812

__10:
        sub     esp, 4
        mov     eax, offset __ahiscore
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 11
        mov     esi, offset __ahiscore
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahiscore
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ahiname
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 11
        mov     esi, offset __ahiname
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahiname
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 1
        jmp     __813

__814:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahiname]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        mov     eax, ebx
        call    ___bbReadStr
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        add     dword ptr [ebp-8H], 1

__813:
        cmp     dword ptr [ebp-8H], 10
        jle     __814

__11:
        sub     esp, 4
        mov     eax, offset __atargname
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 12
        mov     esi, offset __atargname
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atargname
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __atargpts
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 12
        mov     esi, offset __atargpts
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atargpts
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 1
        jmp     __815

__816:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atargname]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        mov     eax, ebx
        call    ___bbReadStr
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atargpts]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__815:
        cmp     dword ptr [ebp-8H], 11
        jle     __816

__12:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __817
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 4
        mov     eax, offset __akey_up
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __akey_up
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __akey_up
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __akey_down
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __akey_down
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __akey_down
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __akey_left
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __akey_left
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __akey_left
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __akey_right
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __akey_right
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __akey_right
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __akey_fire
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __akey_fire
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __akey_fire
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     ebx, 255
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, 200
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 208
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 203
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 205
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vjoy], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcolour], 16
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusic], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicvol], 1120403456
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbroken], 1
        sub     esp, 4
        mov     eax, offset __aship_script
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __aship_script
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 20
        mov     esi, offset __aship_script
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aship_script
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __818

__819:
        mov     dword ptr [ebp-10H], 0
        jmp     __820

__821:
        call    ___bbReadInt
        mov     ebx, offset __aship_script
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-10H]
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_script]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-10H], 1

__820:
        cmp     dword ptr [ebp-10H], 20
        jle     __821

__14:
        add     dword ptr [ebp-8H], 1

__818:
        cmp     dword ptr [ebp-8H], 20
        jle     __819

__13:
        sub     esp, 4
        mov     eax, offset __aleveldata
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 4
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 5000
        mov     esi, offset __aleveldata
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aleveldata
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyoffset], 1129447424
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], 1022739087
        sub     esp, 4
        mov     eax, offset __alayer_block
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __alayer_block
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alayer_block
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __amess
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __amess
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __amess
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amess]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __822
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amess]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __823
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amess]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __824
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amess]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __825
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__voldcounter], 0
        sub     esp, 4
        mov     eax, offset __aleveldata
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 50
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3000
        mov     esi, offset __aleveldata
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aleveldata
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-14H], 0
        mov     dword ptr [ebp-8H], -1
        sub     esp, 8
        mov     eax, offset __826
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __freadfile
        mov     dword ptr [ebp-18H], eax

__l_2flipback:

__827:
        add     dword ptr [ebp-8H], 1
        sub     esp, 4
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        call    __freadint
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-8H]
        add     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     dword ptr [ebx], eax
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-8H]
        add     eax, dword ptr [ebp-14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        cmp     eax, 2651135928
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-8H]
        add     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 597777777
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __828
        mov     dword ptr [ebp-8H], -1
        add     dword ptr [ebp-14H], 1
        jmp     __l_2flipback

__828:
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-8H]
        add     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 711975151
        jne     __827

__15:
        sub     esp, 4
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        sub     esp, 4
        mov     eax, offset __abonusscore
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __abonusscore
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abonusscore
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __829

__830:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonusscore]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__829:
        cmp     dword ptr [ebp-8H], 20
        jle     __830

__16:
        sub     esp, 4
        mov     eax, offset __abonus_at
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __abonus_at
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abonus_at
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __831

__832:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonus_at]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__831:
        cmp     dword ptr [ebp-8H], 19
        jle     __832

__17:
        sub     esp, 4
        mov     eax, offset __aship_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __aship_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aship_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ax
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ax
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ax
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ay
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ay
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ay
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aweapon
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __aweapon
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aweapon
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aframe
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __aframe
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aframe
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ais_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ais_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ais_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ais_moving
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ais_moving
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ais_moving
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __alightning
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 6
        mov     esi, offset __alightning
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alightning
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aflames
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __aflames
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aflames
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ashooting
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ashooting
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ashooting
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __atofire
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __atofire
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atofire
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __abuttondown
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __abuttondown
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abuttondown
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aweapon_count
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __aweapon_count
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aweapon_count
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ascore
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ascore
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ascore
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __alives
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __alives
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alives
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __adead
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __adead
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __adead
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apress_up
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apress_up
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apress_up
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apress_down
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apress_down
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apress_down
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apress_left
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apress_left
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apress_left
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apress_right
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apress_right
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apress_right
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apress_fire
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apress_fire
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apress_fire
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __afiredelay
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __afiredelay
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __afiredelay
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __astar_iris_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 5
        mov     esi, offset __astar_iris_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __astar_iris_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __astar_irisp_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 5
        mov     esi, offset __astar_irisp_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __astar_irisp_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aflsh
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __aflsh
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aflsh
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __atrigger
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __atrigger
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atrigger
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __acountervalue
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __acountervalue
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acountervalue
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __acountercounter
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __acountercounter
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acountercounter
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __adigid
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __adigid
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, offset __adigid
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __adigid
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __acounteractive
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __acounteractive
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acounteractive
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __acounterdigits
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __acounterdigits
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __acounterdigits
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aoldcountervalue
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __aoldcountervalue
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aoldcountervalue
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ashard_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 50
        mov     esi, offset __ashard_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ashard_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __abullet_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __abullet_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abullet_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 2
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 0
        sub     esp, 4
        mov     eax, offset __asethill
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 9
        mov     esi, offset __asethill
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asethill
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __alayery
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 9
        mov     esi, offset __alayery
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alayery
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __833

__834:
        call    ___bbReadInt
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__833:
        cmp     dword ptr [ebp-8H], 8
        jle     __834

__18:
        sub     esp, 4
        mov     eax, offset __alayerxoff
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 9
        mov     esi, offset __alayerxoff
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alayerxoff
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __835

__836:
        call    ___bbReadFloat
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__835:
        cmp     dword ptr [ebp-8H], 8
        jle     __836

__19:
        sub     esp, 4
        mov     eax, offset __alayeryoff
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 9
        mov     esi, offset __alayeryoff
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alayeryoff
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __837

__838:
        call    ___bbReadFloat
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayeryoff]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__837:
        cmp     dword ptr [ebp-8H], 8
        jle     __838

__20:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbird_focus_x], 1134559232
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbird_focus_y], 240
        sub     esp, 4
        mov     eax, offset __aenemy_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 71
        mov     esi, offset __aenemy_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aenemy_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpshotno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__venemyno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__veshotno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshardno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstarno], 10
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vexplosionno], 0
        sub     esp, 4
        mov     eax, offset __abonuscounter
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __abonuscounter
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abonuscounter
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __abonustype
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __abonustype
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abonustype
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_counter], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_timer], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 100
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, offset __ahill_im
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahill_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ahillx
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __ahillx
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, offset __ahillx
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahillx
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __asoundplaying
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 100
        mov     esi, offset __asoundplaying
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asoundplaying
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_state], 2
        sub     esp, 4
        mov     eax, offset __aenemy_loaded
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 71
        mov     esi, offset __aenemy_loaded
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aenemy_loaded
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aenemy_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 71
        mov     esi, offset __aenemy_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aenemy_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __afont_loaded
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 3
        mov     esi, offset __afont_loaded
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __afont_loaded
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __afont_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 3
        mov     esi, offset __afont_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __afont_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ahill_loaded
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 99
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, offset __ahill_loaded
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahill_loaded
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ahill_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 99
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, offset __ahill_active
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahill_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __ahillpop
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __ahillpop
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahillpop
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_state], 3

__l_2config:
        mov     dword ptr [ebp-1CH], 1
        sub     esp, 8
        mov     eax, offset __839
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __freadfile
        mov     dword ptr [ebp-20H], eax
        cmp     dword ptr [ebp-20H], 0
        je      __840
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcolour], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcolour], 16
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusic], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicvol], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbroken], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadint
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdemo_time_left], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdemo_time_left], 120000
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __841
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdemo_time_left], 120000

__841:
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_down]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_left]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_right]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_down]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_left]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_right]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadbyte
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdifficulty], eax
        mov     dword ptr [ebp-8H], 1
        jmp     __842

__843:
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __freadint
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahiname]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadstring
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        add     dword ptr [ebp-8H], 1

__842:
        cmp     dword ptr [ebp-8H], 10
        jle     __843

__21:
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    __fclosefile

__840:
        sub     esp, 16
        mov     dword ptr [esp+8H], 32
IFDEF PATCHES
        mov     dword ptr [esp+0CH], 3
ELSE
        mov     dword ptr [esp+0CH], 0
ENDIF
        mov     dword ptr [esp+4H], 480
        mov     dword ptr [esp], 640
        call    __fgraphics
        sub     esp, 4
        call    __fbackbuffer
        mov     dword ptr [esp], eax
        call    __fsetbuffer
        sub     esp, 4
        mov     dword ptr [esp], 0
        call    __fautomidhandle
        sub     esp, 8
        mov     eax, offset __844
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vzzz_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vzzz_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __l_2sfx

__l_2setgfx:
        call    __ffree_all
        call    __fhidepointer

__l_2endofinit:
        sub     esp, 4
        mov     eax, offset __asmoke_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 5
        mov     esi, offset __asmoke_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asmoke_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     dword ptr [esp], 0
        call    __fautomidhandle
        sub     esp, 8
        mov     eax, offset __845
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmouse_cursor_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmouse_cursor_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __846
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vzzz_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vzzz_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        call    __fzzz
        sub     esp, 12
        mov     dword ptr [esp+4H], 3
        mov     dword ptr [esp+8H], 1
        mov     dword ptr [esp], 10
        call    __fcreateimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdot_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 244
        mov     dword ptr [esp+0CH], 32
        mov     dword ptr [esp+4H], 255
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdot_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __847
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vslow_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vslow_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, offset __ascores_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 20
        mov     esi, offset __ascores_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ascores_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, offset __848
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __849
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __850
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __851
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __852
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __853
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __854
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __855
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 20
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 20
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 20
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __856
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdelend_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdelend_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, offset __astipple_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 1
        mov     esi, offset __astipple_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __astipple_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, offset __857
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__astipple_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __858
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__astipple_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 24
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        mov     eax, offset __859
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskystrip_im], eax
        sub     esp, 8
        mov     eax, offset __860
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vground_im], eax
        sub     esp, 8
        mov     eax, offset __861
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlake_im], eax
        sub     esp, 8
        mov     eax, offset __862
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtransition_im], eax
        sub     esp, 4
        mov     eax, offset __atitle_balloon_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __atitle_balloon_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __atitle_balloon_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, offset __863
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselector_box_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vselector_box_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, offset __aback_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 50
        mov     esi, offset __aback_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aback_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, offset __864
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __865
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __866
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbigbarrel_im], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 20
        mov     dword ptr [esp+8H], 15
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigbarrel_im]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 4
        mov     eax, offset __aexplosion_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 60
        mov     esi, offset __aexplosion_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aexplosion_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __aenemybullet_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __aenemybullet_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aenemybullet_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 20
        mov     dword ptr [esp+8H], 12
        mov     dword ptr [esp+4H], 12
        sub     esp, 4
        mov     eax, offset __867
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemybullet_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        mov     eax, offset __868
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemybullet_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __869
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemybullet_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __870
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemybullet_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 8
        mov     dword ptr [esp+4H], 10
        sub     esp, 4
        mov     eax, offset __871
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbird_im], eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 11
        mov     dword ptr [esp+8H], 25
        mov     dword ptr [esp+4H], 24
        sub     esp, 4
        mov     eax, offset __872
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vparachute_man_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vparachute_man_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vparachute_man_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __873
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshot], eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 52
        mov     dword ptr [esp+4H], 50
        sub     esp, 4
        mov     eax, offset __874
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vchute_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vchute_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vchute_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, offset __aboulder_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 3
        mov     esi, offset __aboulder_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aboulder_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 1
        jmp     __875

__876:
        sub     esp, 28
        mov     eax, offset __877
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __878
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aboulder_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aboulder_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aboulder_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        add     dword ptr [ebp-8H], 1

__875:
        cmp     dword ptr [ebp-8H], 3
        jle     __876

__22:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 49
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        mov     eax, offset __879
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_im]
        mov     dword ptr [ebx], eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 49
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        mov     eax, offset __880
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aship_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aship_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+8H], 30
        mov     dword ptr [esp+4H], 51
        sub     esp, 4
        mov     eax, offset __881
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpod_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpod_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, offset __aflash_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 5
        mov     esi, offset __aflash_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aflash_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 18
        mov     dword ptr [esp+8H], 19
        mov     dword ptr [esp+4H], 23
        sub     esp, 4
        mov     eax, offset __882
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflash_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aflash_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 18
        mov     dword ptr [esp+8H], 57
        mov     dword ptr [esp+4H], 69
        sub     esp, 4
        mov     eax, offset __883
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflash_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aflash_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        mov     dword ptr [ebp-8H], 1
        jmp     __884

__885:
        sub     esp, 28
        mov     eax, offset __886
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __887
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__884:
        cmp     dword ptr [ebp-8H], 4
        jle     __885

__23:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 19
        mov     dword ptr [esp+4H], 43
        sub     esp, 4
        mov     eax, offset __888
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__abullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        mov     dword ptr [ebp-8H], 1
        jmp     __889

__890:
        sub     esp, 16
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__abullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        mov     dword ptr [esp+8H], ebx
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        add     dword ptr [ebp-8H], 1

__889:
        cmp     dword ptr [ebp-8H], 5
        jle     __890

__24:
        mov     dword ptr [ebp-8H], 1
        jmp     __891

__892:
        sub     esp, 28
        mov     eax, offset __893
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __894
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, dword ptr [ebp-8H]
        add     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__abullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1069547520
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        mov     dword ptr [esp+8H], ebx
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        add     dword ptr [ebp-8H], 1

__891:
        cmp     dword ptr [ebp-8H], 10
        jle     __892

__25:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 18
        mov     dword ptr [esp+8H], 24
        mov     dword ptr [esp+4H], 24
        sub     esp, 4
        mov     eax, offset __895
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 65
        mov     dword ptr [esp+4H], 62
        sub     esp, 4
        mov     eax, offset __896
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __897
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 31
        sub     esp, 4
        mov     eax, offset __898
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 20
        sub     esp, 4
        mov     eax, offset __899
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 30
        mov     dword ptr [esp+4H], 29
        sub     esp, 4
        mov     eax, offset __900
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 30
        mov     dword ptr [esp+4H], 30
        sub     esp, 4
        mov     eax, offset __901
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 31
        sub     esp, 4
        mov     eax, offset __902
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 7
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 20
        sub     esp, 4
        mov     eax, offset __903
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 31
        sub     esp, 4
        mov     eax, offset __904
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 9
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 20
        sub     esp, 4
        mov     eax, offset __905
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 65
        mov     dword ptr [esp+4H], 62
        sub     esp, 4
        mov     eax, offset __906
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __907
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 12
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 12
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 31
        sub     esp, 4
        mov     eax, offset __908
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 13
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 13
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 20
        sub     esp, 4
        mov     eax, offset __909
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 14
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 14
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 65
        mov     dword ptr [esp+4H], 62
        sub     esp, 4
        mov     eax, offset __910
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 15
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 15
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __911
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 16
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 16
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 31
        sub     esp, 4
        mov     eax, offset __912
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 17
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 17
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 20
        sub     esp, 4
        mov     eax, offset __913
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 18
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 18
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 65
        mov     dword ptr [esp+4H], 62
        sub     esp, 4
        mov     eax, offset __914
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 19
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 19
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __915
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 20
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 20
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 65
        mov     dword ptr [esp+4H], 62
        sub     esp, 4
        mov     eax, offset __916
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 21
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 21
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 21
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __917
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 22
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashard_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 22
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 22
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 32
        mov     dword ptr [esp+8H], 34
        mov     dword ptr [esp+4H], 34
        sub     esp, 4
        mov     eax, offset __918
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vturret_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vturret_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+8H], 26
        mov     dword ptr [esp+4H], 26
        sub     esp, 4
        mov     eax, offset __919
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbarrel_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 44
        mov     dword ptr [esp+8H], 57
        mov     dword ptr [esp+4H], 52
        sub     esp, 4
        mov     eax, offset __920
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstar_im], eax
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vstar_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vstar_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 20
        mov     dword ptr [esp+8H], 51
        mov     dword ptr [esp+4H], 37
        sub     esp, 4
        mov     eax, offset __921
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbonus_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 46
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        mov     eax, offset __922
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vballoon_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vballoon_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __923
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstring_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstring_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstring_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __924
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcrate_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcrate_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcrate_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 24
        mov     dword ptr [esp+4H], 42
        sub     esp, 4
        mov     eax, offset __925
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_squid_gun_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 24
        mov     dword ptr [esp+4H], 42
        sub     esp, 4
        mov     eax, offset __926
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlaser_squid_gun_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 12
        mov     dword ptr [esp+4H], 21
        sub     esp, 4
        mov     eax, offset __927
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsquid_gun_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, offset __amoon_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __amoon_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __amoon_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, offset __928
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __929
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __930
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __931
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __932
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vblimp_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vblimp_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vblimp_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 4
        mov     eax, offset __asmoke_ring_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __asmoke_ring_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asmoke_ring_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 96
        mov     dword ptr [esp+4H], 31
        sub     esp, 4
        mov     eax, offset __933
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmoke_ring_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 48
        mov     dword ptr [esp+4H], 16
        sub     esp, 4
        mov     eax, offset __934
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmoke_ring_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 33
        mov     dword ptr [esp+4H], 11
        sub     esp, 4
        mov     eax, offset __935
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmoke_ring_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 18
        mov     dword ptr [esp+4H], 6
        sub     esp, 4
        mov     eax, offset __936
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmoke_ring_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+8H], 41
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __937
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmoke_ring_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 4
        mov     eax, offset __amorph_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __amorph_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __amorph_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 145
        mov     dword ptr [esp+8H], 36
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        mov     eax, offset __938
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amorph_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amorph_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amorph_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 145
        mov     dword ptr [esp+8H], 36
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        mov     eax, offset __939
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amorph_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amorph_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amorph_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 47
        sub     esp, 4
        mov     eax, offset __940
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlittleships_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlittleships_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlittleships_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __941
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfire_to_join_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfire_to_join_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfire_to_join_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __942
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcredits_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcredits_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcredits_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 10
        mov     dword ptr [esp+8H], 18
        mov     dword ptr [esp+4H], 17
        sub     esp, 4
        mov     eax, offset __943
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcreditcount_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcreditcount_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcreditcount_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __944
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcollect_these_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcollect_these_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcollect_these_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fautomidhandle
        ret

__l_2sfx:
        sub     esp, 4
        mov     eax, offset __asfx_sd
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 100
        mov     esi, offset __asfx_sd
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asfx_sd
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     eax, offset __945
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __946
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __947
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __948
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __949
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __950
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __951
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 7
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __952
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __953
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 9
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __954
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 10
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __955
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 12
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 13
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 14
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 15
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, offset __956
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 16
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __957
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 17
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __958
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 18
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __959
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 19
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __960
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 20
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 21
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 22
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 23
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 24
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 25
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, offset __961
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 26
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __962
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 27
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __963
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 28
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __964
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 29
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, offset __965
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     ebx, 36
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     dword ptr [ebx], eax
        mov     ebx, 36
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 37
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 36
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 38
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        mov     ebx, 36
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asfx_sd]
        mov     ebx, dword ptr [ebx]
        mov     esi, 39
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asfx_sd]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, offset __966
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vs_lightning], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vs_lightning]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vs_lightning]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1059481190
        call    __fsoundvolume
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmusic], 0
        je      __967
        mov     dword ptr [ebp-8H], 0
        jmp     __968

__969:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 60
        sub     esi, dword ptr [ebp-8H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fdelay
        add     dword ptr [ebp-8H], 1

__968:
        cmp     dword ptr [ebp-8H], 60
        jle     __969

__967:

__26:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmusic], 0
        je      __970
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fstopchannel

__970:
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fmikefreesound
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmusic], 0
        je      __971
        sub     esp, 8
        mov     eax, offset __972
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicchannel], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__l_2title:

__971:
        call    __fdelete_all
        call    __ffree_all
        call    __fflushkeys
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit2], 1
        call    __l_2setgfx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffastload_font
        sub     esp, 4
        call    __fmillisecs
        mov     dword ptr [esp], eax
        call    __fseedrnd
        jmp     __974

__974:
__973:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fkeydown
        and     eax, eax
        jne     __973

__27:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtitle_upto], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __975
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 18

__975:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_counter], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_timer], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vtitle_upto], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtitle_upto], 11
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtitle_upto], 19
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __976
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 1

__976:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtitle_upto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_roller]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_state], ebx

__l_2skipback:

__977:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcounta], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 0
        jne     __978
        call    __fzzz

__978:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __979
        sub     esp, 4
        mov     eax, offset __thill
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 8
        mov     eax, offset __980
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtitle_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtitle_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        call    __fmillisecs
        mov     dword ptr [esp], eax
        call    __fseedrnd
        call    __fkill_hills
        mov     dword ptr [ebp-8H], 0
        jmp     __981

__982:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__981:
        cmp     dword ptr [ebp-8H], 10
        jle     __982

__29:
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 3
        call    __frand
        imul    eax, eax, 5
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jne     __983
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 0

__983:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], -50
        call    __finit_title
        mov     dword ptr [ebp-2CH], 0

__979:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __984
        sub     esp, 4
        mov     eax, offset __thill
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        call    __ffree_all
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtargloaded], 1
        jne     __985
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtarget_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtarget_im], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtargloaded], 0

__985:
        sub     esp, 4
        call    __fmillisecs
        mov     dword ptr [esp], eax
        call    __fseedrnd
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffastload_font
        sub     esp, 8
        mov     eax, offset __986
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 64
        sub     esp, 4
        mov     eax, offset __987
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_balloon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 64
        sub     esp, 4
        mov     eax, offset __988
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_balloon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        jne     __989
        sub     esp, 8
        mov     eax, offset __990
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnag_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vnag_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __991
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsmall_logo], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsmall_logo]
        mov     dword ptr [esp], eax
        call    __fmaskimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnag_x], -1015414784

__989:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 1000
        call    __fkill_hills
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 8
        call    __frand
        mov     dword ptr [ebp-8H], eax
        mov     dword ptr [ebp-8H], 0
        jmp     __992

__993:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__992:
        cmp     dword ptr [ebp-8H], 10
        jle     __993

__30:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 1
        jne     __994
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 60
        mov     dword ptr [esp+4H], 170
        sub     esp, 4
        mov     eax, offset __995
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        mov     dword ptr [ebp-8H], 1
        jmp     __996

__997:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     esi, dword ptr [ebp-8H]
        imul    esi, esi, 35
        add     esi, 80
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 70
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahiname]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 8
        lea     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __999

__998:
        sub     esp, 20
        mov     eax, offset __1000
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-30H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-30H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__999:
        sub     esp, 8
        lea     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
        cmp     eax, 7
        jl      __998

__32:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     esi, dword ptr [ebp-8H]
        imul    esi, esi, 35
        add     esi, 80
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 410
        sub     esp, 4
        lea     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
        add     dword ptr [ebp-8H], 1

__996:
        cmp     dword ptr [ebp-8H], 10
        jle     __997

__31:
        jmp     __1001

__994:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 4
        jne     __1002
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 70
        mov     dword ptr [esp+4H], 155
        sub     esp, 4
        mov     eax, offset __1003
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1004
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1005
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1006
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 300
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1007
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 350
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1008
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 400
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1009
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1010

__1002:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 5
        jne     __1011
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 70
        mov     dword ptr [esp+4H], 155
        sub     esp, 4
        mov     eax, offset __1012
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1013
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1014
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1015
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 300
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1016
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 350
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1017
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 400
        mov     dword ptr [esp+4H], 180
        sub     esp, 4
        mov     eax, offset __1018
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline

__1011:

__1010:

__1001:
        mov     dword ptr [ebp-8H], 1
        jmp     __1019

__1020:
        sub     esp, 8
        lea     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __ttitle_cloud
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, 3
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__1019:
        cmp     dword ptr [ebp-8H], 12
        jle     __1020

__33:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1021
        mov     dword ptr [ebp-8H], 1
        jmp     __1022

__1023:
        sub     esp, 8
        lea     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __ttitle_cloud
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        cmp     dword ptr [ebp-8H], 18
        jge     __1024
        mov     ebx, 2
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        jmp     __1025

__1024:
        cmp     dword ptr [ebp-8H], 24
        jge     __1026
        mov     ebx, 1
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        jmp     __1027

__1026:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1027:

__1025:
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__1022:
        cmp     dword ptr [ebp-8H], 25
        jle     __1023

__984:

__34:

__1021:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 2
        jne     __1028
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdemoupto], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdemoupto], 6
        jne     __1029
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdemoupto], 1

__1029:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 2
        sub     esp, 4
        mov     eax, offset __ttitle_cloud
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        jmp     __l_2initialise

__1028:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 3
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 50
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1030
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx

__1030:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vroll_timer], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 1800
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 3
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 3
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 10
        mov     eax, esi
        sete    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-38H], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 1800
        mov     eax, esi
        setge   al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1031
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 0
        call    __fshatter
        call    __fdelete_all
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 0
        jne     __1032
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtitle_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_im], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jge     __1033
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffree_level_images
        jmp     __1034

__1033:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __1035
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffree_level_images
        jmp     __1036

__1035:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __1037
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffree_level_images
        jmp     __1038

__1037:
        sub     esp, 4
        mov     dword ptr [esp], 4
        call    __ffree_level_images

__1038:

__1036:

__1034:

__1032:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 2
        jne     __1039
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vworld_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vworld_im], 0

__1039:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1040
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_balloon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_balloon_im]
        mov     dword ptr [esi], ebx

__1040:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtargloaded], 1
        jne     __1041
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtarget_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtarget_im], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtargloaded], 0

__1041:
        mov     dword ptr [ebp-8H], 0
        jmp     __1042

__1043:
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__1042:
        cmp     dword ptr [ebp-8H], 10
        jle     __1043

__35:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_counter], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_timer], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnagged_once], 1
        jne     __1044
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 19
        jmp     __1045

__1044:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vtitle_upto], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtitle_upto], 11
        jl      __1046
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 1

__1046:

__1045:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtitle_upto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_roller]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_state], ebx
        jmp     __l_2skipback

__1031:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vframerate], 30
        jne     __1047
        call    __l_2updatetitle
        call    __fupdate_splinters

__1047:
        call    __l_2updatetitle
        call    __fupdate_splinters
        call    __l_2rendertitle
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 0
        jne     __1048
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1049
        cmp     dword ptr [ebp-3CH], 0
        jne     __1050
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], 1
        call    __fshatter
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
        sub     esp, 4
        mov     eax, offset __ttitle_cloud
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        jmp     __l_2initialise

__1050:
        jmp     __1052

__1051:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
        call    __fget_keys

__1052:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        je      __1051

__36:

__1049:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1053
        cmp     dword ptr [ebp-3CH], 0
        jne     __1054
        mov     ebx, 1
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], 1
        call    __fshatter
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 2
        sub     esp, 4
        mov     eax, offset __ttitle_cloud
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        jmp     __l_2initialise

__1054:
        jmp     __1056

__1055:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 2
        call    __fget_keys

__1056:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        je      __1055

__37:

__1053:
        jmp     __1057

__1048:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     esi, dword ptr [esi]
        or      ebx, esi
        and     ebx, ebx
        je      __1058
        call    __fshatter
        call    __fdelete_all
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 2
        jne     __1059
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vworld_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vworld_im], 0

__1059:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1060
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_balloon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_balloon_im]
        mov     dword ptr [esi], ebx

__1060:
        mov     dword ptr [ebp-8H], 0
        jmp     __1061

__1062:
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__1061:
        cmp     dword ptr [ebp-8H], 10
        jle     __1062

__38:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_counter], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_timer], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtitle_upto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_roller]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_state], ebx
        jmp     __1064

__1063:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
        call    __fget_keys
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 2
        call    __fget_keys

__1064:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_fire]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        jne     __1063

__39:
        jmp     __l_2skipback

__1058:

__1057:
        jmp     __977

__l_2updatetitle:

__28:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1
        call    __fupdateletters
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vroll_state]
        mov     dword ptr [ebp-40H], ebx
        cmp     dword ptr [ebp-40H], 0
        je      __1066
        cmp     dword ptr [ebp-40H], 1
        je      __1067
        cmp     dword ptr [ebp-40H], 4
        je      __1067
        cmp     dword ptr [ebp-40H], 5
        je      __1067
        cmp     dword ptr [ebp-40H], 99
        je      __1067
        jmp     __1065

__1066:
        call    __fupdate_hills
        call    __fupdate_back_elements
        sub     esp, 8
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsmoke_ring
        call    ___bbObjEachFirst
        and     eax, eax
        je      __41

__1068:
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      ebx, eax
        and     ebx, ebx
        je      __1069
        mov     ebx, 0
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1069:
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 6
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 7
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1070
        sub     esp, 4
        mov     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1070:
        sub     esp, 4
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1068

__41:
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tmoon
        call    ___bbObjEachFirst
        and     eax, eax
        je      __42

__1071:
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-48H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        neg     ebx
        sar     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-188H]
        neg     esi
        sar     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1072
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1072:
        sub     esp, 4
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1071

__42:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 4000
        call    __frand
        cmp     eax, 1
        jne     __1073
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3256877056
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1055286886
        mov     dword ptr [esp+4H], 1057803469
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 150
        mov     dword ptr [esp+4H], 300
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1073:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 1500
        call    __frand
        cmp     eax, 1
        jne     __1074
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3256877056
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1048576000
        mov     dword ptr [esp+4H], 1051931443
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 150
        mov     dword ptr [esp+4H], 300
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__1074:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 600
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_timer], 1500
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        sete    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1075
        mov     dword ptr [ebp-8H], 1
        jmp     __1076

__1077:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 200
        call    __frand
        add     eax, 960
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -9
        mov     dword ptr [esp+4H], -6
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 300
        mov     dword ptr [esp+4H], 400
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 0
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        mov     ebx, 35
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 4
        call    __frand
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 16
        call    __frand
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 3
        call    __frand
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        mov     ebx, 11
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __1078
        mov     ebx, 36
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1058642330
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1058642330
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1133903872
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1078:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 25
        call    __frand
        cmp     eax, 1
        jne     __1079
        jmp     __43

__1079:
        add     dword ptr [ebp-8H], 1

__1076:
        cmp     dword ptr [ebp-8H], 50
        jle     __1077

__43:

__1075:
        cmp     dword ptr [ebp-2CH], 0
        jne     __1080
        add     dword ptr [ebp-50H], 1
        cmp     dword ptr [ebp-50H], 11
        jne     __1081
        mov     dword ptr [ebp-50H], 1

__1081:
        mov     dword ptr [ebp-54H], -3000
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx

__1080:
        add     dword ptr [ebp-2CH], 1
        cmp     dword ptr [ebp-54H], 100
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-2CH], 500
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1082
        add     dword ptr [ebp-54H], 20

__1082:
        cmp     dword ptr [ebp-2CH], 500
        jle     __1083
        mov     ebx, 1
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx

__1083:
        cmp     dword ptr [ebp-2CH], 600
        jle     __1084
        mov     dword ptr [ebp-2CH], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtarget_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtarget_im], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtargloaded], 0

__1084:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 9
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1085
        mov     dword ptr [ebp-8H], 1
        jmp     __1086

__1087:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        sub     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        sub     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 1
        sub     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awateroff]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awater_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1088
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        sub     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        sub     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     dword ptr [esi], ebx

__1088:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1049750405
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awateroff]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awater_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1089
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     dword ptr [esi], ebx

__1089:
        add     dword ptr [ebp-8H], 1

__1086:
        cmp     dword ptr [ebp-8H], 3
        jle     __1087

__44:

__1085:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vscroll_timer], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vscroll_timer], 9
        jne     __1090
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_timer], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tscroll_letter
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 640
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vscroll_counter]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp], eax
        call    __fasc
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 32
        jne     __1091
        sub     esp, 4
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_2skipconve

__1091:
        mov     eax, dword ptr [ebp-58H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 64
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 91
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1092
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 65
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1092:
        mov     eax, dword ptr [ebp-58H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 47
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 58
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1093
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 22
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1093:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 42
        jne     __1094
        mov     ebx, 36
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1094:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 33
        jne     __1095
        mov     ebx, 37
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1095:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 40
        jne     __1096
        mov     ebx, 38
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1096:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 41
        jne     __1097
        mov     ebx, 39
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1097:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 43
        jne     __1098
        mov     ebx, 40
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1098:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 63
        jne     __1099
        mov     ebx, 41
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1099:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 46
        jne     __1100
        mov     ebx, 42
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1100:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 34
        jne     __1101
        mov     ebx, 43
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1101:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 94
        jne     __1102
        mov     ebx, 44
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1102:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 37
        jne     __1103
        mov     ebx, 45
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1103:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 36
        jne     __1104
        mov     ebx, 46
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1104:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 38
        jne     __1105
        mov     ebx, 47
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1105:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 45
        jne     __1106
        mov     ebx, 48
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1106:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 58
        jne     __1107
        mov     ebx, 49
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1107:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 61
        jne     __1108
        mov     ebx, 50
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __l_2skipconve

__1108:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 44
        jne     __1109
        mov     ebx, 51
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1109:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 51
        jle     __1110
        mov     ebx, 0
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__l_2skipconve:

__1110:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vscroll_counter], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vscroll_counter], eax
        jl      __1111
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vscroll_counter], 1

__1111:

__1090:
        sub     esp, 8
        lea     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tscroll_letter
        call    ___bbObjEachFirst
        and     eax, eax
        je      __45

__1112:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        sub     ebx, 3
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-58H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1145569280
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1113
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1113:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jge     __1114
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1114:
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -30
        jge     __1115
        sub     esp, 4
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1115:
        sub     esp, 4
        lea     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1112

__45:
        jmp     __1065

__1067:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        je      __1116
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmhit]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx

__1116:
        sub     esp, 8
        lea     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __ttitle_cloud
        call    ___bbObjEachFirst
        and     eax, eax
        je      __46

__1117:
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1118
        mov     eax, dword ptr [ebp-34H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3272998912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1145405440
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1119
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __1120
        mov     ebx, 3272998912
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1036831949
        mov     dword ptr [esp+4H], 1056964608
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        jmp     __1121

__1120:
        mov     ebx, 1145405440
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1090519040
        mov     dword ptr [esp+4H], -1110651699
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax

__1121:

__1119:
        jmp     __1122

__1118:
        mov     eax, dword ptr [ebp-34H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3264610304
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1123
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        mov     ebx, 1141473280
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax

__1123:

__1122:
        sub     esp, 4
        lea     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1117

__46:
        jmp     __1065

__1065:
        ret

__l_2rendertitle:
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vstippletoggle]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstippletoggle], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vroll_state]
        mov     dword ptr [ebp-5CH], ebx
        cmp     dword ptr [ebp-5CH], 0
        je      __1125
        cmp     dword ptr [ebp-5CH], 1
        je      __1126
        cmp     dword ptr [ebp-5CH], 4
        je      __1126
        cmp     dword ptr [ebp-5CH], 5
        je      __1126
        cmp     dword ptr [ebp-5CH], 99
        je      __1126
        cmp     dword ptr [ebp-5CH], 3
        je      __1127
        jmp     __1124

__1125:
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 3
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrander], eax
        mov     dword ptr [ebp-8H], 1
        jmp     __1128

__1129:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 30
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arands]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__1128:
        cmp     dword ptr [ebp-8H], 10
        jle     __1129

__48:
        call    __frender_bg
        call    __frendermenu
        sub     esp, 8
        lea     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tscroll_letter
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjLast
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore

__1130:
        sub     esp, 8
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        je      __1131
        mov     eax, dword ptr [ebp-58H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1132
        sub     esp, 16
        mov     eax, 1147207680
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 455
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        call    __fmikedrawimage

__1132:
        sub     esp, 8
        lea     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-58H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore

__1131:
        sub     esp, 8
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        jne     __1130

__49:
        sub     esp, 16
        mov     dword ptr [esp+8H], 110
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 320
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtitle_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __1124

__1126:
        mov     dword ptr [ebp-10H], 7
        jmp     __1133

__1134:
        mov     dword ptr [ebp-8H], 0
        jmp     __1135

__1136:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-10H]
        sub     ebx, 7
        shl     ebx, 5
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskystrip_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        add     dword ptr [ebp-8H], 32

__1135:
        cmp     dword ptr [ebp-8H], 608
        jle     __1136

__51:
        add     dword ptr [ebp-10H], 1

__1133:
        cmp     dword ptr [ebp-10H], 21
        jle     __1134

__50:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        je      __1137
        sub     esp, 16
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 440
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__1137:
        mov     dword ptr [ebp-8H], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __ttitle_cloud
        call    ___bbObjEachFirst
        and     eax, eax
        je      __52

__1138:
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1139
        sub     esp, 16
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-34H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__1139:
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jge     __1140
        sub     esp, 16
        mov     ebx, dword ptr [ebp-34H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-34H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__1140:
        cmp     dword ptr [ebp-8H], 1
        jne     __1141
        mov     dword ptr [ebp-8H], 2
        jmp     __1142

__1141:
        mov     dword ptr [ebp-8H], 1

__1142:
        sub     esp, 4
        lea     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1138

__52:
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 0
        call    __fcolor
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        je      __1143
        mov     dword ptr [ebp-8H], 64
        jmp     __1144

__1145:
        mov     dword ptr [ebp-10H], 50
        jmp     __1146

__1147:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        add     dword ptr [ebp-10H], 64

__1146:
        cmp     dword ptr [ebp-10H], 450
        jle     __1147

__54:
        add     dword ptr [ebp-8H], 64

__1144:
        cmp     dword ptr [ebp-8H], 608
        jle     __1145

__53:
        sub     esp, 16
        mov     dword ptr [esp+8H], 607
        mov     dword ptr [esp+0CH], 18
        mov     dword ptr [esp+4H], 18
        mov     dword ptr [esp], 32
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 607
        mov     dword ptr [esp+0CH], 465
        mov     dword ptr [esp+4H], 465
        mov     dword ptr [esp], 32
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+0CH], 465
        mov     dword ptr [esp+4H], 18
        mov     dword ptr [esp], 32
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 607
        mov     dword ptr [esp+0CH], 465
        mov     dword ptr [esp+4H], 18
        mov     dword ptr [esp], 607
        call    __fline
        jmp     __1148

__1143:
        call    __fdonagstuff

__1148:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 4
        jne     __1149
        sub     esp, 16
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+0CH], 8
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 300
        mov     dword ptr [esp+0CH], 12
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 350
        mov     dword ptr [esp+0CH], 16
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 400
        mov     dword ptr [esp+0CH], 18
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__1149:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 5
        jne     __1150
        sub     esp, 16
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+0CH], 3
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+0CH], 6
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 295
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 95
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 300
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+4H], 110
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 295
        mov     dword ptr [esp+0CH], 7
        mov     dword ptr [esp+4H], 105
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 350
        mov     dword ptr [esp+0CH], 9
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 400
        mov     dword ptr [esp+0CH], 17
        mov     dword ptr [esp+4H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__1150:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 2
        call    ___bbMod
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstip], eax
        jmp     __1124

__1127:
        sub     esp, 16
        mov     dword ptr [esp+8H], 240
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 320
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vworld_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        jmp     __1124

__1124:
        call    __fdrawletters
        call    __fdraw_splinters
        call    __fdomouse
        call    __fdo_flip
        ret

        call    __fend
        sub     esp, 4
        mov     dword ptr [esp], 3
; Note: Function does not end with ret or jmp
        call    __ffastfree_font

__l_2initialise:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 0
        jne     __1151
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtitle_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_im], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jge     __1152
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffree_level_images
        jmp     __1153

__1152:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __1154
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffree_level_images
        jmp     __1155

__1154:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __1156
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffree_level_images
        jmp     __1157

__1156:
        sub     esp, 4
        mov     dword ptr [esp], 4
        call    __ffree_level_images

__1157:

__1155:

__1153:

__1151:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 2
        jne     __1158
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vworld_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vworld_im], 0

__1158:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 99
        jne     __1159
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vnag_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnag_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsmall_logo]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsmall_logo], 0

__1159:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vroll_state], 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1160
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx

__1160:
        sub     esp, 4
        call    __fmillisecs
        mov     dword ptr [esp], eax
        call    __fseedrnd
        call    __fdelete_all
        call    __fkill_hills
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtargloaded], 1
        jne     __1161
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtarget_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtarget_im], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtargloaded], 0

__1161:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplanecounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vkillthrusters], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtraincounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnuffz], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__verupt], 0
        sub     esp, 4
        mov     eax, offset __ahillpop
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __ahillpop
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahillpop
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmountedguns], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__voldcounter], 0
        sub     esp, 4
        mov     eax, offset __awaterfaller
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __awaterfaller
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __awaterfaller
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __adoubler
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __adoubler
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __adoubler
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     ebx, 100
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     dword ptr [esi], ebx
        mov     ebx, 229
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx
        mov     ebx, 100
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     dword ptr [esi], ebx
        mov     ebx, 277
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlives_off], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vexplod], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vspecial], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirewait], 80
        sub     esp, 4
        mov     eax, offset __ahighest_score
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __ahighest_score
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahighest_score
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhoming_speed], 1082549862
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], -50
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-60H], 0
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnocollect], 1
        mov     dword ptr [ebp-8H], 1
        jmp     __1162

__1163:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__1162:
        cmp     dword ptr [ebp-8H], 9
        jle     __1163

__55:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpshotno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__venemyno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vexplosionno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__veshotno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshardno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstarno], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotspeed], 1077936128
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotchance], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmaxshot], 8
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotwait], 80
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcredits], 2
        call    __fmillisecs
        mov     dword ptr [ebp-64H], eax
        mov     dword ptr [ebp-68H], 60
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpt1], 1142947840
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpt2], 1165623296
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmfader], 100
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdataevent], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__voldcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsecs], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims_hit], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsecs_hit], 0
        sub     esp, 24
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 23
        mov     dword ptr [esp+4H], 85
        mov     dword ptr [esp], 0
        call    __fmakecounter
        sub     esp, 24
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 23
        mov     dword ptr [esp+4H], 387
        mov     dword ptr [esp], 1
        call    __fmakecounter
        call    __ffree_all
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecordupto], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 0
        je      __1164
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fseedrnd

__1164:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 1
        jle     __1165
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdemoupto]
        mov     dword ptr [esp], eax
        call    __fload_recording

__1165:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 0
        jne     __1166
        call    __l_2select_screen

__1166:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirewait], 80
        call    __finit_level
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vframerate], 60
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpodcounter], 1065353216
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vspinster], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirstplane], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounter2], 0
        sub     esp, 4
        mov     eax, offset __arands
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __arands
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __arands
        mov     dword ptr [esp], eax
        call    ___bbDimArray

__1167:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 0
        call    __favailvidmem
        cmp     eax, 2000000
        jle     __1168
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 2

__1168:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vframerate], 30
        jne     __1169
        call    __l_2updategame
        call    __fupdate_splinters
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 3
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrander], eax
        mov     dword ptr [ebp-8H], 1
        jmp     __1170

__1171:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 30
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arands]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__1170:
        cmp     dword ptr [ebp-8H], 10
        jle     __1171

__57:

__1169:
        call    __l_2updategame
        call    __fupdate_splinters
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 3
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrander], eax
        mov     dword ptr [ebp-8H], 1
        jmp     __1172

__1173:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 30
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arands]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__1172:
        cmp     dword ptr [ebp-8H], 10
        jle     __1173

__58:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnuffz], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1174
        call    __l_2rendergame

__1174:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vpaused], 0
        jle     __1175
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vpaused], 1

__1175:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fkeydown
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vghpause], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vpaused], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        or      ebx, esi
        and     eax, ebx
        and     eax, eax
        je      __1176
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vghpause], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 0
        jne     __1177
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpaused], 60
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffastload_font
        mov     ebx, 0
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 6
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+4H], 250
        sub     esp, 4
        mov     eax, offset __1178
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 6
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 3
        mov     dword ptr [esp+8H], 230
        mov     dword ptr [esp+4H], 215
        sub     esp, 4
        mov     eax, offset __1179
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 6
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 3
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+4H], 205
        sub     esp, 4
        mov     eax, offset __1180
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        call    __fupdateletters
        jmp     __1182

__1182:

__1181:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fkeydown
        and     eax, eax
        jne     __1181

__59:
        call    __l_2rendergame

__1183:
        mov     dword ptr [ebp-6CH], 0
        mov     dword ptr [ebp-8H], 1
        jmp     __1184

__1185:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fkeydown
        and     eax, eax
        je      __1186
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [ebp-6CH], ebx

__1186:
        add     dword ptr [ebp-8H], 1

__1184:
        cmp     dword ptr [ebp-8H], 237
        jle     __1185

__61:
        mov     dword ptr [ebp-8H], 0
        jmp     __1187

__1188:
        mov     dword ptr [ebp-10H], 1
        jmp     __1189

__1190:
        sub     esp, 8
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    __fjoydown
        and     eax, eax
        je      __1191
        mov     dword ptr [ebp-6CH], 300

__1191:
        add     dword ptr [ebp-10H], 1

__1189:
        cmp     dword ptr [ebp-10H], 4
        jle     __1190

__63:
        add     dword ptr [ebp-8H], 1

__1187:
        cmp     dword ptr [ebp-8H], 1
        jle     __1188

__62:
        cmp     dword ptr [ebp-6CH], 1
        jne     __1192
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 9999
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 2

__1192:
        call    __l_2rendergame
        cmp     dword ptr [ebp-6CH], 0
        jle     __1183

__60:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        mov     dword ptr [ebp-70H], ebx

__1193:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
        call    __fget_keys
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 2
        call    __fget_keys
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_fire]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1193

__64:
        mov     ebx, 1
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-70H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], ebx
        jmp     __1194

__1177:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 999

__1194:

__1176:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 999
        jl      __1167

__l_2game_over:

__56:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jge     __1195
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffree_level_images
        jmp     __1196

__1195:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __1197
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffree_level_images
        jmp     __1198

__1197:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __1199
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffree_level_images
        jmp     __1200

__1199:
        sub     esp, 4
        mov     dword ptr [esp], 4
        call    __ffree_level_images

__1200:

__1198:

__1196:
        call    __fdelete_all
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __1201

__1202:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__1201:
        cmp     dword ptr [ebp-8H], 10
        jle     __1202

__65:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 999
        je      __1203
        call    __fzzz
        mov     dword ptr [ebp-8H], 0
        jmp     __1204

__1205:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 60
        sub     esi, dword ptr [ebp-8H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fdelay
        add     dword ptr [ebp-8H], 1

__1204:
        cmp     dword ptr [ebp-8H], 60
        jle     __1205

__66:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahighest_score]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1206
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1207
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 0
        call    __fenter_name

__1207:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1208
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 1
        call    __fenter_name

__1208:
        jmp     __1209

__1206:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1210
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 0
        call    __fenter_name

__1210:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1211
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 1
        call    __fenter_name

__1211:

__1209:
        call    __fwritedatafile

__1203:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 9999
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1212
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_state], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fstopchannel
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fmikefreesound
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmusic], 0
        je      __1213
        sub     esp, 8
        mov     eax, offset __1214
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicchannel], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__1213:

__1212:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 0
        call    __fshatter
        jmp     __l_2title

; Note: Function does not end with ret or jmp
        call    __fend

__l_2select_screen:
        call    __l_2setgfx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmusic], 0
        je      __1215
        mov     dword ptr [ebp-8H], 0
        jmp     __1216

__1217:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 60
        sub     esi, dword ptr [ebp-8H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fdelay
        add     dword ptr [ebp-8H], 1

__1216:
        cmp     dword ptr [ebp-8H], 60
        jle     __1217

__67:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fstopchannel
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fmikefreesound

__1215:
        sub     esp, 8
        mov     eax, offset __1218
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicchannel], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        mov     dword ptr [ebp-74H], ebx
        cmp     dword ptr [ebp-78H], 1
        jne     __1219
        mov     dword ptr [ebp-7CH], 1
        jmp     __1220

__1219:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlevel]
        mov     ecx, 5
        cdq
        idiv    ecx
        add     eax, 1
        mov     dword ptr [ebp-7CH], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbroken]
        cmp     dword ptr [ebp-7CH], ebx
        jle     __1221
        mov     ebx, dword ptr [ebp-7CH]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbroken], ebx
        call    __fwritedatafile

__1221:

__1220:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffastload_font
        sub     esp, 8
        mov     eax, offset __1222
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vworld_im], eax
        sub     esp, 4
        mov     eax, offset __aleg_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 3
        mov     esi, offset __aleg_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aleg_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __1223

__1224:
        sub     esp, 28
        mov     eax, offset __1225
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 1
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1226
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleg_im]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__1223:
        cmp     dword ptr [ebp-8H], 3
        jle     __1224

__68:
        sub     esp, 4
        mov     eax, offset __asel_im
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 4
        mov     esi, offset __asel_im
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asel_im
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 0
        jmp     __1227

__1228:
        sub     esp, 28
        mov     eax, offset __1229
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 1
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1230
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        add     dword ptr [ebp-8H], 1

__1227:
        cmp     dword ptr [ebp-8H], 4
        jle     __1228

__69:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 47
        sub     esp, 4
        mov     eax, offset __1231
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        jmp     __1233

__1232:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
        call    __fget_keys
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 2
        call    __fget_keys

__1233:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_fire]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        jne     __1232

__70:
        mov     dword ptr [ebp-80H], 0
        jmp     __1235

__1234:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], 0
        call    __fupdateletters
        sub     esp, 16
        mov     dword ptr [esp+8H], 240
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 320
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vworld_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 1
        jle     __1236
        sub     esp, 16
        mov     dword ptr [esp+8H], 183
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 206
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleg_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__1236:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 2
        jle     __1237
        sub     esp, 16
        mov     dword ptr [esp+8H], 299
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 164
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleg_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__1237:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 3
        jle     __1238
        sub     esp, 16
        mov     dword ptr [esp+8H], 406
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 247
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleg_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__1238:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 4
        jle     __1239
        sub     esp, 16
        mov     dword ptr [esp+8H], 434
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 408
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleg_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__1239:
        mov     eax, 254
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        sub     eax, ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        sar     ebx, 1
        add     ebx, 254
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], ebx
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 136
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asel_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-188H]
        sar     esi, 1
        sub     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], ebx
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        sar     ebx, 1
        add     ebx, 136
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], ebx
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1240
        sub     esp, 16
        mov     dword ptr [esp+8H], 136
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 254
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __1241
        mov     dword ptr [ebp-7CH], 1
        mov     dword ptr [ebp-80H], 1

__1241:
        jmp     __1242

__1240:
        mov     eax, 161
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        sub     eax, ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 1
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        add     eax, 161
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 229
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asel_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        sar     esi, 1
        sub     eax, esi
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setg    al
        movzx   eax, al
        and     ebx, eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        sar     eax, 1
        add     eax, 229
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1243
        sub     esp, 16
        mov     dword ptr [esp+8H], 229
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 161
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __1244
        mov     dword ptr [ebp-7CH], 2
        mov     dword ptr [ebp-80H], 1

__1244:
        jmp     __1245

__1243:
        mov     eax, 171
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        sub     eax, ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 2
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        add     eax, 171
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 367
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asel_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        sar     esi, 1
        sub     eax, esi
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setg    al
        movzx   eax, al
        and     ebx, eax
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        sar     eax, 1
        add     eax, 367
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1246
        sub     esp, 16
        mov     dword ptr [esp+8H], 367
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 171
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __1247
        mov     dword ptr [ebp-7CH], 3
        mov     dword ptr [ebp-80H], 1

__1247:
        jmp     __1248

__1246:
        mov     eax, 322
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        sub     eax, ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 3
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        add     eax, 322
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 438
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asel_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        sar     esi, 1
        sub     eax, esi
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setg    al
        movzx   eax, al
        and     ebx, eax
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        sar     eax, 1
        add     eax, 438
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1249
        sub     esp, 16
        mov     dword ptr [esp+8H], 438
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 322
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __1250
        mov     dword ptr [ebp-7CH], 4
        mov     dword ptr [ebp-80H], 1

__1250:
        jmp     __1251

__1249:
        mov     eax, 492
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asel_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        sub     eax, ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbroken], 4
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        add     eax, 492
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 423
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asel_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        sar     esi, 1
        sub     eax, esi
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setg    al
        movzx   eax, al
        and     ebx, eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        sar     eax, 1
        add     eax, 423
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], eax
        setl    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1252
        sub     esp, 16
        mov     dword ptr [esp+8H], 423
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 492
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asel_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __1253
        mov     dword ptr [ebp-7CH], 5
        mov     dword ptr [ebp-80H], 1

__1253:

__1252:

__1251:

__1248:

__1245:

__1242:
        call    __fdrawletters
        call    __fdomouse
        call    __fdo_flip

__1235:
        cmp     dword ptr [ebp-80H], 0
        je      __1234

__71:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], 1
        call    __fshatter
        mov     ebx, 2
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 0
        cmp     dword ptr [ebp-7CH], 2
        jne     __1254
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 5

__1254:
        cmp     dword ptr [ebp-7CH], 3
        jne     __1255
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 10

__1255:
        cmp     dword ptr [ebp-7CH], 4
        jne     __1256
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 15

__1256:
        call    __fzzz
        mov     dword ptr [ebp-8H], 0
        jmp     __1257

__1258:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 60
        sub     esi, dword ptr [ebp-8H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fdelay
        add     dword ptr [ebp-8H], 1

__1257:
        cmp     dword ptr [ebp-8H], 60
        jle     __1258

__72:
        ret

__l_2updategame:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirstplane], 0
        sub     esp, 4
        mov     eax, offset __aex_play
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __aex_play
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aex_play
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 4
        mov     eax, offset __abloop_play
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __abloop_play
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abloop_play
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcheating], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     dword ptr [esp], 156
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 9
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1259
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcredits], 1
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fplaysounds

__1259:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 2
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 56
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1260
        mov     ebx, 2
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__1260:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 3
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 56
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1261
        mov     ebx, 5
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__1261:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 4
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 56
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1262
        mov     ebx, 6
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__1262:
IFDEF PATCHES
        cmp     dword ptr [__vfree_version], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 6
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 56
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1262_2
        mov     ebx, 7
        mov     esi, 1
        shl     esi, 2
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, 2
        shl     esi, 2
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 1
        shl     esi, 2
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 2
        shl     esi, 2
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
__1262_2:
ENDIF
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 5
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [esp], 56
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1263
        mov     ebx, 4
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1250
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__1263:
        cmp     dword ptr [ebp-60H], 0
        jle     __1264
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-60H], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1265
        mov     dword ptr [ebp-60H], 900

__1265:
        mov     ebx, dword ptr [ebp-60H]
        mov     dword ptr [ebp-84H], ebx
        cmp     dword ptr [ebp-84H], 1
        je      __1267
        cmp     dword ptr [ebp-84H], 110
        je      __1268
        cmp     dword ptr [ebp-84H], 111
        je      __1269
        cmp     dword ptr [ebp-84H], 112
        je      __1270
        cmp     dword ptr [ebp-84H], 220
        je      __1271
        cmp     dword ptr [ebp-84H], 280
        je      __1271
        cmp     dword ptr [ebp-84H], 340
        je      __1271
        cmp     dword ptr [ebp-84H], 400
        je      __1271
        cmp     dword ptr [ebp-84H], 460
        je      __1271
        cmp     dword ptr [ebp-84H], 520
        je      __1271
        cmp     dword ptr [ebp-84H], 580
        je      __1271
        cmp     dword ptr [ebp-84H], 640
        je      __1271
        cmp     dword ptr [ebp-84H], 700
        je      __1271
        cmp     dword ptr [ebp-84H], 760
        je      __1271
        cmp     dword ptr [ebp-84H], 850
        je      __1272
        cmp     dword ptr [ebp-84H], 851
        je      __1273
        cmp     dword ptr [ebp-84H], 950
        je      __1274
        cmp     dword ptr [ebp-84H], 1250
        je      __1275
        cmp     dword ptr [ebp-84H], 1400
        je      __1276
        cmp     dword ptr [ebp-84H], 2999
        je      __1277
        cmp     dword ptr [ebp-84H], 3000
        je      __1278
        cmp     dword ptr [ebp-84H], 3001
        je      __1279
        jmp     __1266

__1267:
        mov     ebx, 0
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 10
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 220
        mov     dword ptr [esp+4H], 200
        sub     esp, 4
        mov     eax, offset __1280
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 50
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 255
        mov     dword ptr [esp+4H], 293
        sub     esp, 4
        mov     eax, offset __1281
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1266

__1268:
        sub     esp, 24
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 10
        mov     dword ptr [esp+8H], 255
        mov     dword ptr [esp+4H], 293
        mov     dword ptr [esp], 8
        call    __fmakecounter
        jmp     __1266

__1269:
        mov     ebx, 2
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        jmp     __1266

__1270:
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 230
        mov     dword ptr [esp+4H], -500
        sub     esp, 4
        mov     eax, offset __1282
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1266

__1271:
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        jmp     __1266

__1272:
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 255
        mov     dword ptr [esp+4H], 293
        sub     esp, 4
        mov     eax, offset __1283
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1266

__1273:
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        jmp     __1266

__1274:
        mov     ebx, 0
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 10
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 220
        mov     dword ptr [esp+4H], 200
        sub     esp, 4
        mov     eax, offset __1284
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1266

__1275:
        mov     ebx, 1
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        jmp     __1266

__1276:
        jmp     __l_2game_over

        jmp     __1266

__1277:
        sub     dword ptr [ebp-60H], 1
        jmp     __1266

__1278:
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __1285
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1286
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __1287

__1285:
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1288
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1289
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __1290

__1288:
        sub     esp, 20
        mov     eax, offset __1291
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1290:

__1287:
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 255
        mov     dword ptr [esp+4H], 293
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1266

__1279:
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-60H], -1
        jmp     __1266

__1266:
        add     dword ptr [ebp-60H], 1

__1264:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-60H], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1292
        mov     dword ptr [ebp-60H], 1

__1292:
        jmp     __1294

__1294:

__1293:
        sub     esp, 4
        mov     dword ptr [esp], 57
        call    __fkeydown
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vpause], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     dword ptr [esp], 83
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        jne     __1293

__l_2level_scripting:

__74:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcounta], 1
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        or      ebx, esi
        and     ebx, ebx
        je      __1295
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcounter], 1

__l_2recheck:
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__voldcounter]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcounter], ebx
        jne     __1296
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__voldcounter], ebx
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-8CH], ebx
        cmp     dword ptr [ebp-8CH], 93
        je      __1298
        cmp     dword ptr [ebp-8CH], 94
        je      __1299
        cmp     dword ptr [ebp-8CH], 2
        je      __1300
        cmp     dword ptr [ebp-8CH], 3
        je      __1301
        cmp     dword ptr [ebp-8CH], 23
        je      __1302
        cmp     dword ptr [ebp-8CH], 24
        je      __1303
        cmp     dword ptr [ebp-8CH], 28
        je      __1304
        cmp     dword ptr [ebp-8CH], 29
        je      __1305
        cmp     dword ptr [ebp-8CH], 44
        je      __1306
        cmp     dword ptr [ebp-8CH], 65
        je      __1307
        cmp     dword ptr [ebp-8CH], 66
        je      __1308
        cmp     dword ptr [ebp-8CH], 45
        je      __1309
        cmp     dword ptr [ebp-8CH], -1643831368
        je      __1310
        cmp     dword ptr [ebp-8CH], 53
        je      __1311
        cmp     dword ptr [ebp-8CH], 54
        je      __1312
        cmp     dword ptr [ebp-8CH], 55
        je      __1313
        cmp     dword ptr [ebp-8CH], 57
        je      __1314
        cmp     dword ptr [ebp-8CH], 58
        je      __1315
        cmp     dword ptr [ebp-8CH], 1
        je      __1316
        cmp     dword ptr [ebp-8CH], 30
        je      __1317
        cmp     dword ptr [ebp-8CH], 4
        je      __1318
        cmp     dword ptr [ebp-8CH], 5
        je      __1319
        cmp     dword ptr [ebp-8CH], 6
        je      __1320
        cmp     dword ptr [ebp-8CH], 69
        je      __1321
        cmp     dword ptr [ebp-8CH], 10
        je      __1322
        cmp     dword ptr [ebp-8CH], 11
        je      __1323
        cmp     dword ptr [ebp-8CH], 37
        je      __1324
        cmp     dword ptr [ebp-8CH], 38
        je      __1325
        cmp     dword ptr [ebp-8CH], 40
        je      __1326
        cmp     dword ptr [ebp-8CH], 39
        je      __1327
        cmp     dword ptr [ebp-8CH], 41
        je      __1328
        cmp     dword ptr [ebp-8CH], 64
        je      __1329
        cmp     dword ptr [ebp-8CH], 46
        je      __1330
        cmp     dword ptr [ebp-8CH], 48
        je      __1331
        cmp     dword ptr [ebp-8CH], 49
        je      __1332
        cmp     dword ptr [ebp-8CH], 52
        je      __1333
        cmp     dword ptr [ebp-8CH], 71
        je      __1334
        cmp     dword ptr [ebp-8CH], 72
        je      __1335
        cmp     dword ptr [ebp-8CH], 76
        je      __1336
        cmp     dword ptr [ebp-8CH], 78
        je      __1337
        cmp     dword ptr [ebp-8CH], 79
        je      __1338
        cmp     dword ptr [ebp-8CH], 81
        je      __1339
        cmp     dword ptr [ebp-8CH], 82
        je      __1340
        cmp     dword ptr [ebp-8CH], 83
        je      __1341
        cmp     dword ptr [ebp-8CH], 84
        je      __1342
        cmp     dword ptr [ebp-8CH], 74
        je      __1343
        cmp     dword ptr [ebp-8CH], 354354365
        je      __1344
        cmp     dword ptr [ebp-8CH], 56
        je      __1345
        cmp     dword ptr [ebp-8CH], 63
        je      __1346
        cmp     dword ptr [ebp-8CH], 51
        je      __1347
        cmp     dword ptr [ebp-8CH], 47
        je      __1348
        cmp     dword ptr [ebp-8CH], 67
        je      __1349
        cmp     dword ptr [ebp-8CH], 68
        je      __1350
        cmp     dword ptr [ebp-8CH], 70
        je      __1351
        cmp     dword ptr [ebp-8CH], 73
        je      __1352
        cmp     dword ptr [ebp-8CH], 34
        je      __1353
        cmp     dword ptr [ebp-8CH], 36
        je      __1354
        cmp     dword ptr [ebp-8CH], 43
        je      __1355
        cmp     dword ptr [ebp-8CH], 75
        je      __1356
        cmp     dword ptr [ebp-8CH], 80
        je      __1357
        cmp     dword ptr [ebp-8CH], 35
        je      __1358
        cmp     dword ptr [ebp-8CH], 92
        je      __1359
        cmp     dword ptr [ebp-8CH], 7
        je      __1360
        cmp     dword ptr [ebp-8CH], 8
        je      __1361
        cmp     dword ptr [ebp-8CH], 50
        je      __1362
        cmp     dword ptr [ebp-8CH], 20
        je      __1363
        cmp     dword ptr [ebp-8CH], 16
        je      __1364
        cmp     dword ptr [ebp-8CH], 17
        je      __1365
        cmp     dword ptr [ebp-8CH], 18
        je      __1366
        cmp     dword ptr [ebp-8CH], 21
        je      __1367
        cmp     dword ptr [ebp-8CH], 85
        je      __1368
        cmp     dword ptr [ebp-8CH], 88
        je      __1369
        cmp     dword ptr [ebp-8CH], 86
        je      __1370
        cmp     dword ptr [ebp-8CH], 22
        je      __1371
        cmp     dword ptr [ebp-8CH], 87
        je      __1372
        cmp     dword ptr [ebp-8CH], 25
        je      __1373
        cmp     dword ptr [ebp-8CH], 90
        je      __1374
        cmp     dword ptr [ebp-8CH], 26
        je      __1375
        cmp     dword ptr [ebp-8CH], 60
        je      __1376
        cmp     dword ptr [ebp-8CH], 89
        je      __1377
        cmp     dword ptr [ebp-8CH], 61
        je      __1378
        cmp     dword ptr [ebp-8CH], 62
        je      __1379
        cmp     dword ptr [ebp-8CH], 91
        je      __1380
        cmp     dword ptr [ebp-8CH], 597777777
        je      __1381
        cmp     dword ptr [ebp-8CH], 27
        je      __1382
        cmp     dword ptr [ebp-8CH], 9
        je      __1383
        cmp     dword ptr [ebp-8CH], 100
        je      __1384
        cmp     dword ptr [ebp-8CH], 12
        je      __1385
        cmp     dword ptr [ebp-8CH], 13
        je      __1386
        cmp     dword ptr [ebp-8CH], 15
        je      __1387
        mov     ebx, dword ptr [ebp-0ACH]
        cmp     dword ptr [ebp-8CH], ebx
        je      __1388
        cmp     dword ptr [ebp-8CH], 42
        je      __1389
        cmp     dword ptr [ebp-8CH], 33
        je      __1390
        jmp     __1297

__1298:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmfader], 0
        jne     __1391
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmfader], 100
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1392

__1391:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __1393
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1176256512
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vmfader]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__1393:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vmfader], 1
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vendcounter], 1

__1392:
        jmp     __1297

__1299:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __1394
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fstopchannel
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fmikefreesound
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1395
        sub     esp, 8
        mov     eax, offset __1396
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-28H], eax
        jmp     __1397

__1395:
        sub     esp, 8
        mov     eax, offset __1398
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-28H], eax

__1397:
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 4
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicchannel], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__1394:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1300:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1301:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1302:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1303:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1304:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1305:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1306:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vexplod], 0
        jne     __1399
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vspecial], 1

__1399:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1307:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayer_block]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1308:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, 0
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayer_block]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1309:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vspecial], 0
        jne     __1400
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vdataevent]
        add     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdataevent], ebx
        jmp     __1401

__1400:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vspecial], 0

__1401:
        jmp     __l_2recheck

        jmp     __1297

__1310:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdataevent], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__voldcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vlevel], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims_hit], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsecs], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsecs_hit], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vexplod], 0
        jmp     __l_2recheck

        jmp     __1297

__1311:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmountedguns], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1312:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahillpop]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1313:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahillpop]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1402
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1403

__1402:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vendcounter], 1

__1403:
        jmp     __1297

__1314:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcarload], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1315:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcarload], 10
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1316:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     dword ptr [ebp-8H], 1
        jmp     __1404

__1405:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 99
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        jg      __1406
        sub     esp, 40
        mov     dword ptr [esp], 1127481344
        mov     dword ptr [esp+4H], 1138819072
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 1
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1143275520
        mov     dword ptr [esp+4H], 1148846080
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_enemy
        mov     ebx, eax
        jmp     __1407

__1406:
        sub     esp, 40
        mov     dword ptr [esp], 1127481344
        mov     dword ptr [esp+4H], 1138819072
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 5
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1143275520
        mov     dword ptr [esp+4H], 1148846080
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_enemy
        mov     ebx, eax

__1407:
        add     dword ptr [ebp-8H], 1

__1404:
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __1405

__76:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1317:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 99
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 2
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        jg      __1408
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 1
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        jmp     __1409

__1408:
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 5
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__1409:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 3
        jmp     __l_2recheck

        jmp     __1297

__1318:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdataevent]
        add     eax, 2
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    eax, esi
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        add     eax, 660
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 3
        jmp     __l_2recheck

        jmp     __1297

__1319:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 2
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp], -1027080192
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1320:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp], -1027080192
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1321:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 19
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp], 1143930880
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1322:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+8H], 6
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    ebx, edi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdataevent]
        add     eax, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    eax, esi
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1323:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+8H], 7
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    ebx, edi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdataevent]
        add     eax, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    eax, esi
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1324:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 99
        call    __frand
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        jg      __1410
        sub     esp, 40
        mov     dword ptr [esp], 150
        mov     dword ptr [esp+4H], 450
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 8
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 650
        mov     dword ptr [esp+4H], 750
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_enemy
        mov     ebx, eax
        jmp     __1411

__1410:
        sub     esp, 40
        mov     dword ptr [esp], 150
        mov     dword ptr [esp+4H], 450
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 8
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 650
        mov     dword ptr [esp+4H], 750
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_enemy
        mov     ebx, eax

__1411:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1325:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 9
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1326:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 11
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1327:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 10
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp], -1027080192
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1328:
        sub     esp, 40
        mov     dword ptr [esp], 150
        mov     dword ptr [esp+4H], 450
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 12
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 700
        mov     dword ptr [esp+4H], 800
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_enemy
        mov     ebx, eax
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1329:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 12
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1330:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmake_balloon
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 3
        jmp     __l_2recheck

        jmp     __1297

__1331:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 13
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1332:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 2
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+8H], 14
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    ebx, edi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 3
        jmp     __l_2recheck

        jmp     __1297

__1333:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1334:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 20
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp], -1027080192
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1335:
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 21
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 1144586240
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1336:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 27
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1337:
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 28
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1338:
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 29
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1339:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 30
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1340:
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1341:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 32
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 4
        jmp     __l_2recheck

        jmp     __1297

__1342:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 33
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
        jmp     __l_2recheck

        jmp     __1297

__1343:
        sub     esp, 4
        mov     dword ptr [esp], 26
        call    __fplaysounds
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__verupt], 60
        mov     dword ptr [ebp-8H], 0
        jmp     __1412

__1413:
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 26
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fmake_enemy
        add     dword ptr [ebp-8H], 1

__1412:
        cmp     dword ptr [ebp-8H], 2
        jle     __1413

__77:
        mov     dword ptr [ebp-8H], 1
        jmp     __1414

__1415:
        sub     esp, 32
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        mov     ebx, 1088421888
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        sub     esp, 8
        mov     dword ptr [esp], 9
        mov     dword ptr [esp+4H], 16
        call    __frand
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [esp+14H], 1
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        mov     esi, 3240099840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     edi, 1090519040
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fdivp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], -2200
        mov     dword ptr [esp+4H], -1600
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 250
        mov     dword ptr [esp+4H], 900
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_bonus
        mov     ebx, eax
        add     dword ptr [ebp-8H], 1

__1414:
        cmp     dword ptr [ebp-8H], 6
        jle     __1415

__78:
        mov     dword ptr [ebp-10H], 3
        jmp     __1416

__1417:
        mov     dword ptr [ebp-8H], 1
        jmp     __1418

__1419:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 200
        mov     dword ptr [esp+4H], 950
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -800
        mov     dword ptr [esp+4H], -300
        call    __frand
        mov     ebx, 7
        sub     ebx, dword ptr [ebp-10H]
        imul    ebx, ebx, 300
        sub     eax, ebx
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        mov     ebx, 7
        sub     ebx, dword ptr [ebp-10H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        faddp   st(1), st(0)
        fchs
        mov     ebx, 1090519040
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], esi
        mov     ebx, 7
        sub     ebx, dword ptr [ebp-10H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], esi
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 2
        call    __frand
        mov     ebx, dword ptr [ebp-10H]
        sub     ebx, 3
        imul    ebx, ebx, 3
        add     ebx, 14
        add     ebx, eax
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 9
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__1418:
        cmp     dword ptr [ebp-8H], 10
        jle     __1419

__80:
        add     dword ptr [ebp-10H], 1

__1416:
        cmp     dword ptr [ebp-10H], 7
        jle     __1417

__79:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1344:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1345:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtraincounter], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-90H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tcar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtraincounter]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrain]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtraincounter]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrainbonus]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vtraincounter], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtraincounter], 12
        jne     __1420
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtraincounter], 0

__1420:
        mov     ebx, 1144913920
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 480
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx
        mov     ebx, 1056964608
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __1421
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5

__1421:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1422
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx

__1422:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1423
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx

__1423:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        jne     __1424
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1070973583
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -25
        mov     dword ptr [esp], -42
        call    __fmake_turret2
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], -25
        mov     dword ptr [esp], 36
        call    __fmake_turret2

__1424:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1425
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -20
        mov     dword ptr [esp], 51
        call    __fmake_turret2

__1425:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1346:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 5
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+18H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 6
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+1CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 4
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    ebx, edi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 2
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 18
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vdataevent]
        add     esi, 1
        mov     edi, offset __aleveldata
        add     edi, 12
        mov     edi, dword ptr [edi]
        imul    esi, edi
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __aleveldata
        add     eax, 12
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        imul    eax, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vlevel]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aleveldata]
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 7
        jmp     __l_2recheck

        jmp     __1297

__1347:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awaterfaller]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1348:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1057132380
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 2
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 4
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 5
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 6
        jmp     __l_2recheck

        jmp     __1297

__1349:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1143930880
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], -1110651699
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1350:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1144750080
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3196059648
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1351:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 2
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 3
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 4
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1426
        mov     ebx, 12
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1426:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 5
        jmp     __l_2recheck

        jmp     __1297

__1352:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3283353600
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1048576000
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 1140457472
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 13
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        jmp     __l_2recheck

        jmp     __1297

__1353:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3256877056
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1055286886
        mov     dword ptr [esp+4H], 1057803469
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1354:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3256877056
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1048576000
        mov     dword ptr [esp+4H], 1051931443
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1355:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-94H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tblimp
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 700
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1124859904
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1356:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     dword ptr [ebp-8H], 1
        jmp     __1428

__1427:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 200
        call    __frand
        add     eax, 960
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -9
        mov     dword ptr [esp+4H], -6
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 300
        mov     dword ptr [esp+4H], 400
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 0
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        mov     ebx, 35
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 4
        call    __frand
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 16
        call    __frand
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 3
        call    __frand
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        mov     ebx, 11
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __1429
        mov     ebx, 36
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1058642330
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1058642330
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1133903872
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1429:

__1428:
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __1427

__81:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1357:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 1147207680
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1136197632
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 45
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 13
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1358:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1142947840
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 5
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1148141568
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        add     ebx, 2
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1155211264
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1172291584
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1359:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 240
        mov     dword ptr [esp+4H], 230
        sub     esp, 4
        mov     eax, offset __1430
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1360:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlevel]
        mov     ecx, 5
        cdq
        idiv    ecx
        mov     dword ptr [ebp-98H], eax
        sub     esp, 20
        mov     eax, offset __1431
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-98H]
        add     ebx, 1
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+4H], 230
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlevel]
        mov     ebx, dword ptr [ebp-98H]
        imul    ebx, ebx, 5
        sub     eax, ebx
        add     eax, 1
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1432
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 233
        mov     dword ptr [esp+4H], 245
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vendcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1361:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlevel]
        mov     ecx, 5
        cdq
        idiv    ecx
        mov     dword ptr [ebp-98H], eax
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlevel]
        mov     ebx, dword ptr [ebp-98H]
        imul    ebx, ebx, 5
        sub     eax, ebx
        add     eax, 1
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1433
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 233
        mov     dword ptr [esp+4H], 245
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vendcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1362:
        sub     esp, 12
        mov     eax, offset __tenemy
        mov     dword ptr [esp], eax
        call    ___bbObjFirst
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        jne     __1434
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1435

__1434:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vendcounter], 1

__1435:
        jmp     __1297

__1363:
        sub     esp, 12
        mov     eax, offset __tenemyshot
        mov     dword ptr [esp], eax
        call    ___bbObjFirst
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     dword ptr [ebp-18CH], eax
        sub     esp, 4
        mov     ebx, offset __tground_target
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjFirst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18CH]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    ___bbObjCompare
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     dword ptr [ebp-18CH], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjFirst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18CH]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    ___bbObjCompare
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     dword ptr [ebp-18CH], eax
        sub     esp, 4
        mov     ebx, offset __tcar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjFirst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18CH]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    ___bbObjCompare
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     dword ptr [ebp-18CH], eax
        sub     esp, 4
        mov     ebx, offset __tbonus
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjFirst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18CH]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    ___bbObjCompare
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setl    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, esi
        mov     dword ptr [ebp-184H], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        cmp     esi, 1
        mov     eax, esi
        sete    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     edi, 2
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__adead]
        mov     edi, dword ptr [edi]
        cmp     edi, 200
        mov     eax, edi
        setl    al
        movzx   eax, al
        mov     edi, eax
        mov     eax, dword ptr [ebp-184H]
        and     esi, edi
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __1436
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 190
        sub     esp, 4
        mov     eax, offset __1437
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1438

__1436:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vendcounter], 1

__1438:
        jmp     __1297

__1364:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vprims_hit]
        imul    eax, eax, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vprims]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-98H], eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1439
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        cmp     dword ptr [ebp-98H], 100
        jge     __1440
        sub     esp, 20
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1441
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1440:
        cmp     dword ptr [ebp-98H], 10
        jge     __1442
        sub     esp, 20
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1443
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1442:
        sub     esp, 28
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-98H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1444
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1365:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsecs_hit]
        imul    eax, eax, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vsecs]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-98H], eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1445
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        cmp     dword ptr [ebp-98H], 100
        jge     __1446
        sub     esp, 20
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1447
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1446:
        cmp     dword ptr [ebp-98H], 10
        jge     __1448
        sub     esp, 20
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1449
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1448:
        sub     esp, 28
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-98H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1450
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 230
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1366:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vprims_hit]
        imul    eax, eax, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vprims]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vsecs_hit]
        imul    ebx, ebx, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vsecs]
        mov     eax, ebx
        cdq
        idiv    ecx
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        add     eax, ebx
        sar     eax, 1
        mov     dword ptr [ebp-98H], eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1451
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        cmp     dword ptr [ebp-98H], 100
        jge     __1452
        sub     esp, 20
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1453
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1452:
        cmp     dword ptr [ebp-98H], 10
        jge     __1454
        sub     esp, 20
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1455
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__1454:
        sub     esp, 28
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-98H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1456
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 280
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1367:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vprims_hit]
        imul    eax, eax, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vprims]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        mov     dword ptr [ebp-18CH], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vsecs_hit]
        imul    ebx, ebx, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vsecs]
        mov     eax, ebx
        cdq
        idiv    ecx
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18CH]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vprims_hit]
        imul    esi, esi, 100
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vprims]
        mov     eax, ebx
        cdq
        idiv    ecx
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        mov     ecx, 100
        mov     eax, ebx
        cdq
        idiv    ecx
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        add     eax, ebx
        sar     eax, 1
        mov     dword ptr [ebp-98H], eax
        mov     eax, dword ptr [ebp-98H]
        mov     ecx, 5
        cdq
        idiv    ecx
        mov     ebx, 20
        sub     ebx, eax
        mov     dword ptr [ebp-9CH], ebx
        cmp     dword ptr [ebp-9CH], 0
        jge     __1457
        mov     dword ptr [ebp-9CH], 0

__1457:
        cmp     dword ptr [ebp-9CH], 20
        jle     __1458
        mov     dword ptr [ebp-9CH], 20

__1458:
        mov     ebx, dword ptr [ebp-9CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonusscore]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-9CH], ebx
        cmp     dword ptr [ebp-9CH], 0
        jne     __1459
        mov     dword ptr [ebp-9CH], -9999

__1459:
        cmp     dword ptr [ebp-98H], 100
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-98H], 97
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1460
        add     dword ptr [ebp-9CH], 2000

__1460:
        cmp     dword ptr [ebp-98H], 99
        jne     __1461
        add     dword ptr [ebp-9CH], 3000

__1461:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __1462
        mov     ebx, dword ptr [ebp-9CH]
        sar     ebx, 1
        mov     dword ptr [ebp-9CH], ebx

__1462:
        cmp     dword ptr [ebp-9CH], -9999
        jne     __1463
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1464
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__1463:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vspecial], 0
        jne     __1465
        cmp     dword ptr [ebp-9CH], 0
        jle     __1466
        cmp     dword ptr [ebp-98H], 100
        jge     __1467
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     dword ptr [esp+4H], 190
        sub     esp, 4
        mov     eax, offset __1468
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        mov     ebx, 0
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
        mov     eax, offset __1469
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-9CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 9
        mov     dword ptr [esp+18H], 30
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     dword ptr [esp+4H], 352
        call    __fprintline
        jmp     __1470

__1467:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        mov     eax, offset __1471
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        mov     ebx, 0
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
        mov     eax, offset __1472
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-9CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 9
        mov     dword ptr [esp+18H], 80
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     dword ptr [esp+4H], 465
        call    __fprintline

__1470:
        jmp     __1473

__1466:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     dword ptr [esp+4H], 190
        sub     esp, 4
        mov     eax, offset __1474
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline

__1473:
        jmp     __1475

__1465:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     dword ptr [esp+4H], 30
        sub     esp, 4
        mov     eax, offset __1476
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fplaysounds

__1475:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1368:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vend_bonus], 250000
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __1477
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vend_bonus]
        sar     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vend_bonus], ebx

__1477:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 260
        mov     dword ptr [esp+4H], 150
        sub     esp, 4
        mov     eax, offset __1478
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        mov     ebx, 0
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
        mov     eax, offset __1479
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vend_bonus]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 9
        mov     dword ptr [esp+18H], 30
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 260
        mov     dword ptr [esp+4H], 325
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1369:
        mov     ebx, 2
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vend_bonus]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 260
        mov     dword ptr [esp+4H], 325
        mov     dword ptr [esp], 9
        call    __fmakecounter
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1370:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 0
        jle     __1480
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __1481
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vend_bonus], 50000
        jmp     __1482

__1481:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vend_bonus], 100000

__1482:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vend_bonus]
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vcounter], 30
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vcredits], 1
        jmp     __l_2recheck

        jmp     __1483

__1480:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

__1483:
        jmp     __1297

__1371:
        cmp     dword ptr [ebp-9CH], -9999
        je      __1484
        mov     ebx, 2
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0A0H], 4
        cmp     dword ptr [ebp-9CH], 25000
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-9CH], 12500
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1485
        mov     dword ptr [ebp-0A4H], 465
        mov     dword ptr [ebp-0A0H], 5
        jmp     __1486

__1485:
        mov     dword ptr [ebp-0A4H], 352

__1486:
        cmp     dword ptr [ebp-9CH], 10000
        jl      __1487
        mov     dword ptr [ebp-0A0H], 5

__1487:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vprims_hit]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vprims], eax
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vsecs_hit]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vsecs], ebx
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1488
        mov     dword ptr [ebp-0A4H], 465

__1488:
        cmp     dword ptr [ebp-9CH], 1000
        jge     __1489
        mov     dword ptr [ebp-0A0H], 3

__1489:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vspecial], 1
        je      __1490
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0A0H]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 1
        mov     esi, dword ptr [ebp-9CH]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 330
        mov     esi, dword ptr [ebp-0A4H]
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp], 9
        call    __fmakecounter

__1490:

__1484:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1372:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlives_off], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vend_bonus], 0
        jle     __1491
        sub     esp, 8
        mov     dword ptr [esp], 500
        mov     dword ptr [esp+4H], 530
        call    __frand
        mov     dword ptr [ebp-0A8H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vend_bonus]
        cmp     dword ptr [ebp-0A8H], ebx
        jle     __1492
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vend_bonus]
        mov     dword ptr [ebp-0A8H], ebx

__1492:
        mov     ebx, dword ptr [ebp-0A8H]
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vend_bonus], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vend_bonus]
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1493
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-0A8H]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__1493:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1494
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-0A8H]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__1494:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
        jmp     __1495

__1491:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

__1495:
        jmp     __1297

__1373:
        cmp     dword ptr [ebp-9CH], 0
        jle     __1496
        sub     esp, 8
        mov     dword ptr [esp], 25
        mov     dword ptr [esp+4H], 30
        call    __frand
        mov     dword ptr [ebp-0A8H], eax
        mov     ebx, dword ptr [ebp-9CH]
        cmp     dword ptr [ebp-0A8H], ebx
        jle     __1497
        mov     ebx, dword ptr [ebp-9CH]
        mov     dword ptr [ebp-0A8H], ebx

__1497:
        mov     ebx, dword ptr [ebp-0A8H]
        sub     dword ptr [ebp-9CH], ebx
        mov     ebx, dword ptr [ebp-9CH]
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1498
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-0A8H]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__1498:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1499
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-0A8H]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__1499:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdataevent], 1
        jmp     __1500

__1496:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

__1500:
        jmp     __1297

__1374:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 260
        mov     dword ptr [esp+4H], 325
        sub     esp, 4
        mov     eax, offset __1501
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1375:
        cmp     dword ptr [ebp-9CH], -9999
        je      __1502
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1503
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        cmp     dword ptr [ebp-0A0H], 5
        jne     __1504
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1505
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__1504:
        cmp     dword ptr [ebp-0A0H], 3
        jne     __1506
        sub     esp, 8
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1507
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__1506:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 330
        mov     ebx, dword ptr [ebp-0A4H]
        mov     dword ptr [esp+4H], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp-88H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline

__1502:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1376:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        jne     __1508
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 210
        mov     dword ptr [esp+4H], 120
        sub     esp, 4
        mov     eax, offset __1509
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        jmp     __1510

__1508:
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 210
        mov     dword ptr [esp+4H], 120
        sub     esp, 4
        mov     eax, offset __1511
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline

__1510:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1377:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 210
        mov     dword ptr [esp+4H], 95
        sub     esp, 4
        mov     eax, offset __1512
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1378:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        je      __1513
        sub     esp, 28
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+4H], 106
        sub     esp, 4
        mov     eax, offset __1514
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline

__1513:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1379:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcredits], 1
        sub     esp, 4
        mov     dword ptr [esp], 25
        call    __fplaysounds
        sub     esp, 12
        mov     dword ptr [esp+4H], 500
        mov     dword ptr [esp+8H], 9
        mov     dword ptr [esp], 355
        call    __fstarburst
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1380:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 9999
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1381:
        mov     dword ptr [ebp-8H], 1
        jmp     __1515

__1516:
        mov     dword ptr [ebp-10H], 0
        jmp     __1517

__1518:
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-10H]
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1519
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-10H]
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-10H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-10H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-10H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_active]
        mov     dword ptr [esi], ebx

__1519:
        add     dword ptr [ebp-10H], 1

__1517:
        cmp     dword ptr [ebp-10H], 8
        jle     __1518

__83:
        add     dword ptr [ebp-8H], 1

__1515:
        cmp     dword ptr [ebp-8H], 99
        jle     __1516

__82:
        sub     esp, 4
        mov     eax, offset __thill
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tenemyshot
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tplayershot
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tletter
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tshard
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tenemy
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __texplosion
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tground_target
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tstar
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tflash
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tbird
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tback_element
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tsmoke_ring
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tbonus
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tscores
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tblimp
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tmoon
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tballoon
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tskystar
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __twaterfall
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __twaterfall2
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tcar
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tbouncywheel
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        call    __fshatter
        mov     ebx, 100
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     dword ptr [esi], ebx
        mov     ebx, 229
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx
        mov     ebx, 100
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     dword ptr [esi], ebx
        mov     ebx, 277
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jge     __1520
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffree_level_images
        jmp     __1521

__1520:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __1522
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffree_level_images
        jmp     __1523

__1522:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __1524
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __ffree_level_images
        jmp     __1525

__1524:
        sub     esp, 4
        mov     dword ptr [esp], 4
        call    __ffree_level_images

__1525:

__1523:

__1521:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdataevent], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__voldcounter], 0
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vlevel], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims_hit], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsecs], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsecs_hit], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vexplod], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        jne     __1526
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 0
        call    __l_2setgfx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmusic], 0
        je      __1527
        jmp     __l_2game_over

__1527:
        jmp     __1528

__1526:
        call    __l_2select_screen

__1528:
        call    __finit_level
        jmp     __l_2recheck

        jmp     __1297

__1382:
        mov     ebx, 0
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1383:
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1384:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnuffz], 0
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1385:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        and     ebx, eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        and     esi, eax
        or      ebx, esi
        and     ebx, ebx
        je      __1529
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vdataevent]
        add     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdataevent], ebx
        jmp     __1530

__1529:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2

__1530:
        jmp     __l_2recheck

        jmp     __1297

__1386:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdataevent]
        add     ebx, 1
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aleveldata
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vlevel]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aleveldata]
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 2
        jmp     __l_2recheck

        jmp     __1297

__1387:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1388:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-0B0H], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1389:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfishfire], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1390:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbird_focus_x], 1144586240
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbird_focus_y], 240
        mov     dword ptr [ebp-8H], 1
        jmp     __1531

__1532:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0B4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tbird
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbird_focus_x]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_x]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbird_focus_y]
        sub     eax, 100
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_y]
        add     ebx, 100
        mov     dword ptr [esp+4H], ebx
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1090519040
        mov     dword ptr [esp+4H], 1056964608
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 23
        call    __frand
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__1531:
        mov     ebx, offset __aleveldata
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdataevent]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vlevel]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aleveldata]
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __1532

__84:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vdataevent], 1
        jmp     __l_2recheck

        jmp     __1297

__1297:

__1296:

__1295:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1200
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __1533
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1148854436
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 280
        mov     dword ptr [esp+4H], 320
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -16
        mov     dword ptr [esp+4H], -12
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, 0
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1533:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1000
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __1534
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1148854436
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 160
        mov     dword ptr [esp+4H], 260
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -25
        mov     dword ptr [esp+4H], -18
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, 0
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1534:
        sub     esp, 8
        lea     eax, dword ptr [ebp-90H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tcar
        call    ___bbObjEachFirst
        and     eax, eax
        je      __85

__1535:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1536
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 72
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1537
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 72
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 72
        mov     dword ptr [esi], ebx

__1537:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1538
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 68
        mov     dword ptr [esi], ebx

__1538:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1539
        mov     ebx, 150
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 68
        mov     dword ptr [esi], ebx
        mov     ebx, 20
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 72
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-10H], 60
        jmp     __1540

__1541:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        mov     esi, 1091567616
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 3
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1082130432
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1056964608
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 115
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-10H], 15

__1540:
        cmp     dword ptr [ebp-10H], 120
        jle     __1541

__86:

__1539:

__1536:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1542
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1543
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 68
        mov     dword ptr [esi], ebx

__1543:
        mov     ebx, 3
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 76
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 68
        mov     eax, dword ptr [eax]
        cmp     eax, 20
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 90
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1544
        mov     ebx, 4
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 76
        mov     dword ptr [esi], ebx

__1544:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 68
        mov     eax, dword ptr [eax]
        cmp     eax, 24
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 86
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 124
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1545
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 76
        mov     dword ptr [esi], ebx

__1545:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 68
        mov     eax, dword ptr [eax]
        cmp     eax, 27
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 83
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 127
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1546
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 76
        mov     dword ptr [esi], ebx

__1546:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 68
        mov     eax, dword ptr [eax]
        cmp     eax, 30
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 80
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 130
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1547
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 76
        mov     dword ptr [esi], ebx

__1547:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 68
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1548
        mov     ebx, 120
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 68
        mov     dword ptr [esi], ebx
        sub     esp, 32
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+8H], 17
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 76
        push    esi
        fild    dword ptr [esp]
        pop     esi
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1114636288
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__1548:

__1542:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142947840
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1549
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__1549:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141309440
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    ___bbObjCompare
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1550
        sub     esp, 8
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tcar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtraincounter]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrain]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtraincounter]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrainbonus]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vtraincounter], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtraincounter], 17
        jne     __1551
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtraincounter], 0

__1551:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        jne     __1552
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1070973583
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -25
        mov     dword ptr [esp], -42
        call    __fmake_turret2
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], -25
        mov     dword ptr [esp], 36
        call    __fmake_turret2

__1552:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, 500
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 68
        mov     dword ptr [esi], ebx
        mov     ebx, 1144913920
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 480
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx
        mov     ebx, 1056964608
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __1553
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5

__1553:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1554
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx

__1554:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1555
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -20
        mov     dword ptr [esp], 51
        call    __fmake_turret2

__1555:

__1550:
        mov     ebx, 1076677837
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 24
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1099431936
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        and     eax, eax
        je      __1556
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__1556:
        sub     esp, 4
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fhill_offset
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 19
        jle     __1557
        mov     ebx, 19
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1557:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -20
        jge     __1558
        mov     ebx, 4294967276
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1558:
        sub     esp, 4
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fhill_offset
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 19
        jle     __1559
        mov     ebx, 19
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1559:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -20
        jge     __1560
        mov     ebx, 4294967276
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1560:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        add     ebx, esi
        sar     ebx, 2
        mov     esi, 480
        sub     esi, ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        mov     ebx, 472
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1561
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1561:
        mov     ebx, 484
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1562
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1562:
        mov     ebx, 496
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1563
        mov     ebx, 3
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1563:
        mov     ebx, 472
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1564
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1564:
        mov     ebx, 484
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1565
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1565:
        mov     ebx, 496
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1566
        mov     ebx, 3
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1566:
        mov     ebx, 1000
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __1567
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__1567:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1076677837
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1568
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__1568:
        sub     esp, 8
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        je      __1569
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     ebx, esi
        sar     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 2
        cmp     ebx, esi
        jle     __1570
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__1570:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 5
        cmp     ebx, esi
        jle     __1571
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__1571:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 8
        cmp     ebx, esi
        jle     __1572
        mov     ebx, 3
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__1572:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 2
        cmp     ebx, esi
        jge     __1573
        mov     ebx, 15
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__1573:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 5
        cmp     ebx, esi
        jge     __1574
        mov     ebx, 14
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__1574:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 8
        cmp     ebx, esi
        jge     __1575
        mov     ebx, 13
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__1575:
        jmp     __1576

__1569:
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141309440
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1076677837
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1577
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1017370378
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__1577:

__1576:
        mov     dword ptr [ebp-0B8H], 0
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        je      __1578
        sub     esp, 24
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtray_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-0B8H], eax

__1578:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1579
        sub     esp, 24
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 107
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 72
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fchs
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vbigbarrel_im]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        add     dword ptr [ebp-0B8H], eax

__1579:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1580
        sub     esp, 24
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbig_gun_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 74
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        add     dword ptr [ebp-0B8H], eax

__1580:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __1581
        sub     esp, 24
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 5
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        add     dword ptr [ebp-0B8H], eax

__1581:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1582
        sub     esp, 24
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112801280
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 76
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmiss_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 87
        mov     dword ptr [esp+4H], esi
        call    __fcollision_enemy_bullet
        add     dword ptr [ebp-0B8H], eax

__1582:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fchs
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vwheel_im]
        mov     dword ptr [esp+8H], esi
        mov     ebx, 560
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 28
        mov     edi, dword ptr [edi]
        sub     ebx, edi
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        add     dword ptr [ebp-0B8H], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fchs
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vwheel_im]
        mov     dword ptr [esp+8H], esi
        mov     ebx, 560
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 32
        mov     edi, dword ptr [edi]
        sub     ebx, edi
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        add     dword ptr [ebp-0B8H], eax
        sub     esp, 16
        mov     ebx, 560
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fdivp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112014848
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        mov     dword ptr [ebp-184H], eax
        sub     esp, 16
        mov     ebx, 560
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fdivp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112014848
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vwheel_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1583
        add     dword ptr [ebp-0B8H], 250

__1583:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __1584
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 5
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        and     eax, eax
        je      __1585
        add     dword ptr [ebp-0B8H], 250

__1585:

__1584:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1586
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 107
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 72
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigbarrel_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        and     eax, eax
        je      __1587
        add     dword ptr [ebp-0B8H], 250

__1587:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 74
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_gun_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        and     eax, eax
        je      __1588
        add     dword ptr [ebp-0B8H], 250

__1588:

__1586:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1589
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112801280
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 87
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 76
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmiss_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        and     eax, eax
        je      __1590
        add     dword ptr [ebp-0B8H], 250

__1590:

__1589:
        cmp     dword ptr [ebp-0B8H], 0
        jle     __1591
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__1591:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-0B8H]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acardam]
        mov     esi, dword ptr [esi]
        sar     esi, 2
        cmp     ebx, esi
        jle     __1592
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1592:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acardam]
        mov     esi, dword ptr [esi]
        sar     esi, 2
        shl     esi, 1
        cmp     ebx, esi
        jle     __1593
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1593:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acardam]
        mov     esi, dword ptr [esi]
        sar     esi, 2
        imul    esi, esi, 3
        cmp     ebx, esi
        jle     __1594
        mov     ebx, 3
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1594:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3272998912
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acardam]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1595
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141309440
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    ___bbObjCompare
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1596
        sub     esp, 8
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tcar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtraincounter]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrain]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vtraincounter]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrainbonus]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vtraincounter], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vtraincounter], 17
        jne     __1597
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtraincounter], 0

__1597:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        jne     __1598
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1070973583
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -25
        mov     dword ptr [esp], -42
        call    __fmake_turret2
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], -25
        mov     dword ptr [esp], 36
        call    __fmake_turret2

__1598:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, 500
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 68
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1130102784
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 480
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx
        mov     ebx, 1056964608
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __1599
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5

__1599:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1600
        mov     ebx, 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx

__1600:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1601
        mov     ebx, 2
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -20
        mov     dword ptr [esp], 51
        call    __fmake_turret2

__1601:

__1596:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acardam]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1602
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1603
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 20
        mov     dword ptr [esp+4H], esi
        call    __fmake_score
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        jmp     __1604

__1603:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1605
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        jmp     __1606

__1605:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 20
        mov     dword ptr [esp+4H], esi
        call    __fmake_score
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5

__1606:

__1604:
        sub     esp, 12
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-10H], 0
        jmp     __1607

__1608:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-10H]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-10H], 1

__1607:
        cmp     dword ptr [ebp-10H], 80
        jle     __1608

__87:
        mov     dword ptr [ebp-10H], 1
        jmp     __1609

__1610:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1040187392
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 5
        mov     ebx, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1040187392
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 6
        mov     ebx, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-10H], 1

__1609:
        cmp     dword ptr [ebp-10H], 40
        jle     __1610

__88:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1611
        mov     dword ptr [ebp-10H], 1
        jmp     __1612

__1613:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1040187392
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 17
        mov     ebx, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1040187392
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 18
        mov     ebx, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-10H], 1

__1612:
        cmp     dword ptr [ebp-10H], 40
        jle     __1613

__89:
        jmp     __1614

__1611:
        mov     dword ptr [ebp-10H], 1
        jmp     __1615

__1616:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1040187392
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 5
        mov     ebx, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0BCH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1040187392
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-0C0H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 6
        mov     ebx, dword ptr [ebp-0C0H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0BCH]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0C0H]
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        add     ebx, 40
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-0BCH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-10H], 1

__1615:
        cmp     dword ptr [ebp-10H], 40
        jle     __1616

__90:

__1614:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tbouncywheel
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 560
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], -1056964608
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1102263091
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tbouncywheel
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 560
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1073741824
        mov     dword ptr [esp+4H], 1086324736
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], -1056964608
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1045220557
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 64
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __1617
        sub     esp, 12
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        call    __fmake_bonuses

__1617:

__1602:
        sub     esp, 4
        mov     eax, dword ptr [ebp-90H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1595:
        sub     esp, 4
        lea     eax, dword ptr [ebp-90H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1535

__85:
        sub     esp, 4
        mov     eax, offset __aenemy_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 71
        mov     esi, offset __aenemy_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aenemy_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy
        call    ___bbObjEachFirst
        and     eax, eax
        je      __91

__1618:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_active]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_active]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1618

__91:
        mov     dword ptr [ebp-8H], 1
        jmp     __1619

__1620:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_loaded]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1621
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fload_enemy

__1621:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_loaded]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vunload], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1622
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_loaded]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1
        cmp     dword ptr [ebp-8H], 7
        jne     __1623
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsquidbottom_im], 0

__1623:
        cmp     dword ptr [ebp-8H], 9
        jne     __1624
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_squidbottom_im], 0

__1624:
        cmp     dword ptr [ebp-8H], 66
        jne     __1625
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlaser_squidbottom_im], 0

__1625:

__1622:
        add     dword ptr [ebp-8H], 1

__1619:
        cmp     dword ptr [ebp-8H], 71
        jle     __1620

__92:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tbouncywheel
        call    ___bbObjEachFirst
        and     eax, eax
        je      __93

__1626:
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1053609165
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 570
        sub     esp, 4
        mov     eax, dword ptr [ebp-0C4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fhill_offset
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-0C4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1627
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1061997773
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1627:
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1097859072
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        cmp     ebx, 0
        jge     __1628
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1628:
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        cmp     ebx, 3
        jle     __1629
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1629:
        mov     eax, dword ptr [ebp-0C4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1143930880
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1630
        sub     esp, 4
        mov     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1630:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1626

__93:
        call    __fupdate_back_elements
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tmoon
        call    ___bbObjEachFirst
        and     eax, eax
        je      __94

__1631:
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-48H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 8
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1632
        mov     eax, dword ptr [ebp-48H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sar     ebx, 1
        add     eax, ebx
        cmp     eax, 640
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1633
        mov     ebx, 1
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CCH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 9
        mov     esi, dword ptr [ebp-0CCH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CCH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1143930880
        mov     esi, dword ptr [ebp-0CCH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CCH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0CCH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1633:

__1632:
        mov     eax, dword ptr [ebp-48H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        neg     ebx
        sar     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-48H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-48H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimageheight
        mov     esi, eax
        mov     eax, dword ptr [ebp-188H]
        neg     esi
        sar     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1634
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1634:
        sub     esp, 4
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1631

__94:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1635
        mov     dword ptr [ebp-8H], 1
        jmp     __1636

__1637:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        sub     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        sub     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 1
        sub     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awateroff]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awater_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1638
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        sub     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        sub     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     dword ptr [esi], ebx

__1638:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1066611507
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awateroff]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awater_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1639
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awateroff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     dword ptr [esi], ebx

__1639:
        add     dword ptr [ebp-8H], 1

__1636:
        cmp     dword ptr [ebp-8H], 3
        jle     __1637

__95:

__1635:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0D0H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tparachuter
        call    ___bbObjEachFirst
        and     eax, eax
        je      __96

__1640:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1641
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141800960
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1642
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_little_splash

__1642:

__1641:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jne     __1643
        mov     ebx, 3
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1643:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 45
        jne     __1644
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__1644:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jne     __1645
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], -1082130432
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax

__1645:
        sub     esp, 8
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 4
        call    ___bbMod
        mov     dword ptr [ebp-98H], eax
        cmp     dword ptr [ebp-98H], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1646
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__1646:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jle     __1647
        sub     esp, 8
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 7
        call    ___bbMod
        mov     dword ptr [ebp-98H], eax
        cmp     dword ptr [ebp-98H], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1648
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1648:
        jmp     __1649

__1647:
        sub     esp, 12
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    ___bbAbs
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 20
        call    ___bbMod
        mov     dword ptr [ebp-98H], eax
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-98H], 5
        jge     __1650
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1650:
        cmp     dword ptr [ebp-98H], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-98H], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1651
        mov     ebx, 2
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1651:

__1649:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jge     __1652
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __1653

__1652:
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1654
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1053609165
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1654:

__1653:
        mov     eax, dword ptr [ebp-0D0H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1143930880
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1655
        sub     esp, 4
        mov     eax, dword ptr [ebp-0D0H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1655:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0D0H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1640

__96:
        call    __fenemy
        call    __fgroundenemy
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vspinster]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 28
        call    ___bbMod
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vspinster], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1056964608
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1114636288
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpodcounter], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpodcounter]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpodoffset], ebx
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdemo_time_left], 16
        sub     esp, 4
        mov     dword ptr [esp], 56
        call    __fkeydown
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     dword ptr [esp], 184
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     dword ptr [esp], 88
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __1656
        mov     ebx, 200
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx
        mov     ebx, 200
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx

__1656:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], 1
        jmp     __1657

__1658:
        call    __fget_keys
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-60H], 112
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-60H], 850
        mov     eax, esi
        setl    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-60H], 0
        mov     eax, esi
        sete    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      esi, ebx
        and     eax, esi
        and     eax, eax
        je      __1659
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx
        mov     ebx, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vcredits], 1
        mov     ebx, 200
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-60H], 0
        jle     __1660
        mov     dword ptr [ebp-60H], 3000

__1660:

__1659:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflsh]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1661
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflsh]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aflsh]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aflsh]
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflsh]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 11
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflsh]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 17
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1662
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aflsh]
        mov     dword ptr [esi], ebx

__1662:

__1661:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 270
        jne     __1663
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1664
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        jne     __1665
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        call    __fupdatecounters

__1665:
        jmp     __1666

__1664:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx

__1666:

__1663:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1667
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx

__1667:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1668
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_moving]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 28
        call    __fkeydown
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcheating]
        and     eax, ebx
        and     eax, eax
        je      __1669
        mov     ebx, 1
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx

__1669:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        jne     __1670
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__1670:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        jge     __1671
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx

__1671:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 10
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1672
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx

__1672:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1673
        mov     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
        mov     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
        mov     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx

__1673:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_up]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -10
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, -10
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1674
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1675
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx

__1675:
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_moving]
        mov     dword ptr [esi], ebx

__1674:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_down]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 540
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 439
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1676
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     esi, dword ptr [esi]
        add     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 39
        jge     __1677
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx

__1677:
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_moving]
        mov     dword ptr [esi], ebx

__1676:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_left]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1678
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     dword ptr [esi], ebx

__1678:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__apress_right]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 570
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1679
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     esi, dword ptr [esi]
        add     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     dword ptr [esi], ebx

__1679:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon]
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashooting]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 31
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __1680
        call    __ffirebullet

__1680:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atofire]
        mov     esi, dword ptr [esi]
        or      ebx, esi
        and     ebx, ebx
        je      __1681
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashooting]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1682
        call    __ffirebullet
        mov     ebx, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abuttondown]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atofire]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon]
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1683
        mov     ebx, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx

__1683:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        jne     __1684
        mov     ebx, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx

__1684:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1685
        mov     ebx, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx

__1685:

__1682:

__1681:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashooting]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 4
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashooting]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setne   al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1686
        call    __ffirebullet

__1686:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__abuttondown]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        and     ebx, eax
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashooting]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1687
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atofire]
        mov     dword ptr [esi], ebx

__1687:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1688
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abuttondown]
        mov     dword ptr [esi], ebx

__1688:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon]
        mov     eax, dword ptr [eax]
        cmp     eax, 7
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1689
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abuttondown]
        mov     dword ptr [esi], ebx

__1689:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashooting]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abuttondown]
        mov     ebx, dword ptr [ebx]
        and     eax, ebx
        and     eax, eax
        je      __1690
        mov     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx

__1690:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashooting]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1691
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ashooting]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ashooting]
        mov     dword ptr [esi], ebx

__1691:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_moving]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1692
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jge     __1693
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx

__1693:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jle     __1694
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aframe]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     dword ptr [esi], ebx

__1694:

__1692:

__1668:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vplayer], 1

__1657:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplayer], 2
        jle     __1658

__97:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vrecordupto], 1
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __1695
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
        add     ebx, esi
        sar     ebx, 1
        mov     dword ptr [ebp-0D4H], ebx
        jmp     __1696

__1695:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1697
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-0D4H], ebx
        jmp     __1698

__1697:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-0D4H], ebx

__1698:

__1696:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [ebp-0D8H], ebx
        mov     eax, dword ptr [ebp-0D4H]
        mov     ecx, 5
        cdq
        idiv    ecx
        neg     eax
        mov     dword ptr [ebp-0DCH], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __1699
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ay]
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vvertscroll]
        cmp     eax, 120
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 439
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_up]
        mov     ebx, dword ptr [ebx]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 120
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        cmp     esi, 439
        mov     eax, esi
        setl    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1700
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        add     ebx, 1
        mov     dword ptr [ebp-0DCH], ebx

__1700:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ay]
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vvertscroll]
        cmp     eax, 400
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 10
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_down]
        mov     ebx, dword ptr [ebx]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 400
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        cmp     esi, 10
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1701
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        sub     ebx, 1
        mov     dword ptr [ebp-0DCH], ebx

__1701:

__1699:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        cmp     dword ptr [ebp-0DCH], ebx
        jle     __1702
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vvertscroll], 1

__1702:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        cmp     dword ptr [ebp-0DCH], ebx
        jge     __1703
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vvertscroll], 1

__1703:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvertscroll], -100
        jge     __1704
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], -100

__1704:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvertscroll], 0
        jle     __1705
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], 0

__1705:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __1706
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ay]
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vvertscroll]
        cmp     eax, 10
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 10
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0D8H]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvertscroll], ebx
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1707
        mov     ebx, dword ptr [ebp-0D8H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], ebx

__1707:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ay]
        mov     eax, dword ptr [eax]
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vvertscroll]
        cmp     eax, 439
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        cmp     ebx, 439
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0D8H]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvertscroll], ebx
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1708
        mov     ebx, dword ptr [ebp-0D8H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vvertscroll], ebx

__1708:

__1706:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwire_slam], 0
        jle     __1709
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vwire_slam], 1

__1709:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E0H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tplayershot
        call    ___bbObjEachFirst
        and     eax, eax
        je      __98

__1710:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1711
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1711:
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __1712
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 13
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1713
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1713:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 13
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1714
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1714:
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1715
        mov     ebx, 2
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1715:
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1716
        mov     ebx, 3
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1716:
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __1717
        mov     ebx, 4
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1717:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vspinster]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 3
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __1718
        sub     esp, 20
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubrp  st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 0
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fmake_smoke_ring
        sub     esp, 20
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, 20
        sub     eax, ebx
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 0
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fmake_smoke_ring

__1718:
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 13
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1719
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1719:

__1712:
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1720
        sub     esp, 32
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdot_im]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        mov     dword ptr [ebp-184H], eax
        sub     esp, 32
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        add     ebx, 32
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdot_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagescollide
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1721
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwire_slam], 6

__1721:
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __1722
        mov     dword ptr [ebp-0E4H], 0
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1722:
        sub     esp, 8
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 3
        call    ___bbMod
        cmp     eax, 0
        jne     __1723
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1723:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemyshot
        call    ___bbObjEachFirst
        and     eax, eax
        je      __99

__1724:
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __1725
        sub     esp, 32
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+1CH], 0
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0E8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1726
        sub     esp, 8
        lea     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tflash
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3221225472
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1726:

__1725:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1724

__99:

__1720:
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        cmp     eax, 660
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -40
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -20
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 640
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        cmp     esi, 18
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        cmp     esi, 25
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1727
        sub     esp, 4
        mov     eax, dword ptr [ebp-0E0H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1727:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0E0H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1710

__98:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemyshot
        call    ___bbObjEachFirst
        and     eax, eax
        je      __100

__1728:
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1729
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1036831949
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 9
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1141964800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1730
        sub     esp, 4
        mov     eax, dword ptr [ebp-0E8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_little_splash
        sub     esp, 4
        mov     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_2grgtrggtrgt

__1730:

__1729:
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1731
        sub     esp, 8
        mov     eax, dword ptr [ebp-0E8H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 40
        call    ___bbMod
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax

__1731:
        mov     eax, dword ptr [ebp-0E8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1146552320
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3278897152
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3276275712
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1145569280
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        sar     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemybullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1732
        sub     esp, 4
        mov     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_2grgtrggtrgt:

__1732:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1728

__100:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F0H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy_zap
        call    ___bbObjEachFirst
        and     eax, eax
        je      __101

__1733:
        mov     ebx, dword ptr [ebp-0F0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1734
        sub     esp, 4
        mov     eax, dword ptr [ebp-0F0H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __1735

__1734:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0F0H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0F0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0F0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0F0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__venemy_lightning_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player

__1735:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0F0H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1733

__101:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tshard
        call    ___bbObjEachFirst
        and     eax, eax
        je      __102

__1736:
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sar     esi, 1
        add     ebx, esi
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1737
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 540
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1738
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmake_little_splash

__1738:

__1737:
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 11
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1739
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1739:
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jl      __1740
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1740:
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 24
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1741
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        jne     __1742
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1742:

__1741:
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 24
        mov     eax, dword ptr [eax]
        cmp     eax, 2
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1743
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        jne     __1744
        mov     ebx, 7
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1744:

__1743:
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 24
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 16
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1745
        mov     ebx, 17
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1745:
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        cmp     eax, 760
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -40
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 600
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -150
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        cmp     esi, 20
        mov     eax, esi
        sete    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        mov     dword ptr [ebp-184H], eax
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        cmp     esi, 17
        mov     eax, esi
        sete    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1746
        sub     esp, 4
        mov     eax, dword ptr [ebp-0F4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1746:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0F4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1736

__102:
        sub     esp, 8
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsmoke_ring
        call    ___bbObjEachFirst
        and     eax, eax
        je      __103

__1747:
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      ebx, eax
        and     ebx, ebx
        je      __1748
        mov     ebx, 0
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1748:
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 6
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 7
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1749
        sub     esp, 4
        mov     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1749:
        sub     esp, 4
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1747

__103:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __twaterfall
        call    ___bbObjEachFirst
        and     eax, eax
        je      __104

__1750:
        mov     ebx, dword ptr [ebp-0F8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-0F8H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, 3
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 158
        call    ___bbMod
        mov     ebx, dword ptr [ebp-0F8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     eax, dword ptr [ebp-0F8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1751
        sub     esp, 4
        mov     eax, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1751:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1750

__104:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0FCH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __twaterfall2
        call    ___bbObjEachFirst
        and     eax, eax
        je      __105

__1752:
        mov     ebx, dword ptr [ebp-0FCH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0FCH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-0FCH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, 2
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 89
        call    ___bbMod
        mov     ebx, dword ptr [ebp-0FCH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     eax, dword ptr [ebp-0FCH]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1753
        sub     esp, 4
        mov     eax, dword ptr [ebp-0FCH]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1753:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0FCH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1752

__105:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tflash
        call    ___bbObjEachFirst
        and     eax, eax
        je      __106

__1754:
        mov     ebx, dword ptr [ebp-0ECH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0ECH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-0ECH]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 12
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0ECH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 24
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0ECH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 36
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1755
        sub     esp, 4
        mov     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1755:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1754

__106:
        sub     esp, 8
        lea     eax, dword ptr [ebp-100H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tscores
        call    ___bbObjEachFirst
        and     eax, eax
        je      __107

__1756:
        mov     ebx, dword ptr [ebp-100H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077306982
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-100H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-100H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-100H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-100H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jl      __1757
        sub     esp, 4
        mov     eax, dword ptr [ebp-100H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1757:
        sub     esp, 4
        lea     eax, dword ptr [ebp-100H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1756

__107:
        sub     esp, 8
        lea     eax, dword ptr [ebp-104H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tturret
        call    ___bbObjEachFirst
        and     eax, eax
        je      __108

__1758:
        sub     esp, 8
        mov     eax, dword ptr [ebp-104H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        je      __1759
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jge     __1760
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__1760:
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1761
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__1761:
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1762
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     esi, eax
        and     ebx, esi
        and     ebx, ebx
        je      __1763
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax

__1763:

__1762:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __1764
        mov     ebx, 1
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1764:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __1765
        mov     ebx, 2
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1765:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      ebx, esi
        and     eax, ebx
        and     eax, eax
        je      __1766
        mov     ebx, 0
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1766:
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __1767
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        sub     ebx, 20
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-108H], ebx
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, 26
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-10CH], ebx
        mov     eax, dword ptr [ebp-10CH]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setne   al
        movzx   eax, al
        and     eax, eax
        je      __1768
        sub     esp, 4
        mov     eax, dword ptr [ebp-108H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-10CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fatan
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-110H], eax
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, 26
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1769
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1770
        add     dword ptr [ebp-110H], 180
        jmp     __1771

__1770:
        add     dword ptr [ebp-110H], 180

__1771:
        jmp     __1772

__1769:
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1773
        jmp     __1774

__1773:
        add     dword ptr [ebp-110H], 360

__1774:

__1772:
        jmp     __1775

__1768:
        mov     dword ptr [ebp-110H], 0

__1775:
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-110H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-114H], ebx
        jmp     __1777

__1776:
        sub     dword ptr [ebp-114H], 360

__1777:
        cmp     dword ptr [ebp-114H], 180
        jg      __1776

__109:
        jmp     __1779

__1778:
        add     dword ptr [ebp-114H], 360

__1779:
        cmp     dword ptr [ebp-114H], -180
        jl      __1778

__110:
        cmp     dword ptr [ebp-114H], -2
        jge     __1780
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __1781

__1780:
        cmp     dword ptr [ebp-114H], 2
        jle     __1782
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __1783

__1782:
        mov     eax, dword ptr [ebp-104H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        cmp     eax, 20
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1784
        mov     ebx, 10
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdifficulty]
        shl     ebx, 1
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tenemyshot
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     dword ptr [esp], 20
        call    __fplaysounds
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1108082688
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1108082688
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1784:

__1783:

__1781:
        mov     eax, dword ptr [ebp-104H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1135869952
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        and     eax, eax
        je      __1785
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1135869952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1785:
        mov     eax, dword ptr [ebp-104H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1786
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1135869952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1786:
        sub     esp, 8
        mov     eax, dword ptr [ebp-104H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1127481344
        call    ___bbFMod
        mov     ebx, 1093926912
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __1787
        mov     ebx, 15
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1787:
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __1788
        mov     ebx, 0
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__l_2skipit:

__1788:

__1767:
        jmp     __1789

__1759:
        sub     esp, 4
        mov     eax, dword ptr [ebp-104H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1789:
        sub     esp, 4
        lea     eax, dword ptr [ebp-104H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1758

__108:
        sub     esp, 8
        lea     eax, dword ptr [ebp-118H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tturret2
        call    ___bbObjEachFirst
        and     eax, eax
        je      __111

__1790:
        sub     esp, 8
        mov     eax, dword ptr [ebp-118H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        je      __1791
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jge     __1792
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__1792:
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1793
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__1793:
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1794
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     esi, eax
        and     ebx, esi
        and     ebx, ebx
        je      __1795
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax

__1795:

__1794:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __1796
        mov     ebx, 1
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1796:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __1797
        mov     ebx, 2
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1797:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        or      ebx, esi
        and     eax, ebx
        and     eax, eax
        je      __1798
        mov     ebx, 0
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__1798:
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __1799
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        sub     ebx, 20
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-108H], ebx
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, 26
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-10CH], ebx
        mov     eax, dword ptr [ebp-10CH]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setne   al
        movzx   eax, al
        and     eax, eax
        je      __1800
        sub     esp, 4
        mov     eax, dword ptr [ebp-108H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-10CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fatan
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-110H], eax
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, 26
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1801
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1802
        add     dword ptr [ebp-110H], 180
        jmp     __1803

__1802:
        add     dword ptr [ebp-110H], 180

__1803:
        jmp     __1804

__1801:
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __1805
        jmp     __1806

__1805:
        add     dword ptr [ebp-110H], 360

__1806:

__1804:
        jmp     __1807

__1800:
        mov     dword ptr [ebp-110H], 0

__1807:
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-110H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-114H], ebx
        jmp     __1809

__1808:
        sub     dword ptr [ebp-114H], 360

__1809:
        cmp     dword ptr [ebp-114H], 180
        jg      __1808

__112:
        jmp     __1811

__1810:
        add     dword ptr [ebp-114H], 360

__1811:
        cmp     dword ptr [ebp-114H], -180
        jl      __1810

__113:
        cmp     dword ptr [ebp-114H], -2
        jge     __1812
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __1813

__1812:
        cmp     dword ptr [ebp-114H], 2
        jle     __1814
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        jmp     __1815

__1814:
        mov     eax, dword ptr [ebp-118H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        cmp     eax, 20
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1816
        mov     ebx, 10
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vdifficulty]
        shl     ebx, 1
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tenemyshot
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     dword ptr [esp], 20
        call    __fplaysounds
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1108082688
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1108082688
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1816:

__1815:

__1813:
        mov     eax, dword ptr [ebp-118H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1135869952
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        and     eax, eax
        je      __1817
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1135869952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1817:
        mov     eax, dword ptr [ebp-118H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1818
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1135869952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1818:
        sub     esp, 8
        mov     eax, dword ptr [ebp-118H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1127481344
        call    ___bbFMod
        mov     ebx, 1093926912
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __1819
        mov     ebx, 15
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1819:
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __1820
        mov     ebx, 0
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__l_2skipit2:

__1820:

__1799:
        jmp     __1821

__1791:
        sub     esp, 4
        mov     eax, dword ptr [ebp-118H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1821:
        sub     esp, 4
        lea     eax, dword ptr [ebp-118H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1790

__111:
        sub     esp, 8
        lea     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tstar
        call    ___bbObjEachFirst
        and     eax, eax
        je      __114

__1822:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1823
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1823:
        mov     eax, dword ptr [ebp-11CH]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1824
        sub     esp, 24
        mov     dword ptr [esp+10H], 1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vstar_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-11CH]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 640
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1825
        mov     ebx, 6
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 30
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1825:

__1824:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 30
        jle     __1826
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, 6
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 30
        jne     __1827
        mov     ebx, 0
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1827:

__1826:
        mov     eax, dword ptr [ebp-11CH]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 30
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1828
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, 2
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 600
        jge     __1829
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, 2
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__1829:
        mov     eax, dword ptr [ebp-11CH]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        mov     ecx, 6
        cdq
        idiv    ecx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        shl     ebx, 2
        add     ebx, eax
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        jne     __1830
        mov     ebx, 24
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1830:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 24
        jl      __1831
        mov     ebx, 0
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 7
        jle     __1832
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 12
        jne     __1833
        mov     ebx, 8
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 28
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1833:

__1832:

__1831:
        jmp     __1834

__1828:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        shl     ebx, 2
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1834:
        sub     esp, 4
        lea     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1822

__114:
        sub     esp, 8
        lea     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tstar
        call    ___bbObjEachFirst
        and     eax, eax
        je      __115

__1835:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        sub     ebx, 2
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-10H], 1
        jmp     __1836

__1837:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, dword ptr [ebp-10H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setle   al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1838
        sub     esp, 32
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 30
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1839
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnocollect], 0
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 7
        jle     __1840
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        sub     ebx, 7
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __1841
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __1842
        mov     ebx, 1
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1842:

__1841:

__1840:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, 5
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-11CH]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fstarburst
        mov     ebx, 4294967246
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1250
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-11CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, 10
        mov     dword ptr [esp], eax
        call    __fplaysounds
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jle     __1843
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx

__1843:

__1839:

__1838:
        add     dword ptr [ebp-10H], 1

__1836:
        cmp     dword ptr [ebp-10H], 2
        jle     __1837

__116:
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -40
        jge     __1844
        sub     esp, 4
        mov     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1844:
        sub     esp, 4
        lea     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1835

__115:
        sub     esp, 8
        lea     eax, dword ptr [ebp-94H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tblimp
        call    ___bbObjEachFirst
        and     eax, eax
        je      __117

__1845:
        mov     ebx, dword ptr [ebp-94H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-94H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-94H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-94H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amess]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __flen
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        shl     ebx, 3
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1846
        mov     ebx, 0
        mov     esi, dword ptr [ebp-94H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1846:
        mov     ebx, dword ptr [ebp-94H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -100
        jg      __1847
        sub     esp, 4
        mov     eax, dword ptr [ebp-94H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1847:
        sub     esp, 4
        lea     eax, dword ptr [ebp-94H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1845

__117:
        sub     esp, 8
        lea     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __texplosion
        call    ___bbObjEachFirst
        and     eax, eax
        je      __118

__1848:
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        sub     ebx, 3
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 40
        jge     __1849
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1850
        mov     ebx, 0
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1850:
        jmp     __1851

__1849:
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 60
        jge     __1852
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1853
        mov     ebx, 0
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1853:

__1852:

__1851:
        mov     eax, dword ptr [ebp-120H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        cmp     eax, 13
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 33
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 53
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1854
        sub     esp, 4
        mov     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1854:
        sub     esp, 4
        lea     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1848

__118:
        sub     esp, 8
        lea     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tbonus
        call    ___bbObjEachFirst
        and     eax, eax
        je      __119

__1855:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1856
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142128640
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1857
        mov     ebx, 1
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_little_splash

__1857:

__1856:
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143930880
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1858
        sub     esp, 4
        mov     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_2nofruit

__1858:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1859
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1859:
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 8
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 17
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1860
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 17
        jne     __1861
        mov     ebx, 9
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1861:

__1860:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1862
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__1862:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1863
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1032805417
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1863:
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1864
        sub     esp, 24
        mov     dword ptr [esp+10H], -1073741824
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbonus_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1865
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-128H], ebx
        cmp     dword ptr [ebp-128H], 0
        je      __1867
        cmp     dword ptr [ebp-128H], 3
        je      __1868
        cmp     dword ptr [ebp-128H], 6
        je      __1869
        jmp     __1866

__1867:
        sub     esp, 32
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __1866

__1868:
        mov     dword ptr [ebp-10H], 1
        jmp     __1870

__1871:
        sub     esp, 32
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        add     dword ptr [ebp-10H], 1

__1870:
        cmp     dword ptr [ebp-10H], 2
        jle     __1871

__121:
        jmp     __1866

__1869:
        sub     esp, 32
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 8
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        mov     dword ptr [ebp-10H], 1
        jmp     __1872

__1873:
        mov     dword ptr [ebp-12CH], 1
        jmp     __1874

__1875:
        sub     esp, 32
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1106247680
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, dword ptr [ebp-10H]
        imul    edi, edi, 10
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp-12CH]
        imul    ebx, ebx, 10
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        add     dword ptr [ebp-12CH], 1

__1874:
        cmp     dword ptr [ebp-12CH], 2
        jle     __1875

__123:
        add     dword ptr [ebp-10H], 1

__1872:
        cmp     dword ptr [ebp-10H], 4
        jle     __1873

__122:
        jmp     __1866

__1866:
        sub     esp, 4
        mov     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_2nofruit

__1865:

__1864:
        mov     dword ptr [ebp-10H], 1
        jmp     __1876

__1877:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, dword ptr [ebp-10H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setle   al
        movzx   eax, al
        and     ebx, eax
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 8
        setne   al
        movzx   eax, al
        and     ebx, eax
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __1878
        sub     esp, 32
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        and     eax, eax
        je      __1879
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 17
        jge     __1880
        sub     esp, 4
        mov     dword ptr [esp], 10
        call    __fplaysounds
        mov     dword ptr [ebp-130H], 100
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1881
        mov     dword ptr [ebp-130H], 150

__1881:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1882
        mov     dword ptr [ebp-130H], 250

__1882:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        jne     __1883
        mov     dword ptr [ebp-130H], 500

__1883:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        jle     __1884
        mov     dword ptr [ebp-130H], 500

__1884:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-130H]
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-130H]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        jmp     __1885

__1880:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 17
        jne     __1886
        sub     esp, 12
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 6
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fstarburst
        sub     esp, 4
        mov     dword ptr [esp], 21
        call    __fplaysounds
        mov     ebx, 1
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adoubler]
        mov     dword ptr [esi], ebx

__1886:
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 18
        jne     __1887
        sub     esp, 12
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 11
        mov     eax, dword ptr [ebp-124H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fstarburst
        sub     esp, 4
        mov     dword ptr [esp], 22
        call    __fplaysounds
        mov     ebx, 1
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
        add     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx

__1887:

__1885:
        sub     esp, 4
        mov     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __124

__1879:

__1878:
        add     dword ptr [ebp-10H], 1

__1876:
        cmp     dword ptr [ebp-10H], 2
        jle     __1877

__l_2nofruit:

__124:
        sub     esp, 4
        lea     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1855

__119:
        sub     esp, 8
        lea     eax, dword ptr [ebp-134H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tballoon
        call    ___bbObjEachFirst
        and     eax, eax
        je      __125

__1888:
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __1889
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__1889:
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __1890
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1056964608
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __1891

__1890:
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1892
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1031127695
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1892:

__1891:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1893
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1138491392
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1894
        mov     ebx, 1
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_little_splash

__1894:

__1893:
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1895
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vballoon_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        jle     __1896
        sub     esp, 4
        mov     dword ptr [esp], 9
        call    __fplaysounds
        sub     esp, 8
        lea     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tflash
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 12
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3221225472
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__1896:

__1895:
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1897
        sub     esp, 24
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112801280
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vcrate_im]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-138H], eax
        cmp     dword ptr [ebp-138H], 0
        je      __1898
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-138H]
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 30
        jle     __1899
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-13CH], ebx
        cmp     dword ptr [ebp-13CH], 1
        je      __1901
        cmp     dword ptr [ebp-13CH], 2
        je      __1902
        cmp     dword ptr [ebp-13CH], 3
        je      __1903
        jmp     __1900

__1901:
        mov     dword ptr [ebp-10H], 1
        jmp     __1904

__1905:
        sub     esp, 32
        mov     dword ptr [esp], -1065353216
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 8
        mov     dword ptr [esp], 9
        mov     dword ptr [esp+4H], 16
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     ebx, dword ptr [ebp-10H]
        sub     ebx, 3
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112801280
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1090519040
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        add     dword ptr [ebp-10H], 1

__1904:
        cmp     dword ptr [ebp-10H], 5
        jle     __1905

__127:
        jmp     __1900

__1902:
        sub     esp, 32
        mov     dword ptr [esp], -1065353216
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 17
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+8H], -1090519040
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112801280
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1090519040
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __1900

__1903:
        sub     esp, 32
        mov     dword ptr [esp], -1065353216
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 18
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+8H], -1090519040
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112801280
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1090519040
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __1900

__1900:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fplaysounds
        mov     dword ptr [ebp-10H], 12
        jmp     __1906

__1907:
        sub     esp, 32
        mov     dword ptr [esp], -1056964608
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     ebx, dword ptr [ebp-10H]
        sub     ebx, 14
        shl     ebx, 1
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1108082688
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-10H], 1

__1906:
        cmp     dword ptr [ebp-10H], 15
        jle     __1907

__1899:

__1898:

__128:
        mov     eax, dword ptr [ebp-134H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143930880
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3272998912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1908
        sub     esp, 4
        mov     eax, dword ptr [ebp-134H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1908:

__1897:
        sub     esp, 4
        lea     eax, dword ptr [ebp-134H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1888

__125:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0B4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tbird
        call    ___bbObjEachFirst
        and     eax, eax
        je      __129

__1909:
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1138501878
        mov     dword ptr [esp+4H], 1008981770
        call    __frnd
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1138501878
        mov     dword ptr [esp+4H], 1008981770
        call    __frnd
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_x]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     eax, dword ptr [ebp-0B4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1910
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1910:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_x]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     eax, dword ptr [ebp-0B4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1911
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1911:
        mov     eax, dword ptr [ebp-0B4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_y]
        sub     ebx, 100
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1912
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1912:
        mov     eax, dword ptr [ebp-0B4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_y]
        add     ebx, 100
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1913
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__1913:
        mov     ebx, dword ptr [ebp-0B4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 24
        jne     __1914
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0B4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__1914:
        mov     eax, dword ptr [ebp-0B4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1915
        sub     esp, 4
        mov     eax, dword ptr [ebp-0B4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1915:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0B4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1909

__129:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbird_focus_x]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1056964608
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbird_focus_x], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskyoffset]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1138819072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyrise]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyoffset]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vskyrise]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __1916
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyrise]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], ebx

__1916:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyoffset]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vskyrise]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyoffset], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-140H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __130

__1917:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 8
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__verupt], 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1918
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__verupt], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-144H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __tboulder
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1133412352
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1128136704
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1069547520
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-144H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1063256064
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-144H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        mov     ebx, dword ptr [ebp-144H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     dword ptr [ebx], eax

__1918:
        sub     esp, 20
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1919
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-148H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 20
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_loaded]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1920
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-14CH]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 20
        mov     eax, offset __1921
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-150H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 20
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_active]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __1922
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-154H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __1923
        sub     esp, 4
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-188H]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, esi
        and     eax, eax
        je      __1924
        mov     ebx, 0
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahillpop]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-158H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1925
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        jne     __1926
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1927
        mov     ebx, 3
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        jmp     __1928

__1927:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1928:
        jmp     __1929

__1926:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-158H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax

__1929:
        jmp     __1930

__1925:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asethill]
        mov     eax, dword ptr [eax]
        cmp     eax, 50
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 60
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 90
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 91
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 13
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1931
        mov     ebx, 0
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx
        jmp     __1932

__1931:
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmountedguns], 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 51
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1933
        sub     esp, 12
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmountedguns]
        mov     dword ptr [esp], eax
        call    __fmountguns
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmountedguns], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        jle     __1934
        mov     ebx, 0
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__1934:

__1933:
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awaterfaller]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 51
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1935
        mov     ebx, 0
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awaterfaller]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __1936
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __twaterfall
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1150427136
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 191
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1936:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __1937
        sub     esp, 8
        lea     eax, dword ptr [ebp-0FCH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __twaterfall2
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1147813888
        mov     esi, dword ptr [ebp-0FCH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 212
        mov     esi, dword ptr [ebp-0FCH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__1937:

__1935:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 13
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1938
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jne     __1939
        mov     ebx, 51
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__1939:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 54
        jne     __1940
        mov     ebx, 51
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__1940:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 91
        jne     __1941
        mov     ebx, 90
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__1941:

__1938:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 12
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1942
        sub     esp, 8
        mov     dword ptr [esp], 51
        mov     dword ptr [esp+4H], 57
        call    __frand
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __1943
        mov     ebx, 50
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__1943:

__1942:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 52
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1944
        mov     ebx, 0
        mov     esi, dword ptr [ebp-140H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__1944:

__1932:

__1930:
        mov     ebx, dword ptr [ebp-158H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __1945
        mov     ebx, 1
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__1945:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-158H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-158H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        sub     esp, 4
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-158H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        cmp     eax, 99
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-158H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1946
        sub     esp, 12
        mov     eax, dword ptr [ebp-158H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1129316352
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 380
        mov     dword ptr [esp+8H], 1
        call    __fmake_ground_target
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fload_base

__1946:

__1924:

__1923:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __1947
        sub     esp, 4
        mov     eax, dword ptr [ebp-140H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1947:
        sub     esp, 4
        lea     eax, dword ptr [ebp-140H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1917

__130:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1065353216
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     dword ptr [ebp-188H], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-188H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1948
        sub     esp, 8
        lea     eax, dword ptr [ebp-158H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1142947840
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-158H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowfront]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighfront]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-158H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, dword ptr [ebp-158H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-158H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill

__1948:
        sub     esp, 8
        lea     eax, dword ptr [ebp-144H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tboulder
        call    ___bbObjEachFirst
        and     eax, eax
        je      __131

__1949:
        mov     ebx, dword ptr [ebp-144H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-144H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-144H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1022739087
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-144H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-144H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __1950
        sub     esp, 4
        mov     eax, dword ptr [ebp-144H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__1950:
        sub     esp, 4
        lea     eax, dword ptr [ebp-144H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1949

__l_2scorecounter_update:

__131:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adoubler]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1951
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__1951:
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adoubler]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1952
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__1952:
        mov     dword ptr [ebp-10H], 1
        jmp     __1953

__1954:
        mov     dword ptr [ebp-12CH], 0
        jmp     __1955

__1956:
        mov     eax, dword ptr [ebp-10H]
        sub     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acountervalue]
        mov     eax, dword ptr [eax]
        mov     ebx, dword ptr [ebp-12CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonus_at]
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-12CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonus_at]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlives_off], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1957
        sub     esp, 4
        mov     eax, 23
        add     eax, dword ptr [ebp-10H]
        sub     eax, 1
        mov     dword ptr [esp], eax
        call    __fplaysounds
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 1
        jne     __1958
        sub     esp, 12
        mov     dword ptr [esp+4H], 500
        mov     dword ptr [esp+8H], 6
        mov     dword ptr [esp], 50
        call    __fstarburst
        jmp     __1959

__1958:
        sub     esp, 12
        mov     dword ptr [esp+4H], 500
        mov     dword ptr [esp+8H], 9
        mov     dword ptr [esp], 630
        call    __fstarburst

__1959:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __1960
        mov     ebx, 0
        mov     esi, dword ptr [ebp-10H]
        add     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        call    __fupdatecounters

__1960:

__1957:
        add     dword ptr [ebp-12CH], 1

__1955:
        cmp     dword ptr [ebp-12CH], 19
        jle     __1956

__133:
        add     dword ptr [ebp-10H], 1

__1953:
        cmp     dword ptr [ebp-10H], 2
        jle     __1954

__132:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        mov     ecx, 60
        cdq
        idiv    ecx
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     dword ptr [ebx], eax
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        mov     ecx, 60
        cdq
        idiv    ecx
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     dword ptr [ebx], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahighest_score]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1961
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahighest_score]
        mov     dword ptr [esi], ebx

__1961:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahighest_score]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __1962
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahighest_score]
        mov     dword ptr [esi], ebx

__1962:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1963
        mov     ebx, 0
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx

__1963:
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __1964
        mov     ebx, 0
        mov     esi, 5
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx

__1964:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounteractive]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1965
        sub     esp, 24
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        mov     ecx, 60
        cdq
        idiv    ecx
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+8H], 24
        mov     dword ptr [esp+4H], 17
        mov     dword ptr [esp], 4
        call    __fmakecounter

__1965:
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounteractive]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1966
        sub     esp, 24
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon_count]
        mov     eax, dword ptr [eax]
        mov     ecx, 60
        cdq
        idiv    ecx
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+8H], 24
        mov     dword ptr [esp+4H], 592
        mov     dword ptr [esp], 5
        call    __fmakecounter

__1966:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1967
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        jmp     __1968

__1967:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounteractive]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1969
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jge     __1970
        sub     esp, 24
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+14H], 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 461
        mov     dword ptr [esp+4H], 65
        mov     dword ptr [esp], 2
        call    __fmakecounter
        jmp     __1971

__1970:
        sub     esp, 24
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+14H], 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 461
        mov     dword ptr [esp+4H], 65
        mov     dword ptr [esp], 2
        call    __fmakecounter

__1971:

__1969:

__1968:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1972
        mov     ebx, 0
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        jmp     __1973

__1972:
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounteractive]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __1974
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jge     __1975
        sub     esp, 24
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+14H], 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 461
        mov     dword ptr [esp+4H], 622
        mov     dword ptr [esp], 3
        call    __fmakecounter
        jmp     __1976

__1975:
        sub     esp, 24
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+14H], 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alives]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 461
        mov     dword ptr [esp+4H], 593
        mov     dword ptr [esp], 3
        call    __fmakecounter

__1976:

__1974:

__1973:
        call    __fupdatecounters
        call    __fupdatedigits
        call    __fupdateletters
        sub     esp, 4
        mov     eax, offset __aexplosion_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 61
        mov     esi, offset __aexplosion_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aexplosion_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        lea     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __texplosion
        call    ___bbObjEachFirst
        and     eax, eax
        je      __134

__1977:
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_active]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexplosion_active]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1977

__134:
        mov     dword ptr [ebp-8H], 1
        jmp     __1978

__1979:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1980
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fload_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1

__1980:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vunload], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1981
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexplosion_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexplosion_loaded]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1

__1981:
        add     dword ptr [ebp-8H], 1

__1978:
        cmp     dword ptr [ebp-8H], 60
        jle     __1979

__135:
        sub     esp, 4
        mov     eax, offset __aenemy_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 71
        mov     esi, offset __aenemy_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __aenemy_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy
        call    ___bbObjEachFirst
        and     eax, eax
        je      __136

__1982:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_active]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_active]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __1982

__136:
        mov     dword ptr [ebp-8H], 1
        jmp     __1983

__1984:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_loaded]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1985
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fload_enemy

__1985:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_loaded]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vunload], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __1986
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_loaded]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1
        cmp     dword ptr [ebp-8H], 7
        jne     __1987
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsquidbottom_im], 0

__1987:
        cmp     dword ptr [ebp-8H], 9
        jne     __1988
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_squidbottom_im], 0

__1988:

__1986:
        add     dword ptr [ebp-8H], 1

__1983:
        cmp     dword ptr [ebp-8H], 71
        jle     __1984

__137:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcarload]
        mov     dword ptr [ebp-15CH], ebx
        cmp     dword ptr [ebp-15CH], 1
        je      __1990
        cmp     dword ptr [ebp-15CH], 2
        je      __1991
        cmp     dword ptr [ebp-15CH], 3
        je      __1992
        cmp     dword ptr [ebp-15CH], 4
        je      __1993
        cmp     dword ptr [ebp-15CH], 5
        je      __1994
        cmp     dword ptr [ebp-15CH], 6
        je      __1995
        cmp     dword ptr [ebp-15CH], 10
        je      __1996
        cmp     dword ptr [ebp-15CH], 11
        je      __1997
        cmp     dword ptr [ebp-15CH], 12
        je      __1998
        cmp     dword ptr [ebp-15CH], 13
        je      __1999
        cmp     dword ptr [ebp-15CH], 14
        je      __2000
        cmp     dword ptr [ebp-15CH], 15
        je      __2001
        jmp     __1989

__1990:
        sub     esp, 8
        mov     eax, offset __2002
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtray_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtray_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtray_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __1989

__1991:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 100
        mov     dword ptr [esp+4H], 208
        sub     esp, 4
        mov     eax, offset __2003
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+8H], ebx
        mov     ebx, 0
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __1989

__1992:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 60
        mov     dword ptr [esp+4H], 209
        sub     esp, 4
        mov     eax, offset __2004
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+8H], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __1989

__1993:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 121
        mov     dword ptr [esp+4H], 304
        sub     esp, 4
        mov     eax, offset __2005
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        sub     eax, 22
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        sub     ebx, 60
        mov     dword ptr [esp+8H], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acartop_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __1989

__1994:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 77
        mov     dword ptr [esp+4H], 89
        sub     esp, 4
        mov     eax, offset __2006
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsuspension_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsuspension_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsuspension_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 93
        mov     dword ptr [esp+4H], 86
        sub     esp, 4
        mov     eax, offset __2007
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmiss_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmiss_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmiss_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __1989

__1995:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 81
        mov     dword ptr [esp+4H], 80
        sub     esp, 4
        mov     eax, offset __2008
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwheel_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 37
        mov     dword ptr [esp+4H], 72
        sub     esp, 4
        mov     eax, offset __2009
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_gun_im], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 41
        mov     dword ptr [esp+8H], 18
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_gun_im]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_gun_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __1989

__1996:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtray_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtray_im], 0
        jmp     __1989

__1997:
        sub     esp, 4
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acartop_im]
        mov     dword ptr [esi], ebx
        jmp     __1989

__1998:
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acartop_im]
        mov     dword ptr [esi], ebx
        jmp     __1989

__1999:
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acartop_im]
        mov     dword ptr [esi], ebx
        jmp     __1989

__2000:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsuspension_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsuspension_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmiss_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmiss_im], 0
        jmp     __1989

__2001:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwheel_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_gun_im], 0
        jmp     __1989

__1989:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcarload], 0
        je      __2010
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcarload], 1

__2010:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcarload], 7
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcarload], 16
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __2011
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcarload], 0

__2011:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 0
        jne     __2012
        mov     dword ptr [ebp-160H], 0
        mov     dword ptr [ebp-8H], 1
        jmp     __2013

__2014:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asoundplaying]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-160H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2015
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asfx_sd]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fplaysound
        mov     dword ptr [ebp-164H], eax
        mov     ebx, 4294967294
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-160H], 1
        cmp     dword ptr [ebp-8H], 1
        jne     __2016
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1056964608
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 18000
        mov     dword ptr [esp+4H], 26000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax

__2016:
        cmp     dword ptr [ebp-8H], 2
        jne     __2017
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1059481190
        call    __fchannelvolume

__2017:
        cmp     dword ptr [ebp-8H], 3
        jne     __2018
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1061997773
        call    __fchannelvolume

__2018:
        cmp     dword ptr [ebp-8H], 2
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-8H], 3
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __2019
        sub     esp, 16
        mov     dword ptr [esp], 8000
        mov     dword ptr [esp+4H], 14000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax

__2019:
        cmp     dword ptr [ebp-8H], 7
        jne     __2020
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1051931443
        call    __fchannelvolume

__2020:
        cmp     dword ptr [ebp-8H], 6
        jne     __2021
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1059481190
        call    __fchannelvolume

__2021:
        cmp     dword ptr [ebp-8H], 19
        jne     __2022
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1058642330
        call    __fchannelvolume

__2022:
        cmp     dword ptr [ebp-8H], 20
        jne     __2023
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1058642330
        call    __fchannelvolume

__2023:
        cmp     dword ptr [ebp-8H], 16
        jne     __2024
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1056964608
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 20000
        mov     dword ptr [esp+4H], 28000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax

__2024:
        cmp     dword ptr [ebp-8H], 36
        jne     __2025
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1055286886
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 6000
        mov     dword ptr [esp+4H], 12000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax
        mov     ebx, 4294967290
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2025:
        cmp     dword ptr [ebp-8H], 37
        jne     __2026
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1048576000
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 6000
        mov     dword ptr [esp+4H], 12000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax
        mov     ebx, 4294967290
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2026:
        cmp     dword ptr [ebp-8H], 38
        jne     __2027
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1041865114
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 6000
        mov     dword ptr [esp+4H], 12000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax
        mov     ebx, 4294967290
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2027:
        cmp     dword ptr [ebp-8H], 39
        jne     __2028
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1036831949
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 6000
        mov     dword ptr [esp+4H], 12000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax
        mov     ebx, 4294967290
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2028:
        cmp     dword ptr [ebp-8H], 28
        jne     __2029
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1055286886
        call    __fchannelvolume
        sub     esp, 16
        mov     dword ptr [esp], 40000
        mov     dword ptr [esp+4H], 48000
        call    __frand
        mov     dword ptr [esp+4H], eax
        mov     ebx, dword ptr [ebp-164H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fchannelpitch
        mov     ebx, eax
        mov     ebx, 4294967290
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2029:
        cmp     dword ptr [ebp-8H], 27
        jne     __2030
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1061997773
        call    __fchannelvolume

__2030:
        cmp     dword ptr [ebp-8H], 10
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-8H], 17
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-8H], 29
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __2031
        sub     esp, 8
        mov     eax, dword ptr [ebp-164H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1058642330
        call    __fchannelvolume

__2031:

__2015:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asoundplaying]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2032
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asoundplaying]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2032:
        add     dword ptr [ebp-8H], 1

__2013:
        cmp     dword ptr [ebp-8H], 40
        jle     __2014

__139:
        jmp     __2033

__2012:
        mov     dword ptr [ebp-8H], 1
        jmp     __2034

__2035:
        mov     ebx, 4294967276
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__2034:
        cmp     dword ptr [ebp-8H], 40
        jle     __2035

__2033:

__140:
        ret

__l_2rendergame:
        mov     dword ptr [ebp-168H], 0
        call    __frender_bg
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __twaterfall
        call    ___bbObjEachFirst
        and     eax, eax
        je      __141

__2036:
        sub     esp, 16
        mov     ebx, 480
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        sub     ebx, esi
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+8H], 55
        mov     ebx, dword ptr [ebp-0F8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-0F8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fviewport
        mov     ebx, dword ptr [ebp-0F8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        sub     ebx, 158
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2037

__2038:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        add     dword ptr [ebp-8H], 158

__2037:
        cmp     dword ptr [ebp-8H], 490
        jle     __2038

__142:
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0F8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        sub     ebx, 2
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0F8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall_top_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2036

__141:
        sub     esp, 4
        mov     eax, offset __abase_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 50
        mov     esi, offset __abase_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __abase_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        lea     eax, dword ptr [ebp-16CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tground_target
        call    ___bbObjEachFirst
        and     eax, eax
        je      __143

__2039:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-16CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-16CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-16CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbase_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        mov     ebx, 1
        mov     esi, dword ptr [ebp-16CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abase_active]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp-16CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2039

__143:
        sub     esp, 8
        lea     eax, dword ptr [ebp-90H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tcar
        call    ___bbObjEachFirst
        and     eax, eax
        je      __144

__2040:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1000
        je      __2041
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1121714176
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     esi, dword ptr [esi]
        add     esi, 10
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2041:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        je      __2042
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2043

__2042:
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 0
        call    __fcolor
        sub     esp, 20
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120796672
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+0CH], 50
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 247
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        add     ebx, 15
        mov     dword ptr [esp+4H], ebx
        call    __frect

__2043:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 55
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsuspension_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     esi, 55
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 12
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsuspension_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2044
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 107
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 72
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__2044:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2045
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 74
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2045:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        je      __2046
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 5
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-90H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acartop_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2046:
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __2047
        sub     esp, 16
        mov     ebx, dword ptr [ebp-90H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112801280
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 87
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-90H]
        mov     edi, dword ptr [edi]
        add     edi, 76
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmiss_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2047:
        sub     esp, 16
        mov     ebx, 560
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        sub     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fdivp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112014848
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, 560
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sub     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fdivp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-90H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112014848
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-90H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2040

__144:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2048
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     esi, 573
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2048:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy
        call    ___bbObjEachFirst
        and     eax, eax
        je      __145

__2049:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 64
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2050
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 56
        jne     __2051
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 24
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1092616192
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 28
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlauncher_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2051:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 61
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 66
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2052
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1123549184
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1092616192
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 32
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__2052:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 57
        jne     __2053
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1115815936
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1106247680
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 32
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__2053:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 22
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2054
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1127743488
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm1_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1128005632
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm2_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2054:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 22
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2055
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1123811328
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2055:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 27
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2056
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1126170624
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body2_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2056:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        cmp     eax, 2
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 22
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2057
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1110704128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer1_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer2_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2057:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 27
        jne     __2058
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1110966272
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 136
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1108344832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 136
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2058:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 56
        jne     __2059
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101529088
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, 1101004800
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2059:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 57
        jne     __2060
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1116471296
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, 1111490560
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2060:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 61
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 66
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2061
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143930880
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2062
        jmp     __2063

__2062:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143537664
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2064
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2065

__2064:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143111680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2066
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2067

__2066:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141932032
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2068
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2069

__2068:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141571584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2070
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2071

__2070:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1140981760
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2072
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1123024896
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigger_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2073

__2072:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1139474432
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2074
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigger_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2075

__2074:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigger_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2075:

__2073:

__2071:

__2069:

__2067:

__2065:

__2063:

__2061:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 55
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1141555200
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2076
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1097859072
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2076:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 66
        jle     __2077
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1105199104
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1116209152
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlast_boss_hatch_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2077:

__2050:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2049

__145:
        sub     esp, 8
        lea     eax, dword ptr [ebp-118H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tturret2
        call    ___bbObjEachFirst
        and     eax, eax
        je      __146

__2078:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-118H]
        mov     edi, dword ptr [edi]
        add     edi, 0
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-118H]
        mov     edi, dword ptr [edi]
        add     edi, 16
        mov     edi, dword ptr [edi]
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubrp  st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1093926912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1056629064
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-118H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-118H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vturret_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-118H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2078

__146:
        sub     esp, 8
        lea     eax, dword ptr [ebp-104H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tturret
        call    ___bbObjEachFirst
        and     eax, eax
        je      __147

__2079:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-104H]
        mov     edi, dword ptr [edi]
        add     edi, 0
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-104H]
        mov     edi, dword ptr [edi]
        add     edi, 16
        mov     edi, dword ptr [edi]
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubrp  st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbarrel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1093926912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1056629064
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-104H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-104H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vturret_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-104H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2079

__147:
        sub     esp, 8
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsmoke_ring
        call    ___bbObjEachFirst
        and     eax, eax
        je      __148

__2080:
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2081
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2081:
        sub     esp, 4
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2080

__148:
        mov     dword ptr [ebp-170H], 0
        mov     dword ptr [ebp-174H], 0
        mov     dword ptr [ebp-178H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy
        call    ___bbObjEachFirst
        and     eax, eax
        je      __149

__2082:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 64
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2083
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 58
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 61
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      eax, ebx
        and     eax, eax
        je      __2084
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 7
        jne     __2085
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109131264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 33
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2085:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 19
        jne     __2086
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2087
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 1
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_balloon_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1102053376
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_tye_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2088

__2087:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2089
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1093664768
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_rope_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2090

__2089:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 1
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vballoon_bomb_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1102053376
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_tye_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2090:

__2088:
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 0
        call    __fcolor
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, 1106247680
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 0
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     edi, 1106247680
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-0C8H]
        mov     edi, dword ptr [edi]
        add     edi, 0
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        sub     edi, 1
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        sub     eax, 1
        mov     dword ptr [esp], eax
        call    __fline

__2086:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 26
        jne     __2091
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1098907648
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 35
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2091:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        jne     __2092
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117257728
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1088421888
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 66
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2092:
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 66
        jne     __2093
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1118568448
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 66
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squid_gun_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2093:
        mov     eax, dword ptr [ebp-0C8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 55
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1141555200
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2094
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1097859072
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, 570
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2094:
        jmp     __2095

__2084:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1109917696
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0C8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        sub     esi, 121
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsub_back_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-170H], ebx
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-174H], ebx
        mov     ebx, dword ptr [ebp-0C8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-178H], ebx

__2095:

__2083:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2082

__149:
        cmp     dword ptr [ebp-178H], 0
        je      __2096
        sub     esp, 16
        mov     ebx, dword ptr [ebp-174H]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-170H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-178H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2096:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E0H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tplayershot
        call    ___bbObjEachFirst
        and     eax, eax
        je      __150

__2097:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0E0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0E0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0E0H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__abullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0E0H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2097

__150:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlight_on_off]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 2
        call    ___bbMod
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlight_on_off], eax
        mov     dword ptr [ebp-8H], 1
        jmp     __2098

__2099:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2100
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 5
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 58
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlightning_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2100:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2101
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2102
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        add     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlightning_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2102:
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2103
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        add     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlightning_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2103:

__2101:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightch]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2104
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightch]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fstopchannel
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightch]
        mov     dword ptr [esi], ebx

__2104:
        add     dword ptr [ebp-8H], 1

__2098:
        cmp     dword ptr [ebp-8H], 2
        jle     __2099

__151:
        mov     dword ptr [ebp-8H], 1
        jmp     __2105

__2106:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1114636288
        call    ___bbFMod
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __2107
        sub     esp, 24
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1081081856
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        add     eax, 8
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 16
        call    ___bbMod
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        add     ebx, 10
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpod_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 536
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 563
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2108
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
        mov     ebx, 570
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 23
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     esi, 575
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2108:

__2107:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1114636288
        call    ___bbFMod
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __2109
        sub     esp, 24
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1081081856
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 16
        call    ___bbMod
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        add     ebx, 10
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpod_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 536
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 563
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2110
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
        mov     ebx, 570
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 23
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     esi, 575
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2110:

__2109:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __2111
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      ebx, eax
        and     ebx, ebx
        je      __2112
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aship_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 536
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2113
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
        mov     ebx, 570
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 30
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     esi, 575
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2113:

__2112:

__2111:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aflsh]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2114
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 30
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aflsh]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 61
        mov     dword ptr [esp+4H], esi
        mov     eax, 0
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aflash_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2114:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1114636288
        call    ___bbFMod
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __2115
        sub     esp, 24
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1081081856
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        add     eax, 8
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 16
        call    ___bbMod
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        add     ebx, 10
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpod_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 536
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 563
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2116
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
        mov     ebx, 570
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 23
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     esi, 575
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2116:

__2115:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1114636288
        call    ___bbFMod
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     ebx, eax
        and     ebx, ebx
        je      __2117
        sub     esp, 24
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1081081856
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 16
        call    ___bbMod
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        add     ebx, 10
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpod_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 536
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
        cmp     ebx, 563
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2118
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
        mov     ebx, 570
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 23
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     esi, 575
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vvertscroll]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2118:

__2117:
        add     dword ptr [ebp-8H], 1

__2105:
        cmp     dword ptr [ebp-8H], 2
        jle     __2106

__152:
        sub     esp, 8
        lea     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tstar
        call    ___bbObjEachFirst
        and     eax, eax
        je      __153

__2119:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpodcounter]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpodcounter]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112276992
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpodcounter]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        or      ebx, eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnocollect], 1
        sete    al
        movzx   eax, al
        and     eax, ebx
        and     eax, eax
        je      __2120
        sub     esp, 16
        mov     ebx, dword ptr [ebp-11CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        sub     ebx, 44
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-11CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        add     esi, 46
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcollect_these_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2120:
        sub     esp, 4
        lea     eax, dword ptr [ebp-11CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2119

__153:
        sub     esp, 8
        lea     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tbonus
        call    ___bbObjEachFirst
        and     eax, eax
        je      __154

__2121:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-124H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-124H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-124H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2121

__154:
        sub     esp, 8
        lea     eax, dword ptr [ebp-134H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tballoon
        call    ___bbObjEachFirst
        and     eax, eax
        je      __155

__2122:
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jge     __2123
        sub     esp, 16
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vballoon_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2123:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1104674816
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstring_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2124
        sub     esp, 16
        mov     ebx, dword ptr [ebp-134H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-134H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112801280
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcrate_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2124:
        sub     esp, 4
        lea     eax, dword ptr [ebp-134H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2122

__155:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0D0H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tparachuter
        call    ___bbObjEachFirst
        and     eax, eax
        je      __156

__2125:
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1000
        je      __2126
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1107296256
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     edi, dword ptr [ebp-0D0H]
        mov     edi, dword ptr [edi]
        add     edi, 24
        mov     edi, dword ptr [edi]
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vchute_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2126:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0D0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0D0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vparachute_man_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0D0H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2125

__156:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tflash
        call    ___bbObjEachFirst
        and     eax, eax
        je      __157

__2127:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0ECH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sar     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0ECH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0ECH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aflash_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2127

__157:
        sub     esp, 8
        lea     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __texplosion
        call    ___bbObjEachFirst
        and     eax, eax
        je      __158

__2128:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-120H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-120H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-120H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-120H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2128

__158:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tshard
        call    ___bbObjEachFirst
        and     eax, eax
        je      __159

__2129:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0F4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0F4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0F4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ashard_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0F4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2129

__159:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tbouncywheel
        call    ___bbObjEachFirst
        and     eax, eax
        je      __160

__2130:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0C4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0C4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwheel_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2130

__160:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0F0H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy_zap
        call    ___bbObjEachFirst
        and     eax, eax
        je      __161

__2131:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 0
        jne     __2132
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0F0H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0F0H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0F0H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__venemy_lightning_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2132:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0F0H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2131

__161:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemyshot
        call    ___bbObjEachFirst
        and     eax, eax
        je      __162

__2133:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0E8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        sar     esi, 1
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0E8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0E8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemybullet_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2133

__162:
        sub     esp, 8
        lea     eax, dword ptr [ebp-140H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __163

__2134:
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2135
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, esi, 0
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_active]
        mov     esi, 1
        mov     dword ptr [ebx], esi
        sub     esp, 16
        mov     eax, dword ptr [ebp-140H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayery]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-140H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmikedrawimage

__2135:
        sub     esp, 4
        lea     eax, dword ptr [ebp-140H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2134

__163:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2136
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2136:
        sub     esp, 8
        lea     eax, dword ptr [ebp-100H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tscores
        call    ___bbObjEachFirst
        and     eax, eax
        je      __164

__2137:
        mov     ebx, dword ptr [ebp-100H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascores_im]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2138
        sub     esp, 16
        mov     ebx, dword ptr [ebp-100H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-100H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-100H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2138:
        sub     esp, 4
        lea     eax, dword ptr [ebp-100H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2137

__164:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tback_element
        call    ___bbObjEachFirst
        and     eax, eax
        je      __165

__2139:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2140
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2141
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2142

__2141:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2143
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwire_slam], 0
        jne     __2144
        sub     esp, 12
        mov     dword ptr [esp+4H], 60
        mov     dword ptr [esp+8H], 122
        mov     dword ptr [esp], 47
        call    __fcolor

__2144:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1139146752
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpyx]
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1137836032
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        add     ebx, 32
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpyx]
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1139179520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        sub     ebx, 1
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpyx]
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1137868800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        add     ebx, 31
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vpyx]
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 0
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2143:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2145
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwire_slam], 0
        jne     __2146
        sub     esp, 12
        mov     dword ptr [esp+4H], 40
        mov     dword ptr [esp+8H], 92
        mov     dword ptr [esp], 37
        call    __fcolor

__2146:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1139146752
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1139146752
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 0
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     edi, 1132920832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1086324736
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1132920832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-4CH]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fsubp   st(1), st(0)
        mov     edx, 1086324736
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1137836032
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1137836032
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 0
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     edi, 1132920832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1086324736
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1132920832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-4CH]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fsubp   st(1), st(0)
        mov     edx, 1086324736
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1139179520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1139146752
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 0
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     edi, 1132920832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1086324736
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1132953600
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-4CH]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fsubp   st(1), st(0)
        mov     edx, 1086324736
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1137868800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1137836032
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 0
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     edi, 1132920832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1086324736
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1132953600
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-4CH]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fsubp   st(1), st(0)
        mov     edx, 1086324736
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1134559232
        push    edx
        fld     dword ptr [esp]
        pop     edx
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 12
        mov     dword ptr [esp+4H], 255
        mov     dword ptr [esp+8H], 255
        mov     dword ptr [esp], 255
        call    __fcolor

__2145:

__2142:

__2140:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        jne     __2147
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2147:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2139

__165:
        mov     dword ptr [ebp-8H], 1
        jmp     __2148

__2149:
        mov     dword ptr [ebp-10H], 0
        jmp     __2150

__2151:
        mov     eax, offset __ahill_active
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-10H]
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-10H]
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vunload], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2152
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-10H]
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-10H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-10H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1

__2152:
        add     dword ptr [ebp-10H], 1

__2150:
        cmp     dword ptr [ebp-10H], 8
        jle     __2151

__167:
        add     dword ptr [ebp-8H], 1

__2148:
        cmp     dword ptr [ebp-8H], 99
        jle     __2149

__166:
        call    __fmillisecs
        sub     eax, dword ptr [ebp-64H]
        mov     dword ptr [ebp-68H], eax
        call    __fmillisecs
        mov     dword ptr [ebp-64H], eax
        mov     dword ptr [ebp-8H], 1
        jmp     __2153

__2154:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6000
        jle     __2155
        mov     ebx, 6000
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__2155:
        add     dword ptr [ebp-8H], 1

__2153:
        cmp     dword ptr [ebp-8H], 2
        jle     __2154

__168:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 2
        mov     dword ptr [ebp-98H], ebx
        cmp     dword ptr [ebp-98H], 0
        je      __2156
        sub     dword ptr [ebp-98H], 1

__2156:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setg    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __2157
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vspinster]
        mov     ecx, 7
        cdq
        idiv    ecx
        mov     ebx, dword ptr [ebp-98H]
        shl     ebx, 2
        add     ebx, eax
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+8H], 25
        mov     dword ptr [esp+4H], 30
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2157:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 2
        mov     dword ptr [ebp-98H], ebx
        cmp     dword ptr [ebp-98H], 0
        je      __2158
        sub     dword ptr [ebp-98H], 1

__2158:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aweapon]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setg    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __2159
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vspinster]
        mov     ecx, 7
        cdq
        idiv    ecx
        mov     ebx, dword ptr [ebp-98H]
        shl     ebx, 2
        add     ebx, eax
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+8H], 25
        mov     dword ptr [esp+4H], 606
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstar_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2159:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adoubler]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __2160
        sub     esp, 16
        mov     dword ptr [esp+8H], 22
        mov     dword ptr [esp+0CH], 17
        mov     dword ptr [esp+4H], 280
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2160:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adoubler]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __2161
        sub     esp, 16
        mov     dword ptr [esp+8H], 22
        mov     dword ptr [esp+0CH], 17
        mov     dword ptr [esp+4H], 356
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbonus_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2161:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        je      __2162
        sub     esp, 16
        mov     dword ptr [esp+8H], 470
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 300
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcredits_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 9
        jle     __2163
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcredits], 9

__2163:
        sub     esp, 16
        mov     dword ptr [esp+8H], 470
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vcredits]
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+4H], 370
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcreditcount_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2164

__2162:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdemo_time_left]
        mov     ecx, 1000
        cdq
        idiv    ecx
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        mov     dword ptr [ebp-17CH], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdemo_time_left]
        mov     ecx, 1000
        cdq
        idiv    ecx
        mov     ecx, 60
        cdq
        idiv    ecx
        mov     dword ptr [ebp-180H], eax
        cmp     dword ptr [ebp-17CH], 0
        jge     __2165
        mov     dword ptr [ebp-17CH], 0

__2165:
        cmp     dword ptr [ebp-180H], 0
        jge     __2166
        mov     dword ptr [ebp-180H], 0

__2166:
        cmp     dword ptr [ebp-17CH], 10
        jl      __2167
        sub     esp, 44
        mov     eax, offset __2168
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-180H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __2169
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-17CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 470
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 300
        call    __fdrawtext
        jmp     __2170

__2167:
        sub     esp, 44
        mov     eax, offset __2171
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-180H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, offset __2172
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-17CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 470
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 300
        call    __fdrawtext

__2170:
        cmp     dword ptr [ebp-180H], 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
        cmp     dword ptr [ebp-17CH], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2173
        call    __fzzz
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtitle_upto], 18
        jmp     __l_2title

__2173:

__2164:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __2174
        sub     esp, 16
        mov     dword ptr [esp+8H], 457
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 25
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlittleships_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2175

__2174:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2176
        sub     esp, 16
        mov     dword ptr [esp+8H], 460
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 85
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfire_to_join_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2176:

__2175:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __2177
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alives]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jge     __2178
        sub     esp, 16
        mov     dword ptr [esp+8H], 457
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 581
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlittleships_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2179

__2178:
        sub     esp, 16
        mov     dword ptr [esp+8H], 457
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 556
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlittleships_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2179:
        jmp     __2180

__2177:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcredits], 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-184H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        and     eax, ebx
        and     eax, eax
        je      __2181
        sub     esp, 16
        mov     dword ptr [esp+8H], 460
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 555
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfire_to_join_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2181:

__2180:
        call    __fdrawletters
        call    __fdrawdigits
        call    __fdraw_splinters
        call    __fdo_flip
        ret

__l_2end_of_game_loop:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltax], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltay], 0
        ret

__2_leave:
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-158H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-16CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-154H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-150H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-14CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-148H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-144H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-140H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-134H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-124H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-120H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-11CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-118H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-104H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-100H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0FCH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0F8H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0F4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0F0H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0ECH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0E8H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0E0H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0D0H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CCH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0C8H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0C4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0B4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-94H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-90H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-88H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-58H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-48H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-44H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-34H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-30H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-24H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-184H]
        mov     dword ptr [ebp-184H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-184H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
___MAIN ENDP

__fdelete_all PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 4
        mov     eax, offset __thill
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tenemyshot
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tplayershot
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tletter
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tdigit
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tshard
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tenemy
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __texplosion
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tground_target
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tstar
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tflash
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tbird
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tback_element
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tsmoke_ring
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tbonus
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tscores
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tblimp
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tmoon
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tballoon
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tskystar
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __twaterfall
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __twaterfall2
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tcar
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tbouncywheel
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tparachuter
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __ttitle_cloud
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 4
        mov     eax, offset __tscroll_letter
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        mov     eax, 0
        jmp     __169_leave

__169_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdelete_all ENDP

__fupdate_hills PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 28
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskyoffset]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1138819072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyrise]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyoffset]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vskyrise]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2250
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyrise]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], ebx

__2250:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyoffset]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vskyrise]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyoffset], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __171

__2251:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 8
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__verupt], 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2252
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__verupt], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tboulder
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1133412352
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1128136704
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1069547520
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1063256064
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     dword ptr [ebx], eax

__2252:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2253
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1082130432
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fdivp   st(1), st(0)
        fsubp   st(1), st(0)
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        and     esi, eax
        and     esi, esi
        je      __2254
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahillpop]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2255
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        jne     __2256
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __2257
        mov     ebx, 3
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        jmp     __2258

__2257:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__2258:
        jmp     __2259

__2256:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax

__2259:
        jmp     __2260

__2255:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asethill]
        mov     eax, dword ptr [eax]
        cmp     eax, 50
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 60
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        or      eax, ebx
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 90
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 91
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 13
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2261
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx
        jmp     __2262

__2261:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmountedguns], 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 51
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2263
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmountedguns]
        mov     dword ptr [esp], eax
        call    __fmountguns
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmountedguns], 0
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        jle     __2264
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__2264:

__2263:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awaterfaller]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 51
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2265
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awaterfaller]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2266
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __twaterfall
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1150427136
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 191
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__2266:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __2267
        sub     esp, 8
        lea     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __twaterfall2
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1147813888
        mov     esi, dword ptr [ebp-14H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 212
        mov     esi, dword ptr [ebp-14H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__2267:

__2265:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 13
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 14
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        or      eax, ebx
        and     eax, eax
        je      __2268
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jne     __2269
        mov     ebx, 51
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__2269:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 54
        jne     __2270
        mov     ebx, 51
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__2270:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 91
        jne     __2271
        mov     ebx, 90
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__2271:

__2268:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 12
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2272
        sub     esp, 8
        mov     dword ptr [esp], 51
        mov     dword ptr [esp+4H], 57
        call    __frand
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __2273
        mov     ebx, 50
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__2273:

__2272:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 52
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2274
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__2274:

__2262:

__2260:
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __2275
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__2275:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-0CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-0CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        cmp     eax, 99
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __2276
        sub     esp, 12
        mov     eax, dword ptr [ebp-0CH]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1129316352
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 380
        mov     dword ptr [esp+8H], 1
        call    __fmake_ground_target
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fload_base

__2276:

__2254:

__2253:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2277
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2277:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2251

__171:
        mov     eax, 0
        jmp     __170_leave

__170_leave:
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-14H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0

__fupdate_hills ENDP

__fupdate_back_elements PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 28
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tback_element
        call    ___bbObjEachFirst
        and     eax, eax
        je      __173

__2278:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-8H], ebx
        cmp     dword ptr [ebp-8H], 0
        je      __2280
        cmp     dword ptr [ebp-8H], 5
        je      __2281
        cmp     dword ptr [ebp-8H], 1
        je      __2282
        cmp     dword ptr [ebp-8H], 2
        je      __2282
        cmp     dword ptr [ebp-8H], 3
        je      __2282
        cmp     dword ptr [ebp-8H], 4
        je      __2283
        cmp     dword ptr [ebp-8H], 6
        je      __2284
        cmp     dword ptr [ebp-8H], 7
        je      __2285
        cmp     dword ptr [ebp-8H], 8
        je      __2286
        cmp     dword ptr [ebp-8H], 9
        je      __2287
        cmp     dword ptr [ebp-8H], 10
        je      __2288
        cmp     dword ptr [ebp-8H], 11
        je      __2289
        cmp     dword ptr [ebp-8H], 12
        je      __2290
        cmp     dword ptr [ebp-8H], 13
        je      __2291
        jmp     __2279

__2280:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __2292
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 20
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1103626240
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 1061997773
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_smoke_ring

__2292:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143930880
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2293
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2293:
        jmp     __2279

__2281:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __2294
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 20
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+0CH], 3
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+8H], 1053609165
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_smoke_ring

__2294:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143930880
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2295
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2295:
        jmp     __2279

__2282:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], esi
        jmp     __2279

__2283:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1075419546
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3253731328
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2296
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 4
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 4
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 4
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2296:
        jmp     __2279

__2284:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        mov     ecx, 6
        cdq
        idiv    ecx
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 3
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2297
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2297:
        jmp     __2279

__2285:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3272998912
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1145569280
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        and     ebx, esi
        or      eax, ebx
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3272998912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        and     ebx, esi
        or      eax, ebx
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1143930880
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2298
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2298:
        jmp     __2279

__2286:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125515264
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2299
        mov     ebx, 3196059648
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__2299:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1137180672
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2300
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__2300:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1148846080
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2301
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2301:
        jmp     __2279

__2287:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __2302
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-18H], 1
        jmp     __2303

__2304:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 35
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1065353216
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-18H], 1

__2303:
        cmp     dword ptr [ebp-18H], 20
        jle     __2304

__175:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 27
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        or      eax, ebx
        and     eax, eax
        je      __2305
        sub     esp, 4
        mov     dword ptr [esp], 37
        call    __fplaysounds

__2305:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __2306
        sub     esp, 4
        mov     dword ptr [esp], 38
        call    __fplaysounds

__2306:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6
        jne     __2307
        sub     esp, 4
        mov     dword ptr [esp], 39
        call    __fplaysounds

__2307:

__2302:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        add     ebx, 150
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        and     eax, eax
        je      __2308
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2308:
        jmp     __2279

__2288:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        je      __2309
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        jmp     __2310

__2309:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__2310:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 28
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __2311
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2311:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        cmp     eax, 8
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 23
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __2312
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2312:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        cmp     eax, 12
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 18
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __2313
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2313:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 32
        jle     __2314
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2314:
        jmp     __2279

__2289:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jle     __2315
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2315:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jle     __2316
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2316:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 7
        jle     __2317
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2317:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 11
        jle     __2318
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2318:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 16
        jle     __2319
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__2319:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3267887104
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2320
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2320:
        jmp     __2279

__2290:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        je      __2321
        mov     ebx, 1048576000
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        and     eax, eax
        je      __2322
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2322:
        jmp     __2323

__2321:
        mov     ebx, 1048576000
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayery]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        and     eax, eax
        je      __2324
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2324:

__2323:
        jmp     __2279

__2291:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3276275712
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2325
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2325:
        jmp     __2279

__2279:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2278

__173:
        mov     eax, 0
        jmp     __172_leave

__172_leave:
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-14H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fupdate_back_elements ENDP

__frender_bg PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 88
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
        mov     dword ptr [ebp-28H], ebx
        mov     dword ptr [ebp-2CH], ebx
        mov     dword ptr [ebp-30H], ebx
        mov     dword ptr [ebp-34H], ebx
        mov     dword ptr [ebp-38H], ebx
        mov     dword ptr [ebp-3CH], ebx
        mov     dword ptr [ebp-40H], ebx
        mov     dword ptr [ebp-44H], ebx
        mov     dword ptr [ebp-48H], ebx
        mov     dword ptr [ebp-4CH], ebx
        mov     dword ptr [ebp-50H], ebx
        mov     dword ptr [ebp-54H], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __2326
        mov     dword ptr [ebp-4H], 0
        jmp     __2327

__2328:
        mov     eax, dword ptr [ebp-4H]
        shl     eax, 5
        push    eax
        fild    dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyoffset]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, 3254779904
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 5
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vskyoffset]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1133576192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2329
        mov     dword ptr [ebp-8H], 0
        jmp     __2330

__2331:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 5
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vskyoffset]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskystrip_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        add     dword ptr [ebp-8H], 32

__2330:
        cmp     dword ptr [ebp-8H], 608
        jle     __2331

__2329:

__178:
        add     dword ptr [ebp-4H], 1

__2327:
        cmp     dword ptr [ebp-4H], 23
        jle     __2328

__177:
        sub     esp, 4
        call    __fbackbuffer
        mov     dword ptr [esp], eax
        call    __flockbuffer
        mov     dword ptr [ebp-0CH], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tskystar
        call    ___bbObjEachFirst
        and     eax, eax
        je      __179

__2332:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vskyoffset]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arands]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2333
        mov     dword ptr [ebp-14H], 0

__2333:
        add     dword ptr [ebp-0CH], 1
        cmp     dword ptr [ebp-0CH], 11
        jne     __2334
        mov     dword ptr [ebp-0CH], 1

__2334:
        cmp     dword ptr [ebp-14H], 250
        jle     __2335
        mov     dword ptr [ebp-14H], 0

__2335:
        cmp     dword ptr [ebp-14H], 1
        jle     __2336
        sub     esp, 12
        mov     ebx, dword ptr [ebp-10H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 0
        mov     eax, dword ptr [ebp-10H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __freadpixelfast
        mov     dword ptr [ebp-18H], eax
        mov     dword ptr [ebp-1CH], -1
        mov     dword ptr [ebp-20H], 128
        mov     dword ptr [ebp-24H], 0
        jmp     __2338

__2337:
        mov     ebx, dword ptr [ebp-18H]
        shr     ebx, 1
        mov     esi, 8355711
        and     ebx, esi
        mov     dword ptr [ebp-18H], ebx
        mov     ebx, dword ptr [ebp-1CH]
        shr     ebx, 1
        mov     esi, 8355711
        and     ebx, esi
        mov     dword ptr [ebp-1CH], ebx
        mov     ebx, dword ptr [ebp-14H]
        mov     esi, dword ptr [ebp-20H]
        and     ebx, esi
        and     ebx, ebx
        je      __2339
        mov     ebx, dword ptr [ebp-18H]
        add     dword ptr [ebp-24H], ebx
        jmp     __2340

__2339:
        mov     ebx, dword ptr [ebp-1CH]
        add     dword ptr [ebp-24H], ebx

__2340:
        mov     ebx, dword ptr [ebp-20H]
        shr     ebx, 1
        mov     dword ptr [ebp-20H], ebx

__2338:
        cmp     dword ptr [ebp-20H], 1
        jg      __2337

__180:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-10H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fwritepixelfast

__2336:
        sub     esp, 4
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2332

__179:
        sub     esp, 4
        call    __fbackbuffer
        mov     dword ptr [esp], eax
        call    __funlockbuffer
        sub     esp, 8
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tmoon
        call    ___bbObjEachFirst
        and     eax, eax
        je      __181

__2341:
        mov     ebx, dword ptr [ebp-28H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2342
        sub     esp, 16
        mov     ebx, dword ptr [ebp-28H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-28H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-28H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2342:
        sub     esp, 4
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2341

__181:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jne     __2343
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        sar     eax, 2
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 32
        call    ___bbMod
        mov     ebx, 0
        sub     ebx, eax
        mov     dword ptr [ebp-8H], ebx
        jmp     __2344

__2345:
        mov     ebx, 2090
        sub     ebx, dword ptr [ebp-8H]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vcounter]
        sar     esi, 2
        cmp     ebx, esi
        jge     __2346
        sub     esp, 16
        mov     dword ptr [esp+8H], 287
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        jmp     __2347

__2346:
        mov     ebx, 2058
        sub     ebx, dword ptr [ebp-8H]
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vcounter]
        sar     esi, 2
        cmp     ebx, esi
        jge     __2348
        sub     esp, 16
        mov     dword ptr [esp+8H], 287
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vtransition_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        jmp     __2349

__2348:
        sub     esp, 16
        mov     dword ptr [esp+8H], 287
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vground_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock

__2349:

__2347:
        add     dword ptr [ebp-8H], 32

__2344:
        cmp     dword ptr [ebp-8H], 640
        jle     __2345

__2343:

__182:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2350
        mov     dword ptr [ebp-8H], 0
        jmp     __2351

__2352:
        sub     esp, 16
        mov     dword ptr [esp+8H], 287
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        add     dword ptr [ebp-8H], 32

__2351:
        cmp     dword ptr [ebp-8H], 640
        jle     __2352

__2350:

__183:
        jmp     __2353

__2326:
        sub     esp, 12
        mov     dword ptr [esp+4H], 36
        mov     dword ptr [esp+8H], 19
        mov     dword ptr [esp], 57
        call    __fcolor
        sub     esp, 20
        mov     dword ptr [esp+0CH], 100
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+4H], 200
        mov     dword ptr [esp], 0
        call    __frect

__2353:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpyx], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpyy], 0
        sub     esp, 4
        mov     eax, offset __ahill_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 99
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, offset __ahill_active
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahill_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     dword ptr [ebp-8H], 8
        jmp     __2354

__2355:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayer_block]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2356
        sub     esp, 8
        lea     eax, dword ptr [ebp-2CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __185

__2357:
        mov     ebx, dword ptr [ebp-2CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-8H]
        jne     __2358
        cmp     dword ptr [ebp-8H], 8
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        mov     eax, ebx
        setge   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        mov     dword ptr [ebp-58H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        mov     dword ptr [ebp-58H], eax
        mov     ebx, dword ptr [ebp-2CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2359
        sub     esp, 16
        mov     ebx, dword ptr [ebp-2CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1133772800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 72
        mov     dword ptr [esp+0CH], 0
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounta]
        mov     ecx, 7
        cdq
        idiv    ecx
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 5
        call    ___bbMod
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 8
        lea     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tboulder
        call    ___bbObjEachFirst
        and     eax, eax
        je      __186

__2360:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-30H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-30H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-30H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aboulder_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2360

__2359:

__186:
        mov     ebx, dword ptr [ebp-2CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-8H]
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2361
        sub     esp, 16
        mov     eax, dword ptr [ebp-2CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-8H]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayery]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-2CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmikedrawimage

__2361:
        mov     ebx, dword ptr [ebp-2CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-8H]
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_active]
        mov     esi, 1
        mov     dword ptr [ebx], esi

__2358:
        sub     esp, 4
        lea     eax, dword ptr [ebp-2CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2357

__2356:

__185:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
        cmp     dword ptr [ebp-8H], 8
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        mov     dword ptr [ebp-58H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 20
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2362
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounta]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, 1071225242
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmok_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    ___bbFMod
        fchs
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-4H], eax
        jmp     __2364

__2363:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1132920832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     ebx, 1132593152
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmok_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmok_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     dword ptr [ebp-4H], eax

__2364:
        cmp     dword ptr [ebp-4H], 960
        jl      __2363

__2362:

__187:
        cmp     dword ptr [ebp-8H], 8
        jne     __2365
        sub     esp, 8
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tmoon
        call    ___bbObjEachFirst
        and     eax, eax
        je      __188

__2366:
        mov     ebx, dword ptr [ebp-28H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2367
        sub     esp, 16
        mov     ebx, dword ptr [ebp-28H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-28H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-28H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2367:
        sub     esp, 4
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2366

__2365:

__188:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 9
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        mov     dword ptr [ebp-58H], eax
        cmp     dword ptr [ebp-8H], 8
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2368
        mov     dword ptr [ebp-34H], 3
        jmp     __2369

__2370:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-34H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayery]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        sub     esp, 8
        mov     eax, dword ptr [ebp-34H]
        imul    eax, eax, 80
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vcounta]
        shl     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 360
        call    ___bbMod
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1077936128
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [ebp-38H], esi
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        shl     esi, 1
        sub     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-4H], ebx
        jmp     __2372

__2371:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-38H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-34H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        mov     eax, dword ptr [ebp-34H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     dword ptr [ebp-4H], eax

__2372:
        cmp     dword ptr [ebp-4H], 640
        jl      __2371

__190:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1066611507
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-34H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayery]
        mov     esi, dword ptr [esi]
        add     esi, 20
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        sub     esp, 8
        mov     eax, dword ptr [ebp-34H]
        imul    eax, eax, 80
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vcounta]
        add     eax, 40
        shl     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 360
        call    ___bbMod
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1077936128
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [ebp-38H], esi
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-34H]
        shl     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awateroff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-4H], ebx
        jmp     __2374

__2373:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-38H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-34H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        mov     eax, dword ptr [ebp-34H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     dword ptr [ebp-4H], eax

__2374:
        cmp     dword ptr [ebp-4H], 640
        jl      __2373

__191:
        add     dword ptr [ebp-34H], -1

__2369:
        cmp     dword ptr [ebp-34H], 1
        jge     __2370

__2368:

__189:
        cmp     dword ptr [ebp-8H], 3
        jne     __2375
        sub     esp, 8
        lea     eax, dword ptr [ebp-3CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __twaterfall2
        call    ___bbObjEachFirst
        and     eax, eax
        je      __192

__2376:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-3CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, 480
        mov     edi, dword ptr [ebp-3CH]
        mov     edi, dword ptr [edi]
        add     edi, 4
        mov     edi, dword ptr [edi]
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__vvertscroll]
        sub     ebx, edi
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+8H], 31
        mov     eax, dword ptr [ebp-3CH]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fviewport
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-3CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     ebx, 1118961664
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp-3CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [ebp-4H], esi
        jmp     __2377

__2378:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-3CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall2_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        add     dword ptr [ebp-4H], 89

__2377:
        cmp     dword ptr [ebp-4H], 490
        jle     __2378

__193:
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-3CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-3CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall2_top_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-3CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2376

__2375:

__192:
        sub     esp, 8
        lea     eax, dword ptr [ebp-40H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsmoke_ring
        call    ___bbObjEachFirst
        and     eax, eax
        je      __194

__2379:
        mov     eax, dword ptr [ebp-40H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        cmp     eax, dword ptr [ebp-8H]
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
        cmp     dword ptr [ebp-8H], 1
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2380
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-40H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-40H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-40H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-40H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_ring_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2380:
        sub     esp, 4
        lea     eax, dword ptr [ebp-40H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2379

__194:
        cmp     dword ptr [ebp-8H], 7
        jne     __2381
        sub     esp, 8
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tblimp
        call    ___bbObjEachFirst
        and     eax, eax
        je      __195

__2382:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vblimp_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 160
        mov     dword ptr [esp+8H], 140
        mov     dword ptr [esp], 160
        call    __fcolor
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        sub     ebx, 24
        mov     dword ptr [ebp-48H], ebx
        cmp     dword ptr [ebp-48H], 0
        jle     __2383
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 17
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp+8H], 41
        mov     dword ptr [esp+0CH], 30
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        sub     eax, 24
        mov     dword ptr [esp], eax
        call    __fviewport
        sub     esp, 32
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amess]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amess]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+8H], eax
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-44H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        sub     esi, 9
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-44H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        sub     eax, 20
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-44H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ftext
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2383:
        sub     esp, 4
        lea     eax, dword ptr [ebp-44H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2382

__2381:

__195:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tback_element
        call    ___bbObjEachFirst
        and     eax, eax
        je      __196

__2384:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-8H]
        jne     __2385
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 13
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 29
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     eax, ebx
        and     eax, eax
        je      __2386
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayery]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport

__2386:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2387
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2388

__2387:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __2389
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1075419546
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __2390

__2389:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2390:

__2388:
        sub     esp, 16
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fviewport
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __2391
        sub     esp, 8
        lea     eax, dword ptr [ebp-50H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwire_slam], 0
        jne     __2392
        sub     esp, 12
        mov     dword ptr [esp+4H], 80
        mov     dword ptr [esp+8H], 162
        mov     dword ptr [esp], 67
        call    __fcolor

__2392:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1123811328
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 5
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-50H]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1111228416
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1122762752
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 5
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-50H]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline

__2391:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        jne     __2393
        sub     esp, 8
        lea     eax, dword ptr [ebp-50H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwire_slam], 0
        jne     __2394
        sub     esp, 12
        mov     dword ptr [esp+4H], 70
        mov     dword ptr [esp+8H], 142
        mov     dword ptr [esp], 57
        call    __fcolor

__2394:
        mov     ebx, dword ptr [ebp-50H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1134559232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1061997773
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1134559232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpyx], ebx
        mov     ebx, dword ptr [ebp-50H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1144422400
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, 0
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     esi, 1061997773
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1132920832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vpyy], ebx
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdot_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vpyy]
        add     ebx, 32
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vvertscroll]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdot_im]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1123811328
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vpyy]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1122762752
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vpyy]
        add     edi, 32
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1123811328
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vpyy]
        sub     edi, 1
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1122762752
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1067030938
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpyx]
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vpyy]
        add     edi, 31
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline

__2393:
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __2395
        sub     esp, 8
        lea     eax, dword ptr [ebp-50H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwire_slam], 0
        jle     __2396
        sub     esp, 12
        mov     dword ptr [esp+4H], 255
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vwire_slam]
        imul    esi, esi, 20
        add     esi, 135
        mov     dword ptr [esp+8H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwire_slam]
        imul    eax, eax, 20
        add     eax, 135
        mov     dword ptr [esp], eax
        call    __fcolor
        jmp     __2397

__2396:
        sub     esp, 12
        mov     dword ptr [esp+4H], 80
        mov     dword ptr [esp+8H], 172
        mov     dword ptr [esp], 67
        call    __fcolor

__2397:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1075419546
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1112014848
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 7
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-50H]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1075419546
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1111228416
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vvertscroll]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        mov     edx, 7
        shl     edx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edx, dword ptr [__alayeryoff]
        mov     edx, dword ptr [edx]
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        mov     edx, 1067030938
        push    edx
        fld     dword ptr [esp]
        pop     edx
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+0CH], esi
        mov     edi, dword ptr [ebp-50H]
        mov     edi, dword ptr [edi]
        add     edi, 8
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fline
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1088421888
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1075419546
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     esi, 1132920832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1067869798
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1133019136
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1134559232
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1067869798
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1134559232
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1088421888
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-8H]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1075419546
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     esi, 1132920832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1067869798
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1133576192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1134559232
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        mov     edi, 1067869798
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1134559232
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2395:
        mov     eax, dword ptr [ebp-4CH]
        mov     eax, dword ptr [eax]
        add     eax, 24
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3212836864
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-58H], eax
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 45
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        and     ebx, eax
        and     ebx, ebx
        je      __2398
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1116471296
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vvertscroll]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        mov     edi, dword ptr [ebp-4CH]
        mov     edi, dword ptr [edi]
        add     edi, 4
        mov     edi, dword ptr [edi]
        shl     edi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     edi, dword ptr [__alayeryoff]
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-4CH]
        mov     edi, dword ptr [edi]
        add     edi, 12
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        mov     esi, 1108869120
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+8H], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vrander]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2398:

__2385:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2384

__196:
        cmp     dword ptr [ebp-8H], 6
        jne     __2399
        sub     esp, 8
        lea     eax, dword ptr [ebp-54H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tbird
        call    ___bbObjEachFirst
        and     eax, eax
        je      __197

__2400:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vvertscroll]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayeryoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-54H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        sar     ebx, 2
        mov     dword ptr [esp+0CH], ebx
        mov     ebx, dword ptr [ebp-54H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbird_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-54H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2400

__2399:

__197:
        add     dword ptr [ebp-8H], -1

__2354:
        cmp     dword ptr [ebp-8H], 1
        jge     __2355

__184:
        mov     eax, 0
        jmp     __176_leave

__176_leave:
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-50H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-54H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-44H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-40H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-3CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-30H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-2CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-28H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-58H]
        mov     dword ptr [ebp-58H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-58H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__frender_bg ENDP

__fenter_name PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 24
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 0
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __ffastload_font
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __ffastload_font
        cmp     dword ptr [ebp+18H], 0
        jne     __2401
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fstopchannel
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fmikefreesound
        sub     esp, 8
        mov     eax, offset __2402
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-4H], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicchannel], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__2401:
        sub     esp, 8
        mov     eax, offset __2403
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 64
        sub     esp, 4
        mov     eax, offset __2404
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_balloon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+4H], 64
        sub     esp, 4
        mov     eax, offset __2405
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atitle_balloon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__valldone], 0
        mov     ebx, dword ptr [ebp+14H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vplayer], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwait_for_no_button], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vuptoletter], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnofire], 0
        sub     esp, 8
        mov     dword ptr [esp], offset __vnameentered
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __2406
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        call    __fshatter
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstip], 0
        mov     dword ptr [ebp-8H], 0
        jmp     __2407

__2408:
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__2407:
        cmp     dword ptr [ebp-8H], 10
        jle     __2408

__199:
        call    __fupdateletters
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselx], 113
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsely], 171
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselax], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselay], 0
        mov     dword ptr [ebp-8H], 1
        jmp     __2409

__2410:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __ttitle_cloud
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1097229926
        mov     dword ptr [esp+4H], 1050253722
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, 3
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__2409:
        cmp     dword ptr [ebp-8H], 12
        jle     __2410

__200:
        mov     dword ptr [ebp-8H], 1
        jmp     __2411

__2412:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __ttitle_cloud
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        cmp     dword ptr [ebp-8H], 24
        jge     __2413
        mov     ebx, 2
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        jmp     __2414

__2413:
        cmp     dword ptr [ebp-8H], 29
        jge     __2415
        mov     ebx, 1
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        jmp     __2416

__2415:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__2416:

__2414:
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1056964608
        mov     dword ptr [esp+4H], -1069547520
        call    __frnd
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__2411:
        cmp     dword ptr [ebp-8H], 30
        jle     __2412

__201:
        mov     ebx, 0
        mov     esi, 5
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp+14H], 5
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 45
        mov     dword ptr [esp+4H], 115
        sub     esp, 4
        mov     eax, offset __2417
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 5
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 80
        mov     dword ptr [esp+4H], 40
        sub     esp, 4
        mov     eax, offset __2418
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
        sub     esp, 28
        mov     dword ptr [esp+14H], 5
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 114
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        mov     eax, offset __2419
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsmx], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsmy], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __2421

__2420:
        sub     esp, 20
        mov     eax, offset __2422
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__2421:
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
        cmp     eax, 7
        jl      __2420

__202:
        sub     esp, 28
        mov     dword ptr [esp+14H], 5
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], 430
        mov     dword ptr [esp+4H], 410
        sub     esp, 4
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fprintline
        call    __fflushkeys

__2423:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vframerate], 30
        jne     __2424
        sub     esp, 4
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fupdateentername
        call    __fupdate_splinters

__2424:
        sub     esp, 4
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fupdateentername
        call    __fupdate_splinters
        sub     esp, 4
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __frenderentername
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__valldone], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     dword ptr [esp], 1
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        or      eax, ebx
        and     eax, eax
        je      __2423

__203:
        sub     esp, 4
        mov     eax, offset __ttitle_cloud
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        sub     esp, 12
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __2426
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrCompare
        cmp     eax, 0
        jne     __2425
        sub     esp, 8
        mov     dword ptr [esp], offset __vnameentered
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __2427
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__2425:
        sub     esp, 8
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahiname]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __vnameentered
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahighest_score]
        mov     ebx, dword ptr [ebx]
        mov     esi, 11
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 10
        jmp     __2428

__2429:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-8H]
        add     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __2430
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        sub     esp, 8
        mov     dword ptr [esp], offset __vnameentered
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiname]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahiname]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiname]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        mov     ebx, dword ptr [ebp-14H]
        mov     esi, dword ptr [ebp-8H]
        add     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahiscore]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahiname]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __vnameentered
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __2431

__2430:
        jmp     __204

__2431:
        add     dword ptr [ebp-8H], -1

__2428:
        cmp     dword ptr [ebp-8H], 1
        jge     __2429

__204:
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_balloon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atitle_balloon_im]
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __198_leave

__198_leave:
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     8
__fenter_name ENDP

__fupdateentername PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 16
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-4H], 0
        call    __fdomouse
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 113
        jge     __2432
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcurx], 113

__2432:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 171
        jge     __2433
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcury], 171

__2433:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 473
        jle     __2434
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcurx], 473

__2434:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 315
        jle     __2435
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcury], 315

__2435:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcurx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselx], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcury]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsely], ebx
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vselector_box_im]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vselx]
        sub     eax, 113
        mov     ecx, 36
        cdq
        idiv    ecx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselax], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vselector_box_im]
        mov     dword ptr [esp], eax
        call    __fimageheight
        sar     eax, 1
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vsely]
        sub     eax, 171
        mov     ecx, 36
        cdq
        idiv    ecx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vselay], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmhit]
        and     ebx, ebx
        je      __2436
        mov     dword ptr [ebp-4H], 1

__2436:
        cmp     dword ptr [ebp-4H], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-10H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vwait_for_no_button], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        and     eax, ebx
        and     eax, eax
        je      __2437
        sub     esp, 4
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asfx_sd]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vselay]
        imul    ebx, ebx, 11
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vselax]
        add     ebx, 1
        mov     dword ptr [ebp-8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vuptoletter], 12
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-8H], 54
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        and     eax, ebx
        and     eax, eax
        je      __2438
        cmp     dword ptr [ebp-8H], 53
        jge     __2439
        sub     esp, 20
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atypein]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp], offset __vnameentered
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vuptoletter], 1

__2439:
        cmp     dword ptr [ebp-8H], 53
        jne     __2440
        sub     esp, 20
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __2441
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp], offset __vnameentered
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vuptoletter], 1

__2440:
        mov     ebx, 2
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        call    __fupdateletters
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vuptoletter], 0
        jle     __2442
        mov     ebx, 0
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 7
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 430
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        imul    ebx, ebx, 27
        add     ebx, 43
        mov     dword ptr [esp+4H], ebx
        call    __fprintline

__2442:
        mov     ebx, 0
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        sub     ebx, 1
        mov     dword ptr [esp+4H], ebx
        call    __fleft
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 6
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 430
        mov     dword ptr [esp+4H], 70
        call    __fprintline

__2438:
        cmp     dword ptr [ebp-8H], 54
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-10H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vuptoletter], 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        and     eax, ebx
        and     eax, eax
        je      __2443
        mov     ebx, 2
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        call    __fupdateletters
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 430
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        imul    ebx, ebx, 27
        add     ebx, 43
        mov     dword ptr [esp+4H], ebx
        call    __fprintline
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vuptoletter], 1
        jle     __2444
        mov     ebx, 0
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx
        sub     esp, 40
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        sub     ebx, 1
        mov     dword ptr [esp+4H], ebx
        call    __fleft
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+14H], 6
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], 430
        mov     dword ptr [esp+4H], 70
        call    __fprintline

__2444:
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vuptoletter], 1
        sub     esp, 20
        mov     eax, offset __vnameentered
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vuptoletter]
        mov     dword ptr [esp+4H], ebx
        call    __fleft
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp], offset __vnameentered
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        mov     ebx, 3
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__atrigger]
        mov     dword ptr [esi], ebx

__2443:
        cmp     dword ptr [ebp-8H], 55
        jne     __2445
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__valldone], 1

__2446:
        call    __fdomouse
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 0
        jne     __2446

__2445:

__2437:

__206:
        mov     ebx, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwait_for_no_button], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __ttitle_cloud
        call    ___bbObjEachFirst
        and     eax, eax
        je      __207

__2447:
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __2448
        mov     eax, dword ptr [ebp-0CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-10H], eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3272998912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        and     eax, ebx
        mov     dword ptr [ebp-10H], eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [ebp-10H], eax
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1145405440
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-10H]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2449
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2450
        mov     ebx, 3272998912
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1036831949
        mov     dword ptr [esp+4H], 1056964608
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        jmp     __2451

__2450:
        mov     ebx, 1145405440
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1090519040
        mov     dword ptr [esp+4H], -1110651699
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax

__2451:

__2449:
        jmp     __2452

__2448:
        mov     eax, dword ptr [ebp-0CH]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3264610304
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2453
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        mov     ebx, 1141473280
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1056964608
        mov     dword ptr [esp+4H], -1069547520
        call    __frnd
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax

__2453:

__2452:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2447

__207:
        call    __fupdateletters
        mov     eax, 0
        jmp     __205_leave

__205_leave:
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fupdateentername ENDP

__frenderentername PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 20
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-4H], 7
        jmp     __2454

__2455:
        mov     dword ptr [ebp-8H], 0
        jmp     __2456

__2457:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        sub     ebx, 7
        shl     ebx, 5
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskystrip_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawblock
        add     dword ptr [ebp-8H], 32

__2456:
        cmp     dword ptr [ebp-8H], 608
        jle     __2457

__210:
        add     dword ptr [ebp-4H], 1

__2454:
        cmp     dword ptr [ebp-4H], 21
        jle     __2455

__209:
        sub     esp, 16
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 400
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __ttitle_cloud
        call    ___bbObjEachFirst
        and     eax, eax
        je      __211

__2458:
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jne     __2459
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-0CH]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2459:
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3
        jge     __2460
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-0CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atitle_balloon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2460:
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2458

__211:
        mov     dword ptr [ebp-8H], 0
        jmp     __2461

__2462:
        mov     dword ptr [ebp-4H], 45
        jmp     __2463

__2464:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        add     dword ptr [ebp-4H], 64

__2463:
        cmp     dword ptr [ebp-4H], 170
        jle     __2464

__213:
        add     dword ptr [ebp-8H], 64

__2461:
        cmp     dword ptr [ebp-8H], 640
        jle     __2462

__212:
        mov     dword ptr [ebp-8H], 64
        jmp     __2465

__2466:
        sub     esp, 16
        mov     dword ptr [esp+8H], 430
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        add     dword ptr [ebp-8H], 64

__2465:
        cmp     dword ptr [ebp-8H], 608
        jle     __2466

__214:
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vstip]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstip], ebx
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 0
        call    __fcolor
        sub     esp, 16
        mov     dword ptr [esp+8H], 639
        mov     dword ptr [esp+0CH], 13
        mov     dword ptr [esp+4H], 13
        mov     dword ptr [esp], 0
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 639
        mov     dword ptr [esp+0CH], 141
        mov     dword ptr [esp+4H], 141
        mov     dword ptr [esp], 0
        call    __fline
        sub     esp, 8
        mov     dword ptr [esp], 639
        mov     dword ptr [esp+4H], 13
        call    __fplot
        sub     esp, 8
        mov     dword ptr [esp], 639
        mov     dword ptr [esp+4H], 141
        call    __fplot
        sub     esp, 16
        mov     dword ptr [esp+8H], 608
        mov     dword ptr [esp+0CH], 398
        mov     dword ptr [esp+4H], 398
        mov     dword ptr [esp], 32
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 608
        mov     dword ptr [esp+0CH], 462
        mov     dword ptr [esp+4H], 462
        mov     dword ptr [esp], 32
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+0CH], 462
        mov     dword ptr [esp+4H], 398
        mov     dword ptr [esp], 32
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 608
        mov     dword ptr [esp+0CH], 463
        mov     dword ptr [esp+4H], 398
        mov     dword ptr [esp], 608
        call    __fline
        mov     dword ptr [ebp-10H], 0
        mov     dword ptr [ebp-4H], 1
        jmp     __2467

__2468:
        mov     dword ptr [ebp-8H], 1
        jmp     __2469

__2470:
        cmp     dword ptr [ebp-10H], 52
        jge     __2471
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        imul    ebx, ebx, 36
        add     ebx, 160
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        imul    esi, esi, 36
        add     esi, 100
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __afont_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 0
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__2471:
        add     dword ptr [ebp-10H], 1
        add     dword ptr [ebp-8H], 1

__2469:
        cmp     dword ptr [ebp-8H], 11
        jle     __2470

__216:
        add     dword ptr [ebp-4H], 1

__2467:
        cmp     dword ptr [ebp-4H], 5
        jle     __2468

__215:
        sub     esp, 16
        mov     dword ptr [esp+8H], 321
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 445
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdelend_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        call    __fdrawletters
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vsely]
        sub     ebx, 1
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vselx]
        sub     esi, 2
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vselector_box_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        call    __fdraw_splinters
        call    __fdo_flip
        mov     eax, 0
        jmp     __208_leave

__208_leave:
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__frenderentername ENDP

__fplaysounds PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asoundplaying]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2472
        mov     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asoundplaying]
        mov     dword ptr [esi], ebx

__2472:
        mov     eax, 0
        jmp     __217_leave

__217_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fplaysounds ENDP

__fget_keys PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 20
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        call    __fgetkey
        mov     dword ptr [ebp-4H], eax
        sub     esp, 8
        mov     eax, offset __2474
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fasc
        cmp     dword ptr [ebp-4H], eax
        jne     __2473
        call    __fpause_game

__2473:
        mov     dword ptr [ebp-8H], 0
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcheating], 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     dword ptr [esp], 88
        mov     eax, ebx
        call    __fkeyhit
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __2475
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10000
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__2475:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        jge     __2476
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2477
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        je      __2478
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akey_up]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fkeydown
        and     eax, eax
        je      __2479
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 1
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2480

__2479:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx

__2480:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akey_down]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fkeydown
        and     eax, eax
        je      __2481
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 2
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2482

__2481:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx

__2482:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akey_left]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fkeydown
        and     eax, eax
        je      __2483
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 4
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2484

__2483:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx

__2484:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akey_right]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fkeydown
        and     eax, eax
        je      __2485
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 8
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2486

__2485:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx

__2486:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akey_fire]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fkeydown
        mov     dword ptr [ebp-0CH], eax
        cmp     dword ptr [ebp-0CH], 0
        jne     __2487
        sub     esp, 4
        mov     dword ptr [esp], 57
        call    __fkeydown
        mov     dword ptr [ebp-0CH], eax

__2487:
        cmp     dword ptr [ebp-0CH], 0
        jne     __2488
        sub     esp, 4
        mov     dword ptr [esp], 157
        call    __fkeydown
        mov     dword ptr [ebp-0CH], eax

__2488:
        cmp     dword ptr [ebp-0CH], 0
        jne     __2489
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afiredelay]
        mov     dword ptr [esi], ebx

__2489:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afiredelay]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
        cmp     dword ptr [ebp-0CH], 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __2490
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 16
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx

__2490:
        jmp     __2491

__2478:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdeltax]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1134559232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        call    __fmousex
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubp   st(1), st(0)
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltax], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdeltay]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1128792064
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        call    __fmousey
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fsubp   st(1), st(0)
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltay], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1094713344
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2492
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltax], 1094713344

__2492:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3242196992
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2493
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltax], -1052770304

__2493:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2494
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdeltax]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx

__2494:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2495
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdeltax]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx

__2495:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltay]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1094713344
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2496
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltay], 1094713344

__2496:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltay]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3242196992
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2497
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdeltay], -1052770304

__2497:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltay]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2498
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdeltay]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx

__2498:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdeltay]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2499
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdeltay]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx

__2499:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fmousedown
        mov     dword ptr [ebp-0CH], eax
        cmp     dword ptr [ebp-0CH], 0
        jne     __2500
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afiredelay]
        mov     dword ptr [esi], ebx

__2500:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afiredelay]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
        cmp     dword ptr [ebp-0CH], 0
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __2501
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 16
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx

__2501:
        sub     esp, 8
        mov     dword ptr [esp], 320
        mov     dword ptr [esp+4H], 200
        call    __fmovemouse

__2491:
        jmp     __2502

__2477:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     dword ptr [ebp-10H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    __fjoydown
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], esi
        mov     eax, ebx
        call    __fjoydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], 3
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], esi
        mov     eax, ebx
        call    __fjoydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], esi
        mov     eax, ebx
        call    __fjoydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afiredelay]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        cmp     esi, 0
        mov     eax, esi
        setne   al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-14H]
        or      ebx, esi
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnofire], 0
        mov     eax, esi
        sete    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-14H]
        and     ebx, esi
        and     ebx, eax
        and     ebx, ebx
        je      __2503
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 16
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2504

__2503:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx

__2504:
        sub     esp, 4
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    __fjoyydir
        cmp     eax, 4294967295
        jne     __2505
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 1
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2506

__2505:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx

__2506:
        sub     esp, 4
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    __fjoyydir
        cmp     eax, 1
        jne     __2507
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 2
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2508

__2507:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx

__2508:
        sub     esp, 4
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    __fjoyxdir
        cmp     eax, 1
        jne     __2509
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 4
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2510

__2509:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx

__2510:
        sub     esp, 4
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    __fjoyxdir
        cmp     eax, 4294967295
        jne     __2511
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, 16
        or      ebx, esi
        mov     dword ptr [ebp-8H], ebx
        jmp     __2512

__2511:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx

__2512:

__2502:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 1
        jne     __2513
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, offset __arecorded
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vrecordupto]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__arecorded]
        mov     dword ptr [esi], ebx

__2513:
        sub     esp, 4
        mov     dword ptr [esp], 74
        call    __fkeydown
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __2514
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 0
        mov     ebx, 255
        mov     esi, offset __arecorded
        add     esi, 12
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        imul    esi, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vrecordupto]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__arecorded]
        mov     dword ptr [esi], ebx
        call    __fsave_recording

__2514:
        jmp     __2515

__2476:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 999
        jge     __2516
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vrecordupto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     esi, 1
        and     ebx, esi
        and     ebx, ebx
        je      __2517
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx
        jmp     __2518

__2517:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_up]
        mov     dword ptr [esi], ebx

__2518:
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vrecordupto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        and     ebx, esi
        and     ebx, ebx
        je      __2519
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx
        jmp     __2520

__2519:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_down]
        mov     dword ptr [esi], ebx

__2520:
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vrecordupto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     esi, 4
        and     ebx, esi
        and     ebx, ebx
        je      __2521
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx
        jmp     __2522

__2521:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_left]
        mov     dword ptr [esi], ebx

__2522:
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vrecordupto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     esi, 8
        and     ebx, esi
        and     ebx, ebx
        je      __2523
        mov     ebx, 6
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx
        jmp     __2524

__2523:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_right]
        mov     dword ptr [esi], ebx

__2524:
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vrecordupto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     esi, 16
        and     ebx, esi
        and     ebx, ebx
        je      __2525
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx
        jmp     __2526

__2525:
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx

__2526:
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        imul    ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vrecordupto]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __2527
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 999

__2527:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vjoy], eax
        setne   al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fkeydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __2528
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 999

__2528:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    __fjoydown
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], esi
        mov     eax, ebx
        call    __fjoydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], 3
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], esi
        mov     eax, ebx
        call    __fjoydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], esi
        mov     eax, ebx
        call    __fjoydown
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        or      eax, ebx
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vjoy], ebx
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     ebx, eax
        and     ebx, ebx
        je      __2529
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vrecording], 999

__2529:

__2516:

__2515:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afiredelay]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afiredelay]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afiredelay]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2530
        mov     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afiredelay]
        mov     dword ptr [esi], ebx

__2530:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apress_fire]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __2531
        mov     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afiredelay]
        mov     dword ptr [esi], ebx

__2531:
        mov     eax, 0
        jmp     __218_leave

__218_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fget_keys ENDP

__fmakebullet PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tplayershot
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __219_leave

__219_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     20
__fmakebullet ENDP

__ffirebullet PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __2533
        cmp     dword ptr [ebp-4H], 4
        je      __2533
        cmp     dword ptr [ebp-4H], 2
        je      __2534
        cmp     dword ptr [ebp-4H], 5
        je      __2535
        cmp     dword ptr [ebp-4H], 9
        je      __2535
        cmp     dword ptr [ebp-4H], 6
        je      __2536
        cmp     dword ptr [ebp-4H], 7
        je      __2537
        jmp     __2532

__2533:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 1
        call    __fmakebullet
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 1
        call    __fmakebullet
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2538
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpodoffset]
        add     esi, 22
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 1
        call    __fmakebullet

__2538:
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2539
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpodoffset]
        neg     esi
        add     esi, 22
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 1
        call    __fmakebullet

__2539:
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aflsh]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2540
        sub     esp, 4
        mov     dword ptr [esp], 4
        call    __fplaysounds
        jmp     __2541

__2540:
        sub     esp, 4
        mov     dword ptr [esp], 6
        call    __fplaysounds

__2541:
        jmp     __2532

__2534:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 14
        mov     dword ptr [esp+10H], -4
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 61
        mov     dword ptr [esp], 3
        call    __fmakebullet
        sub     esp, 20
        mov     dword ptr [esp+0CH], 14
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 61
        mov     dword ptr [esp], 4
        call    __fmakebullet
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 2
        call    __fmakebullet
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], -1
        mov     dword ptr [esp+8H], 31
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 2
        call    __fmakebullet
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2542
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpodoffset]
        add     esi, 22
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 2
        call    __fmakebullet

__2542:
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2543
        sub     esp, 20
        mov     dword ptr [esp+0CH], 15
        mov     dword ptr [esp+10H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpodoffset]
        neg     esi
        add     esi, 22
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 2
        call    __fmakebullet

__2543:
        sub     esp, 4
        mov     dword ptr [esp], 5
        call    __fplaysounds
        mov     ebx, 7
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aflsh]
        mov     dword ptr [esi], ebx
        jmp     __2532

__2535:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+8H], 28
        mov     dword ptr [esp+4H], 60
        mov     dword ptr [esp], 6
        call    __fmakebullet
        sub     esp, 4
        mov     dword ptr [esp], 8
        call    __fplaysounds
        jmp     __2532

__2536:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 28
        mov     dword ptr [esp], 5
        call    __fmakebullet
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2544
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpodoffset]
        add     esi, 22
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 5
        call    __fmakebullet

__2544:
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __2545
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vpodoffset]
        neg     esi
        add     esi, 22
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp], 5
        call    __fmakebullet

__2545:
        sub     esp, 4
        mov     dword ptr [esp], 7
        call    __fplaysounds
        jmp     __2532

__2537:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        jne     __2546
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2547
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vplayer]
        add     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightch]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2548
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vs_lightning]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightch]
        mov     dword ptr [ebx], eax

__2548:

__2547:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vplayer]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-8H], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        or      eax, ebx
        and     eax, eax
        je      __2549
        sub     esp, 8
        mov     dword ptr [esp], 1073741824
        mov     dword ptr [esp+4H], 1091567616
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1073741824
        mov     dword ptr [esp+4H], 1091567616
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1073741824
        mov     dword ptr [esp+4H], 1091567616
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vplayer]
        add     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alightning]
        mov     dword ptr [ebx], eax

__2549:

__2546:
        jmp     __2532

__2532:
        mov     eax, 0
        jmp     __220_leave

__220_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__ffirebullet ENDP

__fstarburst PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], -12
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 12
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], -24
        mov     dword ptr [esp+8H], 0
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 24
        mov     dword ptr [esp+8H], 0
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], -10
        mov     dword ptr [esp+8H], -10
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], -10
        mov     dword ptr [esp+8H], 10
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 10
        mov     dword ptr [esp+8H], -10
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 10
        mov     dword ptr [esp+8H], 10
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], -20
        mov     dword ptr [esp+8H], -6
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], -20
        mov     dword ptr [esp+8H], 6
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 20
        mov     dword ptr [esp+8H], -6
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        sub     esp, 24
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 20
        mov     dword ptr [esp+8H], 6
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_shard
        mov     eax, 0
        jmp     __222_leave

__222_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     12
__fstarburst ENDP

__fmake_shard PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tshard
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 1000
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __223_leave

__223_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     24
__fmake_shard ENDP

__fmake_big_shard PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tshard
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+2CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 3
        mov     dword ptr [esp+4H], 8
        call    __frand
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax
        mov     eax, 0
        jmp     __224_leave

__224_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     28
__fmake_big_shard ENDP

__fmake_star PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tstar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        sub     ebx, 1
        shl     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jge     __2550
        mov     ebx, 45
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2550:
        mov     eax, 0
        jmp     __225_leave

__225_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     12
__fmake_star ENDP

__fmake_bonus PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tbonus
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 30
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 10
        call    __frand
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __226_leave

__226_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     24
__fmake_bonus ENDP

__fmake_balloon PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tballoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1056964608
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 2
        call    __frand
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 60
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __227_leave

__227_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fmake_balloon ENDP

__fmake_ground_target PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __2552
        jmp     __2551

__2552:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tground_target
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 80
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 1
        jmp     __2551

__2551:
        mov     eax, 0
        jmp     __228_leave

__228_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     12
__fmake_ground_target ENDP

__fmake_enemy PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 24
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __2554
        cmp     dword ptr [ebp-4H], 2
        je      __2555
        cmp     dword ptr [ebp-4H], 3
        je      __2556
        cmp     dword ptr [ebp-4H], 4
        je      __2557
        cmp     dword ptr [ebp-4H], 5
        je      __2558
        cmp     dword ptr [ebp-4H], 6
        je      __2559
        cmp     dword ptr [ebp-4H], 7
        je      __2560
        cmp     dword ptr [ebp-4H], 8
        je      __2561
        cmp     dword ptr [ebp-4H], 9
        je      __2562
        cmp     dword ptr [ebp-4H], 10
        je      __2563
        cmp     dword ptr [ebp-4H], 11
        je      __2564
        cmp     dword ptr [ebp-4H], 12
        je      __2565
        cmp     dword ptr [ebp-4H], 13
        je      __2566
        cmp     dword ptr [ebp-4H], 14
        je      __2567
        cmp     dword ptr [ebp-4H], 15
        je      __2568
        cmp     dword ptr [ebp-4H], 16
        je      __2569
        cmp     dword ptr [ebp-4H], 17
        je      __2570
        cmp     dword ptr [ebp-4H], 18
        je      __2571
        cmp     dword ptr [ebp-4H], 19
        je      __2572
        cmp     dword ptr [ebp-4H], 20
        je      __2573
        cmp     dword ptr [ebp-4H], 21
        je      __2574
        cmp     dword ptr [ebp-4H], 22
        je      __2575
        cmp     dword ptr [ebp-4H], 23
        je      __2576
        cmp     dword ptr [ebp-4H], 24
        je      __2577
        cmp     dword ptr [ebp-4H], 25
        je      __2578
        cmp     dword ptr [ebp-4H], 26
        je      __2579
        cmp     dword ptr [ebp-4H], 27
        je      __2580
        cmp     dword ptr [ebp-4H], 28
        je      __2581
        cmp     dword ptr [ebp-4H], 29
        je      __2582
        cmp     dword ptr [ebp-4H], 30
        je      __2583
        cmp     dword ptr [ebp-4H], 31
        je      __2584
        cmp     dword ptr [ebp-4H], 32
        je      __2585
        cmp     dword ptr [ebp-4H], 33
        je      __2586
        jmp     __2553

__2554:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 3229614080
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 1045220557
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vshotwait]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2555:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 350
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, 1075838976
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5
        jmp     __2553

__2556:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1045220557
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 150
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 2
        jmp     __2553

__2557:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 3229614080
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 1045220557
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vshotwait]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2558:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 3229614080
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 1045220557
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vshotwait]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2559:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, offset __aship_script
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, dword ptr [ebp+20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_script]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2560:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 5
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, offset __aship_script
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, dword ptr [ebp+20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_script]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2561:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 6
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2587
        mov     ebx, 3100751639
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        jmp     __2588

__2587:
        mov     ebx, 953267991
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2588:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp+20H], 1
        jne     __2589
        sub     esp, 8
        mov     dword ptr [esp], 10
        mov     dword ptr [esp+4H], 120
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        jmp     __2590

__2589:
        mov     ebx, 100000
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__2590:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2562:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 2
        jmp     __2553

__2563:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1082130432
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 9
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 250
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 1
        mov     dword ptr [esp], 5
        call    __fmake_turret
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 3
        jmp     __2553

__2564:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 9
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5
        jmp     __2553

__2565:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp+20H], 0
        jne     __2591
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2592
        mov     ebx, 3100751639
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        jmp     __2593

__2592:
        mov     ebx, 953267991
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2593:

__2591:
        cmp     dword ptr [ebp+20H], 1
        jne     __2594
        mov     ebx, 3100751639
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        jmp     __2595

__2594:
        cmp     dword ptr [ebp+20H], 2
        jne     __2596
        mov     ebx, 953267991
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2596:

__2595:
        mov     ebx, 4
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        jmp     __2553

__2566:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2597

__2598:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-0CH]
        imul    ebx, ebx, 170
        add     ebx, 900
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1141424128
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 11
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-0CH], 1

__2597:
        mov     ebx, dword ptr [ebp+20H]
        cmp     dword ptr [ebp-0CH], ebx
        jle     __2598

__232:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+20H]
        imul    ebx, ebx, 170
        add     ebx, 900
        add     ebx, 255
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1141276672
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 1
        jmp     __2599

__2600:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-0CH]
        imul    ebx, ebx, 170
        add     ebx, 912
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1139212288
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 13
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 13
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 3
        add     dword ptr [ebp-0CH], 1

__2599:
        mov     ebx, dword ptr [ebp+20H]
        cmp     dword ptr [ebp-0CH], ebx
        jle     __2600

__233:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+20H]
        imul    ebx, ebx, 170
        add     ebx, 908
        add     ebx, 255
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1139146752
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 14
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 14
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5
        jmp     __2553

__2567:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 15
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 15
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 3235905536
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        jmp     __2553

__2568:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 16
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 16
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        sub     esp, 28
        mov     dword ptr [esp], 1065353216
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 90
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 1
        mov     dword ptr [esp], 5
        call    __fmake_turret
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 1
        jmp     __2553

__2569:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 17
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 16
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        jmp     __2553

__2570:
        sub     esp, 8
        mov     dword ptr [esp], 1065353216
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdifficulty]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 1
        jne     __2601
        sub     esp, 4
        mov     dword ptr [esp], 27
        call    __fplaysounds
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 18
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 17
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 360
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 30
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2601:
        jmp     __2553

__2571:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 19
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 18
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp+2CH], 0
        jne     __2602
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        jmp     __2603

__2602:
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__2603:
        mov     ebx, dword ptr [ebp+30H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        jmp     __2553

__2572:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1144586240
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3232759808
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 20
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 20
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 300
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5
        jmp     __2553

__2573:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3267887104
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1084227584
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 21
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 21
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 4
        mov     ebx, 400
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        jmp     __2553

__2574:
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vplanecounter], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 6
        jne     __2604
        sub     esp, 32
        mov     eax, dword ptr [ebp+14H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112276992
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 23
        mov     dword ptr [esp+4H], 1124794368
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+14H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 24
        mov     dword ptr [esp+4H], 1139376128
        call    __fmake_enemy
        sub     esp, 4
        mov     dword ptr [esp], 37
        call    __fload_enemy
        sub     esp, 4
        mov     dword ptr [esp], 32
        call    __fload_enemy

__2604:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1133903872
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 22
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 26
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 1
        mov     ebx, 2000
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 6
        je      __2605
        sub     esp, 4
        mov     dword ptr [esp], 26
        call    __fload_enemy
        jmp     __2606

__2605:
        sub     esp, 4
        mov     dword ptr [esp], 47
        call    __fload_enemy

__2606:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 1
        jne     __2607
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1115947008
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 22
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1124728832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1115947008
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 22
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1124728832
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1129185280
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 23
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1104150528
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1129119744
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 24
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1104150528
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 10
        mov     dword ptr [esp], 0
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        sar     ebx, 1
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -90
        mov     dword ptr [esp], 0
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfirewait]
        mov     ecx, 3
        cdq
        idiv    ecx
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], -1
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+4H], 105
        mov     dword ptr [esp], 0
        call    __fmake_turret

__2607:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 2
        jne     __2608
        mov     ebx, 2
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__2608:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 3
        jne     __2609
        mov     ebx, 3
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -90
        mov     dword ptr [esp], 0
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 105
        mov     dword ptr [esp], 0
        call    __fmake_turret
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1132068864
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 25
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1123549184
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1132068864
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 22
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1094713344
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1132068864
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 25
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1123549184
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1132068864
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 22
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1094713344
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 4
        mov     dword ptr [esp], 42
        call    __fload_enemy
        sub     esp, 4
        mov     dword ptr [esp], 31
        call    __fload_enemy

__2609:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 5
        jne     __2610
        mov     ebx, 3
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 10
        mov     dword ptr [esp], 0
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        sar     ebx, 1
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -90
        mov     dword ptr [esp], 0
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfirewait]
        mov     ecx, 3
        cdq
        idiv    ecx
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], -1
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+4H], 105
        mov     dword ptr [esp], 0
        call    __fmake_turret

__2610:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 6
        jne     __2611
        mov     ebx, 27
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 47
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1107820544
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3000
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        sar     ebx, 1
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -70
        mov     dword ptr [esp], -30
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1070386381
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 75
        mov     dword ptr [esp], -30
        call    __fmake_turret

__2611:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vplanecounter], 4
        jne     __2612
        mov     ebx, 4
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__2612:
        jmp     __2553

__2575:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 23
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 31
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 400
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        jmp     __2553

__2576:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 24
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 32
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 400
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        jmp     __2553

__2577:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 25
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 37
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 400
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        jmp     __2553

__2578:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 26
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 42
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 400
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        jmp     __2553

__2579:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdifficulty]
        mov     dword ptr [ebp-14H], ebx
        cmp     dword ptr [ebp-14H], 3
        jne     __2613
        mov     dword ptr [ebp-14H], 5

__2613:
        sub     esp, 8
        mov     dword ptr [esp], 1065353216
        mov     ebx, dword ptr [ebp-14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        cmp     eax, 1
        jne     __2614
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 250
        mov     dword ptr [esp+4H], 900
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -2800
        mov     dword ptr [esp+4H], -2000
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        mov     ebx, 3240099840
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        mov     ebx, 1090519040
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     ebx, 52
        add     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 28
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__2614:
        jmp     __2553

__2580:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdifficulty]
        mov     dword ptr [ebp-14H], ebx
        cmp     dword ptr [ebp-14H], 3
        jne     __2615
        mov     dword ptr [ebp-14H], 5

__2615:
        sub     esp, 8
        mov     dword ptr [esp], 1065353216
        mov     ebx, dword ptr [ebp-14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        cmp     eax, 1
        jne     __2616
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 1143111680
        mov     dword ptr [esp+4H], 1147207680
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1120403456
        mov     dword ptr [esp+4H], 1133248512
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2617
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__2617:
        mov     ebx, 1133248512
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 55
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3238002688
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1

__2616:
        jmp     __2553

__2581:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3265265664
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1141407744
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 56
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 30
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 2
        jmp     __2553

__2582:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3272998912
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1140981760
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 57
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 31
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5
        jmp     __2553

__2583:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 58
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 32
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 1
        jmp     __2553

__2584:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1142292480
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1145569280
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1145569280
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     ebx, 1065353216
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 62
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 33
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 1
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], -1
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 95
        mov     dword ptr [esp], 5
        call    __fmake_turret
        jmp     __2553

__2585:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 66
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 34
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 5
        jmp     __2553

__2586:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1147207680
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 3287941120
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 67
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 35
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims], 50
        jmp     __2553

__2553:
        mov     eax, 0
        jmp     __230_leave

__230_leave:
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     32
__fmake_enemy ENDP

__fmake_turret PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tturret
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        cmp     dword ptr [ebp-8H], -1
        jne     __2618
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 359
        call    __frand
        mov     dword ptr [ebp-8H], eax

__2618:
        mov     dword ptr [ebp-8H], 180
        mov     ebx, dword ptr [ebp-8H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __234_leave

__234_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     20
__fmake_turret ENDP

__fmake_turret2 PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tturret2
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 359
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __235_leave

__235_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fmake_turret2 ENDP

__fmountguns PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 4
        mov     dword ptr [ebp-4H], 0
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __2620
        cmp     dword ptr [ebp-4H], 2
        je      __2621
        cmp     dword ptr [ebp-4H], 3
        je      __2622
        cmp     dword ptr [ebp-4H], 4
        je      __2623
        cmp     dword ptr [ebp-4H], 5
        je      __2624
        cmp     dword ptr [ebp-4H], 6
        je      __2625
        cmp     dword ptr [ebp-4H], 7
        je      __2626
        cmp     dword ptr [ebp-4H], 8
        je      __2627
        jmp     __2619

__2620:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133903872
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1132068864
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1140457472
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1137180672
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        jmp     __2619

__2621:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1132593152
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1135345664
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1132593152
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1139015680
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1132593152
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1134559232
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        jmp     __2619

__2622:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1135542272
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1138819072
        call    __fmake_enemy
        jmp     __2619

__2623:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1135542272
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133084672
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133903872
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1137180672
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1135542272
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1140457472
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133084672
        call    __fmake_enemy
        jmp     __2619

__2624:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1135542272
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133903872
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1140457472
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133084672
        call    __fmake_enemy
        jmp     __2619

__2625:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1135345664
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1139015680
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1108082688
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125842944
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1137180672
        call    __fmake_enemy
        jmp     __2619

__2626:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1125122048
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1132462080
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1108082688
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1128792064
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1128792064
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125842944
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1128792064
        call    __fmake_enemy
        jmp     __2619

__2627:
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1125515264
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1133903872
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp+18H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1119748096
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 15
        mov     dword ptr [esp+4H], 1138819072
        call    __fmake_enemy
        jmp     __2619

__2619:
        mov     eax, 0
        jmp     __236_leave

__236_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     8
__fmountguns ENDP

__fmake_little_splash PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 4
        mov     dword ptr [esp], 28
        call    __fplaysounds
        mov     dword ptr [ebp-4H], 1
        jmp     __2628

__2629:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1142063104
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 4294967295
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 43
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1065353216
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1052770304
        mov     dword ptr [esp+4H], -1063256064
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-4H], 1

__2628:
        cmp     dword ptr [ebp-4H], 4
        jle     __2629

__239:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1141571584
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 4294967295
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 44
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __238_leave

__238_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmake_little_splash ENDP

__fcollide_player PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 24
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcheating], 1
        jne     __2630
        mov     eax, 0
        jmp     __240_leave

__2630:
        mov     dword ptr [ebp-4H], 0
        mov     dword ptr [ebp-8H], 1
        jmp     __2631

__2632:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __2633
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aframe]
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aship_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        and     eax, eax
        je      __2634
        mov     ebx, dword ptr [ebp-8H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhitfirst], ebx
        mov     ebx, 300
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdifficulty], 3
        jge     __2635
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__2635:
        mov     ebx, 0
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adoubler]
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ax]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2636

__2637:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ax]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2636:
        cmp     dword ptr [ebp-0CH], 5
        jle     __2637

__242:
        cmp     dword ptr [ebp-8H], 1
        jne     __2638
        mov     dword ptr [ebp-0CH], 1
        jmp     __2639

__2640:
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 8
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ax]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        add     dword ptr [ebp-0CH], 1

__2639:
        cmp     dword ptr [ebp-0CH], 9
        jle     __2640

__2638:

__243:
        cmp     dword ptr [ebp-8H], 2
        jne     __2641
        mov     dword ptr [ebp-0CH], 1
        jmp     __2642

__2643:
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 9
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ax]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 10
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ax]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        add     dword ptr [ebp-0CH], 1

__2642:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2643

__2641:

__244:
        mov     dword ptr [ebp-4H], 1

__2634:

__2633:
        add     dword ptr [ebp-8H], 1

__2631:
        cmp     dword ptr [ebp-8H], 2
        jle     __2632

__241:
        mov     eax, dword ptr [ebp-4H]
        jmp     __240_leave

        mov     eax, 0
        jmp     __240_leave

__240_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fcollide_player ENDP

__fgroundenemy PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 28
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tground_target
        call    ___bbObjEachFirst
        and     eax, eax
        je      __246

__2644:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-8H], ebx
        cmp     dword ptr [ebp-8H], 1
        je      __2646
        jmp     __2645

__2646:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3267887104
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2647
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_245destroyed

__2647:
        sub     esp, 24
        mov     dword ptr [esp+10H], -1070176666
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbase_im]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-0CH], eax
        cmp     dword ptr [ebp-0CH], 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __2648
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        jmp     __2649

__2648:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__2649:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-0CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1114636288
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2650
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__2650:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1109393408
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2651
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__2651:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2652
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__2652:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __2653
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 1
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1092616192
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        sub     esp, 16
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1092616192
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        call    __fmake_score
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-10H], 0
        jmp     __2654

__2655:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1092616192
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-10H], 1

__2654:
        cmp     dword ptr [ebp-10H], 5
        jle     __2655

__248:
        mov     dword ptr [ebp-10H], 1
        jmp     __2656

__2657:
        sub     esp, 8
        mov     dword ptr [esp], -1056964608
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1046478848
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 5
        mov     ebx, dword ptr [ebp-18H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-14H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        imul    eax, dword ptr [ebp-14H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1056964608
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1046478848
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 6
        mov     ebx, dword ptr [ebp-18H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-14H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        imul    eax, dword ptr [ebp-14H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-10H], 1

__2656:
        cmp     dword ptr [ebp-10H], 3
        jle     __2657

__249:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2653:
        jmp     __2645

__l_245destroyed:

__2645:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2644

__246:
        mov     eax, 0
        jmp     __245_leave

__245_leave:
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fgroundenemy ENDP

__fenemy PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 96
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
        mov     dword ptr [ebp-28H], ebx
        mov     dword ptr [ebp-2CH], ebx
        mov     dword ptr [ebp-30H], ebx
        mov     dword ptr [ebp-34H], ebx
        mov     dword ptr [ebp-38H], ebx
        mov     dword ptr [ebp-3CH], ebx
        mov     dword ptr [ebp-40H], ebx
        mov     dword ptr [ebp-44H], ebx
        mov     dword ptr [ebp-48H], ebx
        mov     dword ptr [ebp-4CH], ebx
        mov     dword ptr [ebp-50H], ebx
        mov     dword ptr [ebp-54H], ebx
        mov     dword ptr [ebp-58H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tenemy
        call    ___bbObjEachFirst
        and     eax, eax
        je      __251

__2658:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-8H], ebx
        cmp     dword ptr [ebp-8H], 1
        je      __2660
        cmp     dword ptr [ebp-8H], 2
        je      __2661
        cmp     dword ptr [ebp-8H], 3
        je      __2662
        cmp     dword ptr [ebp-8H], 4
        je      __2663
        cmp     dword ptr [ebp-8H], 5
        je      __2664
        cmp     dword ptr [ebp-8H], 6
        je      __2665
        cmp     dword ptr [ebp-8H], 7
        je      __2666
        cmp     dword ptr [ebp-8H], 8
        je      __2667
        cmp     dword ptr [ebp-8H], 9
        je      __2668
        cmp     dword ptr [ebp-8H], 10
        je      __2669
        cmp     dword ptr [ebp-8H], 11
        je      __2670
        cmp     dword ptr [ebp-8H], 12
        je      __2671
        cmp     dword ptr [ebp-8H], 13
        je      __2672
        cmp     dword ptr [ebp-8H], 14
        je      __2673
        cmp     dword ptr [ebp-8H], 15
        je      __2674
        cmp     dword ptr [ebp-8H], 16
        je      __2675
        cmp     dword ptr [ebp-8H], 17
        je      __2676
        cmp     dword ptr [ebp-8H], 18
        je      __2677
        cmp     dword ptr [ebp-8H], 19
        je      __2678
        cmp     dword ptr [ebp-8H], 20
        je      __2679
        cmp     dword ptr [ebp-8H], 21
        je      __2680
        cmp     dword ptr [ebp-8H], 22
        je      __2681
        cmp     dword ptr [ebp-8H], 23
        je      __2682
        cmp     dword ptr [ebp-8H], 24
        je      __2683
        cmp     dword ptr [ebp-8H], 25
        je      __2684
        cmp     dword ptr [ebp-8H], 26
        je      __2685
        cmp     dword ptr [ebp-8H], 27
        je      __2686
        cmp     dword ptr [ebp-8H], 28
        je      __2687
        cmp     dword ptr [ebp-8H], 29
        je      __2688
        cmp     dword ptr [ebp-8H], 30
        je      __2689
        cmp     dword ptr [ebp-8H], 31
        je      __2690
        cmp     dword ptr [ebp-8H], 32
        je      __2691
        cmp     dword ptr [ebp-8H], 33
        je      __2692
        cmp     dword ptr [ebp-8H], 34
        je      __2693
        cmp     dword ptr [ebp-8H], 35
        je      __2694
        jmp     __2659

__2660:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2695
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2695:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jle     __2696
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2696:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3262119936
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2697
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadsaucer

__2697:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3231711232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2698
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2698:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], -1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2699
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2700

__2701:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2700:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2701

__253:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __2702

__2699:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2703
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2703:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1114636288
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1142620160
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __2704
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __ffire_enemy_bullet
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vshotwait]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__l_250deadsaucer:

__2704:

__2702:
        jmp     __2659

__2661:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2705
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1144750080
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2706
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nomoreship

__2706:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 140
        jle     __2707
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 400
        jge     __2708
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1014350479
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        jmp     __2709

__2708:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 700
        jge     __2710
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1014350479
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__2710:

__2709:

__2707:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        jne     __2711
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__2711:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1110704128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3212836864
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2712
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        sub     esp, 20
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 1073741824
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1119617024
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_smoke_ring

__2712:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3248488448
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2713
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __2714
        add     dword ptr [ebp-10H], 250

__2714:

__2713:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __2715
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2715:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 290
        jge     __2716
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2716:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 230
        jge     __2717
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2717:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 170
        jge     __2718
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2718:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 110
        jge     __2719
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2719:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jge     __2720
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2720:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2721
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 2
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1099431936
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1103101952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 2
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1108869120
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        jne     __2722
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1117782016
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2722:

__2721:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2723
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 2
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2724
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1117782016
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2724:

__2723:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2725
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 2
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+0CH], -1
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 2
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1119092736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2726
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1117782016
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2726:

__2725:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __2727
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__2727:
        jmp     __2728

__2705:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2729

__2730:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2729:
        cmp     dword ptr [ebp-0CH], 80
        jle     __2730

__254:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2731

__2732:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 1
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 2
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2731:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2732

__255:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2728:
        jmp     __2659

__2662:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2733
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 990057071
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1144750080
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2734
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nomoreship

__2734:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2735
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __2736
        add     dword ptr [ebp-10H], 250

__2736:

__2735:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 16
        jle     __2737
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        sub     esp, 20
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 1065353216
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1113325568
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_smoke_ring

__2737:
        cmp     dword ptr [ebp-10H], 0
        je      __2738
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2738:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 125
        jge     __2739
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2739:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jge     __2740
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2740:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 75
        jge     __2741
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2741:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jge     __2742
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2742:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 25
        jge     __2743
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2743:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2744
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 4
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1094713344
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 4
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1100480512
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2744:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2745
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1097859072
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 4
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        jne     __2746
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1109393408
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2746:

__2745:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2747
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 4
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+0CH], -1
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1097859072
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 4
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1110704128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        jne     __2748
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1109393408
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2748:

__2747:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __2749
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 200
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 2
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 200
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__2749:
        jmp     __2750

__2733:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2751

__2752:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        shl     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 3
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-18H]
        shl     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2751:
        cmp     dword ptr [ebp-0CH], 40
        jle     __2752

__256:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2753

__2754:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 3
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 4
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2753:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2754

__257:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2750:
        jmp     __2659

__2663:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2755
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2755:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jle     __2756
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2756:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3262119936
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2757
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadsaucer2

__2757:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3231711232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2758
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2758:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2759
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2760
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_star

__2760:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2761

__2762:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2761:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2762

__258:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __2763

__2759:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2764
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__l_250deadsaucer2:

__2764:

__2763:
        jmp     __2659

__2664:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2765
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2765:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jle     __2766
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2766:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3262119936
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2767
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadsaucer3

__2767:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3231711232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2768
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2768:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2769
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2770

__2771:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2770:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2771

__259:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250deadsaucer3:

__2769:
        jmp     __2659

__2665:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 16
        call    ___bbMod
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1102315520
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-20H], eax
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2772
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        jmp     __2773

__2772:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aship_script]
        mov     eax, dword ptr [eax]
        cmp     eax, 100
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfishfire], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2774
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aship_script]
        mov     esi, dword ptr [esi]
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 8
        call    ___bbMod
        shl     eax, 1
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [esp+14H], 2
        mov     esi, dword ptr [ebp-20H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1090519040
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1109917696
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 4
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+4H], edi
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109917696
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2

__2774:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jne     __2775
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aship_script]
        mov     esi, dword ptr [esi]
        cmp     esi, -1
        jne     __2776
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadfish

__2776:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aship_script]
        mov     eax, dword ptr [eax]
        cmp     eax, 17
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aship_script]
        mov     esi, dword ptr [esi]
        cmp     esi, 0
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, esi
        and     eax, eax
        je      __2777
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aship_script]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, offset __aship_script
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aship_script]
        mov     esi, dword ptr [esi]
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], esi

__2777:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        jmp     __2778

__2775:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sub     esi, 9
        cmp     ebx, esi
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 12
        mov     edi, dword ptr [edi]
        add     edi, 8
        cmp     esi, edi
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2779
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2780
        mov     ebx, 15
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2780:
        jmp     __2781

__2779:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        add     esi, 9
        cmp     ebx, esi
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 12
        mov     edi, dword ptr [edi]
        sub     edi, 8
        cmp     esi, edi
        mov     eax, esi
        setl    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __2782
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __2783
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2783:

__2782:

__2781:

__2778:

__2773:
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2784
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 15
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2785

__2786:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2785:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2786

__260:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2787
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2788
        sub     esp, 4
        mov     dword ptr [esp], 18
        call    __fplaysounds
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __2789
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_star
        jmp     __2790

__2789:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        add     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonustype]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__2790:

__2788:

__2787:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadfish

__l_250deadfish:

__2784:
        jmp     __2659

__2666:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1036831949
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3184315597
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2791
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1066192077
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2791:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2792
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __2793

__2792:
        mov     ebx, 1107296256
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2793:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 16
        jne     __2794
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2794:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2795
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2795:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 13
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2796
        mov     ebx, 13
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2796:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 16
        call    ___bbMod
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1102315520
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-20H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jl      __2797
        mov     ebx, 4294867296
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfishfire], 1
        jne     __2798
        sub     esp, 24
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 8
        call    ___bbMod
        shl     eax, 1
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [esp+14H], 2
        mov     esi, dword ptr [ebp-20H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1090519040
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1109917696
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 4
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    edi
        fistp   dword ptr [esp]
        pop     edi
        mov     dword ptr [esp+4H], edi
        mov     ebx, dword ptr [ebp-20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109917696
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2

__2798:

__2797:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2799
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadrandfish

__2799:
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2800
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 15
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2801

__2802:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2801:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2802

__261:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __2803
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2804
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_star

__2804:

__2803:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250deadrandfish:

__2800:
        jmp     __2659

__2667:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 32
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 32
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __2805
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        mov     dword ptr [ebp-10H], eax
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 86
        jge     __2806
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2806:
        cmp     dword ptr [ebp-10H], 82
        jge     __2807
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2807:
        cmp     dword ptr [ebp-10H], 78
        jge     __2808
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2808:
        cmp     dword ptr [ebp-10H], 74
        jge     __2809
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2809:
        cmp     dword ptr [ebp-10H], 70
        jge     __2810
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2810:
        cmp     dword ptr [ebp-10H], 38
        jge     __2811
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2811:
        cmp     dword ptr [ebp-10H], 34
        jge     __2812
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2812:
        cmp     dword ptr [ebp-10H], 30
        jge     __2813
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2813:
        cmp     dword ptr [ebp-10H], 26
        jge     __2814
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2814:
        cmp     dword ptr [ebp-10H], 22
        jge     __2815
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2815:
        cmp     dword ptr [ebp-10H], 12
        jge     __2816
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2816:
        cmp     dword ptr [ebp-10H], 7
        jge     __2817
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2817:

__2805:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __2818
        sub     esp, 24
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 2
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], -1054867456
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        call    __ffire_enemy_bullet_2

__2818:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 900
        jle     __2819
        mov     ebx, 4294966296
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3276275712
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2820
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nosquid

__2820:

__2819:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3231711232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2821
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__2821:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2822
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__2822:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3231711232
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2823
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2823:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2824
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2824:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109131264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 32
        mov     edi, dword ptr [edi]
        sar     edi, 3
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollision_enemy_bullet
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        add     ebx, eax
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __2825
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2825:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 70
        jle     __2826
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109131264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __2827
        add     dword ptr [ebp-10H], 250

__2827:

__2826:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 20
        jle     __2828
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2828:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 40
        jle     __2829
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2829:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 60
        jle     __2830
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2830:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 80
        jle     __2831
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2831:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jle     __2832
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2832:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2833
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 7
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2833:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2834
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2834:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2835
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+0CH], -1
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 8
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2835:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        jl      __2836
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 2
        sub     esp, 16
        mov     dword ptr [esp+8H], 250
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2837

__2838:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        shl     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 3
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-18H]
        shl     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2837:
        cmp     dword ptr [ebp-0CH], 40
        jle     __2838

__262:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2839

__2840:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 7
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 8
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2839:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2840

__263:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250nosquid:

__2836:
        jmp     __2659

__2668:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 160
        jge     __2841
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        jmp     __2842

__2841:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx

__2842:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __2843
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 330
        jge     __2844
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1014350479
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        jmp     __2845

__2844:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 400
        jle     __2846
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1006834287
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__2846:

__2845:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1098907648
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2847
        mov     ebx, 4294967295
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__2847:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3253731328
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2848
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__2848:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1144750080
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2849
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nomoreship

__2849:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        je      __2850
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2850:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1121714176
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2851
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __2852
        add     dword ptr [ebp-10H], 250

__2852:

__2851:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 26
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3204448256
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2853
        sub     esp, 20
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 1073741824
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1110704128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_smoke_ring

__2853:
        cmp     dword ptr [ebp-10H], 0
        je      __2854
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__2854:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 210
        jge     __2855
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2855:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 170
        jge     __2856
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2856:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 130
        jge     __2857
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2857:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 90
        jge     __2858
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2858:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jge     __2859
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2859:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2860
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1108082688
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 10
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1097859072
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2860:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2861
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 9
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1103626240
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __2862
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1109393408
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2862:

__2861:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2863
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 9
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+0CH], -2
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1103101952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1107558400
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 10
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1095761920
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        jne     __2864
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1109393408
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__2864:

__2863:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __2865
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 3
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 500
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__2865:
        jmp     __2866

__2843:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2867

__2868:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        shl     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 3
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-18H]
        shl     esi, 1
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2867:
        cmp     dword ptr [ebp-0CH], 40
        jle     __2868

__264:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2869

__2870:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 9
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 10
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2869:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2870

__265:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 3
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2866:
        jmp     __2659

__2669:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 32
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 32
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __2871
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        mov     dword ptr [ebp-10H], eax
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 86
        jge     __2872
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2872:
        cmp     dword ptr [ebp-10H], 82
        jge     __2873
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2873:
        cmp     dword ptr [ebp-10H], 78
        jge     __2874
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2874:
        cmp     dword ptr [ebp-10H], 74
        jge     __2875
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2875:
        cmp     dword ptr [ebp-10H], 70
        jge     __2876
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2876:
        cmp     dword ptr [ebp-10H], 38
        jge     __2877
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2877:
        cmp     dword ptr [ebp-10H], 34
        jge     __2878
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2878:
        cmp     dword ptr [ebp-10H], 30
        jge     __2879
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2879:
        cmp     dword ptr [ebp-10H], 26
        jge     __2880
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2880:
        cmp     dword ptr [ebp-10H], 22
        jge     __2881
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2881:
        cmp     dword ptr [ebp-10H], 12
        jge     __2882
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2882:
        cmp     dword ptr [ebp-10H], 7
        jge     __2883
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2883:

__2871:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __2884
        mov     dword ptr [ebp-0CH], 120
        jmp     __2885

__2886:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 1
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1065353216
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1077936128
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 20

__2885:
        cmp     dword ptr [ebp-0CH], 240
        jle     __2886

__2884:

__266:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2000
        jle     __2887
        mov     ebx, 4294966296
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3276275712
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2888
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nosquid2

__2888:

__2887:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3233808384
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2889
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__2889:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2890
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__2890:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3233808384
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2891
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2891:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2892
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2892:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117257728
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 32
        mov     edi, dword ptr [edi]
        sar     edi, 3
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollision_enemy_bullet
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        add     ebx, eax
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __2893
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2893:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 70
        jle     __2894
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117257728
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __2895
        add     dword ptr [ebp-10H], 250

__2895:

__2894:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 80
        jle     __2896
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2896:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 160
        jle     __2897
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2897:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 240
        jle     __2898
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2898:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 320
        jle     __2899
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2899:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 400
        jle     __2900
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2900:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2901
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2901:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2902
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2902:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2903
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+0CH], -1
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 7
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__2903:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 500
        jl      __2904
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        sub     esp, 16
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2905

__2906:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2905:
        cmp     dword ptr [ebp-0CH], 80
        jle     __2906

__267:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2907

__2908:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 11
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 12
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2907:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2908

__268:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 5
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250nosquid2:

__2904:
        jmp     __2659

__2670:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1036831949
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3184315597
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2909
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065772646
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__2909:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 4
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     dword ptr [ebx], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1077936128
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2910
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        jne     __2911
        mov     ebx, 15
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2911:

__2910:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1075838976
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2912
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2912:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1075838976
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2913
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2913:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1067030938
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2914
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2914:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1060320051
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2915
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2915:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1050253722
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1060320051
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2916
        mov     ebx, 16
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2916:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3197737370
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1050253722
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2917
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2917:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3207803699
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3197737370
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2918
        mov     ebx, 17
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2918:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3214514586
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3207803699
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2919
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2919:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3221225472
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3214514586
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2920
        mov     ebx, 6
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2920:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3223322624
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3221225472
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2921
        mov     ebx, 7
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2921:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3225419776
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3223322624
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2922
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2922:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3225419776
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2923
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 16
        jne     __2924
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2924:

__2923:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2925
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250deadray

__2925:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-10H], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-10H]
        jle     __2926
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2926:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 30
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __2927
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2928

__2929:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2928:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2929

__269:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2930

__2931:
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 13
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1055916032
        mov     dword ptr [esp+4H], 1077936128
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 14
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2930:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2931

__270:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2932
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2933
        sub     esp, 4
        mov     dword ptr [esp], 18
        call    __fplaysounds
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        add     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonustype]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__2933:

__2932:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250deadray:

__2927:
        jmp     __2659

__2671:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], -1069547520
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3274309632
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2934
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2934:
        jmp     __2659

__2672:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 0
        jle     __2935
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, 250
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__2935:
        sub     esp, 24
        mov     dword ptr [esp+10H], -1069547520
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jle     __2936
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2936:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jle     __2937
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2937:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __2938
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 3
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 500
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        mov     ebx, 1000
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2939

__2940:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2939:
        cmp     dword ptr [ebp-0CH], 80
        jle     __2940

__271:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2941

__2942:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 15
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 16
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2941:
        cmp     dword ptr [ebp-0CH], 4
        jle     __2942

__2938:

__272:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3274309632
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1000
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __2943
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2943:
        jmp     __2659

__2673:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 0
        jle     __2944
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, 250
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__2944:
        sub     esp, 24
        mov     dword ptr [esp+10H], -1069547520
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 60
        jle     __2945
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2945:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        jle     __2946
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2946:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 180
        jle     __2947
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2947:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 250
        jle     __2948
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        mov     ebx, 1000
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __2949

__2950:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2949:
        cmp     dword ptr [ebp-0CH], 80
        jle     __2950

__273:
        mov     dword ptr [ebp-0CH], 1
        jmp     __2951

__2952:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 17
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 18
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__2951:
        cmp     dword ptr [ebp-0CH], 40
        jle     __2952

__274:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses

__2948:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3274309632
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1000
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __2953
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2953:
        jmp     __2659

__2674:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1031127695
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2954
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2954:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1065353216
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __2955
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2955:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-10H], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], -1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-10H]
        jle     __2956
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__2956:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __2957
        mov     dword ptr [ebp-0CH], 120
        jmp     __2958

__2959:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 1
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1065353216
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-0CH], 30

__2958:
        cmp     dword ptr [ebp-0CH], 240
        jle     __2959

__2957:

__275:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 45
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __2960
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        mov     ebx, 100
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __2961

__2962:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2961:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2962

__276:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2963
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2964
        sub     esp, 4
        mov     dword ptr [esp], 18
        call    __fplaysounds
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        add     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonustype]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__2964:

__2963:

__2960:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1143930880
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, eax
        and     ebx, ebx
        je      __2965
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2965:
        jmp     __2659

__2675:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], -1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142947840
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __2966
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 1
        mov     ebx, 100
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 100
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 100
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        mov     dword ptr [ebp-0CH], 0
        jmp     __2967

__2968:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__2967:
        cmp     dword ptr [ebp-0CH], 10
        jle     __2968

__277:
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 16
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        call    __fmake_enemy

__2966:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, eax
        and     ebx, ebx
        je      __2969
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2969:
        jmp     __2659

__2676:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2970
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__2970:
        jmp     __2659

__2677:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vspinster]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 3
        call    ___bbMod
        cmp     eax, 0
        jne     __2971
        sub     esp, 20
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 0
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1101004800
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fsubrp  st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_smoke_ring

__2971:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2972
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     esi, eax
        and     ebx, esi
        and     ebx, ebx
        je      __2973
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax

__2973:

__2972:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __2974
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2974:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adead]
        mov     eax, dword ptr [eax]
        cmp     eax, 200
        setl    al
        movzx   eax, al
        and     ebx, eax
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, esi
        and     ebx, eax
        and     ebx, ebx
        je      __2975
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2975:
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ais_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adead]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adead]
        mov     esi, dword ptr [esi]
        cmp     esi, 200
        mov     eax, esi
        setg    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, esi
        and     eax, ebx
        and     eax, eax
        je      __2976
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__2976:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __2977
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-24H], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, 26
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-28H], ebx
        mov     eax, dword ptr [ebp-28H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setne   al
        movzx   eax, al
        and     eax, eax
        je      __2978
        sub     esp, 4
        mov     eax, dword ptr [ebp-24H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-28H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fatan
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-2CH], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ax]
        mov     eax, dword ptr [eax]
        add     eax, 26
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2979
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ay]
        mov     eax, dword ptr [eax]
        sub     eax, 20
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2980
        add     dword ptr [ebp-2CH], 180
        jmp     __2981

__2980:
        add     dword ptr [ebp-2CH], 180

__2981:
        jmp     __2982

__2979:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ay]
        mov     eax, dword ptr [eax]
        sub     eax, 20
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __2983
        jmp     __2984

__2983:
        add     dword ptr [ebp-2CH], 360

__2984:

__2982:
        jmp     __2985

__2978:
        mov     dword ptr [ebp-2CH], 0

__2985:
        mov     ebx, dword ptr [ebp-2CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__2977:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        imul    eax, eax, 6
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 360
        call    ___bbMod
        mov     dword ptr [ebp-10H], eax
        jmp     __2987

__2986:
        add     dword ptr [ebp-10H], 360

__2987:
        cmp     dword ptr [ebp-10H], 0
        jl      __2986

__278:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [ebp-2CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-2CH]
        mov     dword ptr [ebp-30H], ebx
        jmp     __2989

__2988:
        sub     dword ptr [ebp-30H], 360

__2989:
        cmp     dword ptr [ebp-30H], 180
        jg      __2988

__279:
        jmp     __2991

__2990:
        add     dword ptr [ebp-30H], 360

__2991:
        cmp     dword ptr [ebp-30H], -180
        jl      __2990

__280:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __2992
        cmp     dword ptr [ebp-30H], -2
        jge     __2993
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        jmp     __2994

__2993:
        cmp     dword ptr [ebp-30H], 2
        jle     __2995
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        sub     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__2995:

__2994:
        jmp     __2996

__2992:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__2996:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1093926912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 32
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 32
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 360
        jl      __2997
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        sub     ebx, 360
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__2997:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2998
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 360
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__2998:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __2999
        mov     ebx, 31
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__2999:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 31
        jle     __3000
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3000:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhoming_speed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhoming_speed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3001
        mov     ebx, 100
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __3002

__3003:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__3002:
        cmp     dword ptr [ebp-0CH], 10
        jle     __3003

__3001:

__281:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3272998912
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1147207680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3272998912
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1143930880
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, eax
        and     ebx, ebx
        je      __3004
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3004:
        jmp     __2659

__2678:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3005
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        jmp     __3006

__3005:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 19
        jne     __3007
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3007:

__3006:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142947840
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3008
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 1
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vbomb_balloon_im]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbomb_balloon_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3009
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3010
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 50
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3011
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses

__3011:
        sub     esp, 4
        mov     dword ptr [esp], 9
        call    __fplaysounds
        mov     dword ptr [ebp-0CH], 1
        jmp     __3012

__3013:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 17
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 18
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        add     dword ptr [ebp-0CH], 1

__3012:
        cmp     dword ptr [ebp-0CH], 5
        jle     __3013

__282:
        jmp     __3014

__3010:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3015

__3016:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 17
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 18
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        add     dword ptr [ebp-0CH], 1

__3015:
        cmp     dword ptr [ebp-0CH], 5
        jle     __3016

__283:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3017

__3018:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 4
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1069547520
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 40
        mov     edi, dword ptr [edi]
        push    edi
        fild    dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 14

__3017:
        cmp     dword ptr [ebp-0CH], 359
        jle     __3018

__3014:

__284:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3009:

__3008:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142947840
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 19
        mov     eax, ebx
        setne   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3019
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+0CH], 0
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3020
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3021

__3022:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 4
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__3021:
        cmp     dword ptr [ebp-0CH], 80
        jle     __3022

__285:
        mov     dword ptr [ebp-0CH], 0
        jmp     __3023

__3024:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 4
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1069547520
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 14

__3023:
        cmp     dword ptr [ebp-0CH], 359
        jle     __3024

__286:
        mov     ebx, 19
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3020:

__3019:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, 1143111680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3259498496
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3265265664
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1144258560
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 0
        push    edi
        fld     dword ptr [esp]
        pop     edi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, esi
        or      eax, ebx
        and     eax, eax
        je      __3025
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3025:
        jmp     __2659

__2679:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3026
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1144750080
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3027
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nomoreship

__3027:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1065353216
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3028
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1017370378
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3028:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 120
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3029
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1116471296
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1113587712
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 40
        mov     dword ptr [esp+8H], 17
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1116471296
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1113587712
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 320
        mov     dword ptr [esp+8H], 17
        call    __fmake_enemy

__3029:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, 1110704128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     eax, dword ptr [eax]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3030
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        sub     esp, 20
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 1073741824
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1116864512
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_smoke_ring

__3030:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3031
        add     dword ptr [ebp-10H], 250

__3031:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3032
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3032:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 250
        jge     __3033
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3033:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jge     __3034
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3034:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jge     __3035
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3035:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jge     __3036
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3036:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jge     __3037
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3037:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3038
        sub     esp, 28
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_parachuter

__3038:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3039
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_parachuter

__3039:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3040
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], edi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 5
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses

__3040:
        jmp     __3041

__3026:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3042

__3043:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3042:
        cmp     dword ptr [ebp-0CH], 80
        jle     __3043

__287:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3044

__3045:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 11
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 12
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3044:
        cmp     dword ptr [ebp-0CH], 4
        jle     __3045

__288:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3041:
        jmp     __2659

__2680:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 40
        jle     __3046
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3047
        add     dword ptr [ebp-10H], 250

__3047:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3048
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1
        mov     dword ptr [esp+4H], 1
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3048:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 25
        jne     __3049
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 320
        jge     __3050
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3050:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 240
        jge     __3051
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3051:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 160
        jge     __3052
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3052:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 80
        jge     __3053
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3053:

__3049:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3054
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 20
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3054:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3055
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1110966272
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 20
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1103626240
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 20
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], -2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fmake_parachuter

__3055:

__3046:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 130
        jle     __3056
        mov     ebx, 22
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3056:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 135
        jle     __3057
        mov     ebx, 23
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3057:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 140
        jle     __3058
        mov     ebx, 24
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3058:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 145
        jle     __3059
        mov     ebx, 25
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3059:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 146
        jne     __3060
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], -67
        mov     dword ptr [esp], -22
        call    __fmake_turret
        sub     esp, 20
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vfirewait]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1070386381
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp+8H], esi
        mov     dword ptr [esp+4H], 74
        mov     dword ptr [esp], -22
        call    __fmake_turret

__3060:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        cmp     eax, 80
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3061
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1028443341
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3061:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3062
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 4
        sub     esp, 16
        mov     dword ptr [esp+8H], 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3063

__3064:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3063:
        cmp     dword ptr [ebp-0CH], 80
        jle     __3064

__289:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3065

__3066:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 19
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 20
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3065:
        cmp     dword ptr [ebp-0CH], 8
        jle     __3066

__290:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 5
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses

__3062:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3262119936
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setle   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      ebx, eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     ebx, eax
        and     ebx, ebx
        je      __3067
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3067:
        jmp     __2659

__2681:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfirstplane], 0
        jne     __3068
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirstplane], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcounter2], 1
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 540
        jle     __3069
        mov     dword ptr [ebp-34H], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-38H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-3CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-38H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        jmp     __3071

__3070:
        mov     ebx, dword ptr [ebp-3CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-3CH]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-38H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-3CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-3CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-38H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore

__3071:
        sub     esp, 8
        mov     eax, dword ptr [ebp-3CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        jne     __3070

__291:
        jmp     __3072

__3069:
        mov     dword ptr [ebp-34H], 0

__3072:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3073
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        sub     esp, 32
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+8H], 21
        mov     dword ptr [esp+4H], 0
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        add     eax, 174
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__3073:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        cmp     eax, 2
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 160
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-34H], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3074
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1119092736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 115
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1098907648
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1121320960
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 245
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1095761920
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1110441984
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 170
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1110966272
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1114898432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 190
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1110966272
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__3074:

__3068:
        cmp     dword ptr [ebp-34H], 1
        jne     __3075
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3075:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-40H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 32
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1065353216
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3076
        add     dword ptr [ebp-10H], 250

__3076:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3077
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3077:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-44H], ebx
        mov     ebx, 26
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1600
        jge     __3078
        mov     ebx, 27
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3078:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1200
        jge     __3079
        mov     ebx, 28
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3079:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 800
        jge     __3080
        mov     ebx, 29
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3080:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 400
        jge     __3081
        mov     ebx, 30
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3081:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 29
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-44H], 29
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3082
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+0CH], 2
        mov     dword ptr [esp+8H], -3
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 3
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3082:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 30
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-44H], 30
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3083
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1092616192
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+8H], -4
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1116471296
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 12
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+0CH], 3
        mov     dword ptr [esp+8H], 3
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3083:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-44H]
        je      __3084
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 174
        mov     dword ptr [esp+0CH], 276
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fexplosion_square

__3084:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3085
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3086

__3087:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 5
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3086:
        cmp     dword ptr [ebp-0CH], 160
        jle     __3087

__292:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3088

__3089:
        sub     esp, 8
        mov     dword ptr [esp], -1044381696
        mov     dword ptr [esp+4H], 1098907648
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1037041664
        mov     dword ptr [esp+4H], 1092616192
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 11
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 12
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3088:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3089

__293:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __3090
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1125515264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1125515264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vkillthrusters], 1

__3090:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3091
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1125515264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1125515264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1125515264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1125515264
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3091:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3085:
        jmp     __2659

__2682:
        cmp     dword ptr [ebp-34H], 1
        jne     __3092
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3092:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-40H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3093
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter2]
        add     eax, 1
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3094
        add     dword ptr [ebp-10H], 250

__3094:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3095
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3095:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 320
        jge     __3096
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3096:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 240
        jge     __3097
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3097:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 160
        jge     __3098
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3098:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 80
        jge     __3099
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3099:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3100
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3100:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3101
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3102

__3103:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3102:
        cmp     dword ptr [ebp-0CH], 80
        jle     __3103

__294:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3104

__3105:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 21
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 22
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3104:
        cmp     dword ptr [ebp-0CH], 8
        jle     __3105

__3101:

__3093:

__295:
        jmp     __2659

__2683:
        cmp     dword ptr [ebp-34H], 1
        jne     __3106
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3106:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-40H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __3107
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3107:
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter2]
        add     eax, 1
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3108
        add     dword ptr [ebp-10H], 250

__3108:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3109
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3109:
        mov     ebx, 32
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        jge     __3110
        mov     ebx, 33
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3110:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jge     __3111
        mov     ebx, 34
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3111:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jge     __3112
        mov     ebx, 35
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3112:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3113
        mov     ebx, 36
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3113:
        jmp     __2659

__2684:
        cmp     dword ptr [ebp-34H], 1
        jne     __3114
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3114:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-40H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __3115
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3115:
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter2]
        add     eax, 1
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3116
        add     dword ptr [ebp-10H], 250

__3116:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3117
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3117:
        mov     ebx, 37
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        jge     __3118
        mov     ebx, 38
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3118:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jge     __3119
        mov     ebx, 39
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3119:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jge     __3120
        mov     ebx, 40
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3120:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3121
        mov     ebx, 41
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3121:
        jmp     __2659

__2685:
        cmp     dword ptr [ebp-34H], 1
        jne     __3122
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3122:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-40H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 700
        jge     __3123
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx

__3123:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __3124
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        mov     dword ptr [ebp-10H], eax
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 86
        jge     __3125
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3125:
        cmp     dword ptr [ebp-10H], 82
        jge     __3126
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3126:
        cmp     dword ptr [ebp-10H], 78
        jge     __3127
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3127:
        cmp     dword ptr [ebp-10H], 74
        jge     __3128
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3128:
        cmp     dword ptr [ebp-10H], 70
        jge     __3129
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3129:
        cmp     dword ptr [ebp-10H], 38
        jge     __3130
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3130:
        cmp     dword ptr [ebp-10H], 34
        jge     __3131
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3131:
        cmp     dword ptr [ebp-10H], 30
        jge     __3132
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3132:
        cmp     dword ptr [ebp-10H], 26
        jge     __3133
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3133:
        cmp     dword ptr [ebp-10H], 22
        jge     __3134
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3134:
        cmp     dword ptr [ebp-10H], 12
        jge     __3135
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3135:
        cmp     dword ptr [ebp-10H], 7
        jge     __3136
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3136:

__3124:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3137
        mov     dword ptr [ebp-0CH], 120
        jmp     __3138

__3139:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 1
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1065353216
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1077936128
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1114636288
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 20

__3138:
        cmp     dword ptr [ebp-0CH], 240
        jle     __3139

__3137:

__296:
        sub     esp, 32
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter2]
        add     eax, 1
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3140
        add     dword ptr [ebp-10H], 250

__3140:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3141
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3141:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-44H], ebx
        mov     ebx, 42
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        jge     __3142
        mov     ebx, 43
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3142:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jge     __3143
        mov     ebx, 44
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3143:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jge     __3144
        mov     ebx, 45
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3144:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3145
        mov     ebx, 46
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3145:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 45
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-44H], 45
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3146
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+0CH], -5
        mov     dword ptr [esp+8H], 3
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3146:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 46
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-44H], 46
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3147
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -3
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 11
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3147:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -100
        jg      __3148
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx

__3148:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 4294967196
        setle   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vkillthrusters], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3149
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1117782016
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3150

__3151:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 5
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3150:
        cmp     dword ptr [ebp-0CH], 160
        jle     __3151

__297:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3152

__3153:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 11
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 12
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3152:
        cmp     dword ptr [ebp-0CH], 20
        jle     __3153

__298:
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNext
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3149:
        jmp     __2659

__2686:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter2]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-40H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfirstplane], 0
        jne     __3154
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirstplane], 1
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vcounter2], 1
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 48
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3155
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 800
        call    ___bbMod
        cmp     eax, 640
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 800
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 90
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3156
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx

__3156:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 800
        call    ___bbMod
        cmp     eax, 670
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 800
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 30
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3157
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __3158
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        mov     dword ptr [ebp-10H], eax
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 86
        jge     __3159
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3159:
        cmp     dword ptr [ebp-10H], 82
        jge     __3160
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3160:
        cmp     dword ptr [ebp-10H], 78
        jge     __3161
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3161:
        cmp     dword ptr [ebp-10H], 74
        jge     __3162
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3162:
        cmp     dword ptr [ebp-10H], 70
        jge     __3163
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3163:
        cmp     dword ptr [ebp-10H], 38
        jge     __3164
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3164:
        cmp     dword ptr [ebp-10H], 34
        jge     __3165
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3165:
        cmp     dword ptr [ebp-10H], 30
        jge     __3166
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3166:
        cmp     dword ptr [ebp-10H], 26
        jge     __3167
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3167:
        cmp     dword ptr [ebp-10H], 22
        jge     __3168
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3168:
        cmp     dword ptr [ebp-10H], 12
        jge     __3169
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3169:
        cmp     dword ptr [ebp-10H], 7
        jge     __3170
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 44
        mov     dword ptr [esi], ebx

__3170:

__3158:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 48
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 100
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 48
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3171
        mov     dword ptr [ebp-0CH], 120
        jmp     __3172

__3173:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 1
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1065353216
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1108344832
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1124597760
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 1
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     edi, dword ptr [__vshotspeed]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1065353216
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1110966272
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1124597760
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 20

__3172:
        cmp     dword ptr [ebp-0CH], 240
        jle     __3173

__3171:

__3157:

__3155:

__299:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 540
        jle     __3174
        mov     dword ptr [ebp-34H], 1
        jmp     __3175

__3174:
        mov     dword ptr [ebp-34H], 0

__3175:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3176
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__3176:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter2]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 220
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-34H], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3177
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1114636288
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1121845248
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 40
        mov     dword ptr [esp+8H], 17
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1113325568
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1122500608
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 320
        mov     dword ptr [esp+8H], 17
        call    __fmake_enemy

__3177:

__3154:
        cmp     dword ptr [ebp-34H], 1
        jne     __3178
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3178:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 85
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1118437376
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 84
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1118306304
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 12
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcos
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 32
        mov     eax, dword ptr [ebp-40H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1065353216
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, 1068708659
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3179
        add     dword ptr [ebp-10H], 250

__3179:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3180
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jge     __3181
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3181:

__3180:
        cmp     dword ptr [ebp-10H], 0
        je      __3182
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3182:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-44H], ebx
        mov     ebx, 47
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2400
        jge     __3183
        mov     ebx, 48
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3183:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1800
        jge     __3184
        mov     ebx, 49
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3184:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1200
        jge     __3185
        mov     ebx, 50
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3185:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 600
        jge     __3186
        mov     ebx, 51
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3186:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-44H]
        je      __3187
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 174
        mov     dword ptr [esp+0CH], 246
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fexplosion_square

__3187:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 4294967096
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setle   al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3188
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter2]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 10
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     dword ptr [esp], -200
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3189
        mov     dword ptr [ebp-20H], 1
        jmp     __3190

__3191:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 400
        mov     dword ptr [esp+4H], 1
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 80
        mov     dword ptr [esp+4H], 1
        mov     eax, esi
        call    __frand
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        add     dword ptr [ebp-20H], 1

__3190:
        cmp     dword ptr [ebp-20H], 2
        jle     __3191

__3189:

__300:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1140457472
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -200
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3192
        mov     ebx, 4294967097
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3192:
        jmp     __3193

__3188:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -200
        jne     __3194
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3195

__3196:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 5
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3195:
        cmp     dword ptr [ebp-0CH], 160
        jle     __3196

__301:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3197

__3198:
        sub     esp, 8
        mov     dword ptr [esp], -1044381696
        mov     dword ptr [esp+4H], 1098907648
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1037041664
        mov     dword ptr [esp+4H], 1092616192
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 11
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 12
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3197:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3198

__302:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 12
        call    __fmake_bonuses
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vprims_hit], 1
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 8
        lea     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjPrev
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     eax, dword ptr [ebp-48H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3194:

__3193:
        jmp     __2659

__2687:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 24
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141309440
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3199
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 1
        jmp     __3200

__3201:
        sub     esp, 8
        lea     eax, dword ptr [ebp-50H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1141882880
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 37
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1065353216
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, 1073741824
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-50H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-50H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-0CH], 1

__3200:
        cmp     dword ptr [ebp-0CH], 20
        jle     __3201

__303:
        sub     esp, 8
        lea     eax, dword ptr [ebp-50H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 1141882880
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 10
        mov     esi, dword ptr [ebp-50H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 36
        call    __fplaysounds

__3199:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143930880
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3202
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3202:
        jmp     __2659

__2688:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 8
        jle     __3203
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx

__3203:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3238002688
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3204
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1032805417
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3204:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1133903872
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3205
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1032805417
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3205:
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vspinster]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 3
        call    ___bbMod
        cmp     eax, 0
        jne     __3206
        sub     esp, 20
        mov     dword ptr [esp+0CH], 4
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 0
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_smoke_ring

__3206:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 70
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3207
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubrp  st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], esi

__3207:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3238002688
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 160
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3208
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1094713344
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], esi

__3208:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        jle     __3209
        mov     ebx, 15
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3209:
        sub     esp, 24
        mov     dword ptr [esp+10H], -1065353216
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1142947840
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3210
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs_hit], 1
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 0
        jmp     __3211

__3212:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__3211:
        cmp     dword ptr [ebp-0CH], 10
        jle     __3212

__304:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3213
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonuscounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonuscounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3214
        sub     esp, 4
        mov     dword ptr [esp], 18
        call    __fplaysounds
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__abonustype]
        mov     esi, dword ptr [esi]
        add     ebx, esi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 40
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abonustype]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score

__3214:

__3213:
        mov     ebx, 3281387520
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__3210:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3276275712
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3215
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3215:
        jmp     __2659

__2689:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1050253722
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 200
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 40
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 22
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3216
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3216:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        cmp     eax, 50
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3217
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__3217:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3218
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__3218:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 24
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3219
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1103101952
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 30
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx

__3219:
        sub     esp, 24
        mov     dword ptr [esp+10H], 1050253722
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        je      __3220
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3220:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1092616192
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3221
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3222
        add     dword ptr [ebp-10H], 250

__3222:

__3221:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 50
        jle     __3223
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3223:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 100
        jle     __3224
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3224:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __3225
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3225:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jle     __3226
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 2
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        mov     dword ptr [ebp-0CH], 0
        jmp     __3227

__3228:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__3227:
        cmp     dword ptr [ebp-0CH], 10
        jle     __3228

__305:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3229

__3230:
        sub     esp, 8
        mov     dword ptr [esp], -1052770304
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 5
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 6
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3229:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3230

__306:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 4
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        mov     ebx, 1148846080
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__3226:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1145569280
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3231
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3231:
        jmp     __2659

__2690:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1050253722
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 150
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3232
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__3232:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125515264
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3233
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 45
        jmp     __3234

__3235:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        mov     esi, 1089470464
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 3
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, 1056964608
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1106247680
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1115815936
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 15

__3234:
        cmp     dword ptr [ebp-0CH], 135
        jle     __3235

__3233:

__307:
        sub     esp, 24
        mov     dword ptr [esp+10H], 1050253722
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        je      __3236
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3236:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3259498496
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3237
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3238
        add     dword ptr [ebp-10H], 250

__3238:

__3237:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 150
        jle     __3239
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3239:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        jle     __3240
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3240:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 450
        jle     __3241
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3241:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 600
        jle     __3242
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1101004800
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1117782016
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        mov     dword ptr [ebp-0CH], 0
        jmp     __3243

__3244:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 3
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 0
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_shard
        add     dword ptr [ebp-0CH], 1

__3243:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3244

__308:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3245

__3246:
        sub     esp, 8
        mov     dword ptr [esp], -1052770304
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 5
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 6
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3245:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3246

__309:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 6
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        mov     ebx, 1148846080
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__3242:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1145569280
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3247
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3247:
        jmp     __2659

__2691:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 32
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 32
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 50
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3233808384
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3248
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3248:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 50
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3249
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3249:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 50
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3233808384
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3250
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3250:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        sub     ebx, 150
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3251
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1045220557
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3251:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2800
        jge     __3252
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        jle     __3253
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 8
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 0
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 600
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 400
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3254
        sub     esp, 4
        mov     dword ptr [esp], 55
        call    __fload_enemy
        sub     esp, 8
        lea     eax, dword ptr [ebp-54H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, offset __tenemy
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 55
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 64
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-54H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3231711232
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3255
        mov     ebx, 3231711232
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3255:
        mov     eax, dword ptr [ebp-54H]
        mov     eax, dword ptr [eax]
        add     eax, 52
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3238002688
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3256
        mov     ebx, 3238002688
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3256:
        mov     ebx, 8
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-54H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vsecs], 1

__3254:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 35
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 600
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 450
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3257
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1122500608
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 80
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1123811328
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 280
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__3257:

__3253:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4500
        jle     __3258
        mov     ebx, 4294966296
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3276275712
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3259
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nosubship

__3259:

__3258:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        je      __3260
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3260:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 70
        jle     __3261
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3262
        add     dword ptr [ebp-10H], 250

__3262:

__3261:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-44H], ebx
        mov     ebx, 58
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 700
        jle     __3263
        mov     ebx, 59
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3263:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1400
        jle     __3264
        mov     ebx, 60
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3264:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2100
        jle     __3265
        mov     ebx, 61
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3265:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-44H]
        je      __3266
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 174
        mov     dword ptr [esp+0CH], 246
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fexplosion_square

__3266:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2800
        jle     __3267
        mov     ebx, 2800
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3267:

__3252:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 36
        mov     eax, dword ptr [eax]
        cmp     eax, 2800
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3000
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3268
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 10
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     dword ptr [esp], 2800
        mov     dword ptr [esp+4H], 3000
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3269
        mov     dword ptr [ebp-20H], 1
        jmp     __3270

__3271:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1106247680
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 174
        mov     dword ptr [esp+4H], 1
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 246
        mov     dword ptr [esp+4H], 1
        mov     eax, esi
        call    __frand
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        add     dword ptr [ebp-20H], 1

__3270:
        cmp     dword ptr [ebp-20H], 2
        jle     __3271

__3269:

__310:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1141473280
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3000
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3272
        mov     ebx, 2999
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3272:

__3268:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3000
        jl      __3273
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 1
        sub     esp, 16
        mov     dword ptr [esp+8H], 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3274

__3275:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 5
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3274:
        cmp     dword ptr [ebp-0CH], 160
        jle     __3275

__311:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3276

__3277:
        sub     esp, 8
        mov     dword ptr [esp], -1044381696
        mov     dword ptr [esp+4H], 1098907648
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1037041664
        mov     dword ptr [esp+4H], 1092616192
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 7
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 8
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3276:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3277

__312:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 12
        call    __fmake_bonuses
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250nosubship:

__3273:
        jmp     __2659

__2692:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1137836032
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3278
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3278:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1130102784
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3279
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1008981770
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3279:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 3
        call    ___bbMod
        cmp     eax, 0
        je      __3280
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1138753536
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 600
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3281
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        jmp     __3282

__3281:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1143144448
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3283
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3283:

__3282:

__3280:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142947840
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 500
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3284
        mov     ebx, 500
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3284:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        shl     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 360
        call    ___bbMod
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3285
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx

__3285:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4000
        jge     __3286
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 56
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1138753536
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        sete    al
        movzx   eax, al
        and     eax, eax
        je      __3287
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx

__3287:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 60
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3288
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 35
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 350
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 200
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3289
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 80
        mov     dword ptr [esp+8H], 17
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1127153664
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__3289:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 350
        call    ___bbMod
        cmp     eax, 100
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 350
        mov     eax, ebx
        call    ___bbMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 200
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3290
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 45
        jmp     __3291

__3292:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        mov     esi, 1089470464
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 3
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1084227584
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 52
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1123549184
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 15

__3291:
        cmp     dword ptr [ebp-0CH], 135
        jle     __3292

__3290:

__313:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 350
        call    ___bbMod
        cmp     eax, 150
        jne     __3293
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-0CH], 45
        jmp     __3294

__3295:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        mov     esi, 1093664768
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 3
        mov     esi, dword ptr [ebp-0CH]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acost]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1082130432
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 52
        mov     edi, dword ptr [edi]
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1123549184
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __ffire_enemy_bullet_2
        add     dword ptr [ebp-0CH], 15

__3294:
        cmp     dword ptr [ebp-0CH], 135
        jle     __3295

__3293:

__3288:

__314:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        je      __3296
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3296:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 70
        jle     __3297
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3298
        add     dword ptr [ebp-10H], 250

__3298:

__3297:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-44H], ebx
        mov     ebx, 62
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1000
        jle     __3299
        mov     ebx, 63
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3299:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2000
        jle     __3300
        mov     ebx, 64
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3300:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3000
        jle     __3301
        mov     ebx, 65
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3301:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-44H]
        je      __3302
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 400
        mov     dword ptr [esp+0CH], 80
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1128792064
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fexplosion_square

__3302:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4000
        jle     __3303
        mov     ebx, 4000
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3303:
        jmp     __3304

__3286:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4200
        jge     __3305
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 10
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     dword ptr [esp], 4000
        mov     dword ptr [esp+4H], 4200
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3306
        mov     dword ptr [ebp-20H], 1
        jmp     __3307

__3308:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 400
        mov     dword ptr [esp+4H], 1
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 80
        mov     dword ptr [esp+4H], 1
        mov     eax, esi
        call    __frand
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        add     dword ptr [ebp-20H], 1

__3307:
        cmp     dword ptr [ebp-20H], 2
        jle     __3308

__3306:

__315:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1137180672
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4200
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3309
        mov     ebx, 4200
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3309:
        jmp     __3310

__3305:
        sub     esp, 4
        mov     dword ptr [esp], 58
        call    __fload_enemy
        sub     esp, 32
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1126170624
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 300
        mov     dword ptr [esp+0CH], 600
        mov     dword ptr [esp+8H], 30
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 1
        sub     esp, 16
        mov     dword ptr [esp+8H], 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125515264
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125515264
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3311

__3312:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 5
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3311:
        cmp     dword ptr [ebp-0CH], 160
        jle     __3312

__316:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3313

__3314:
        sub     esp, 8
        mov     dword ptr [esp], -1044381696
        mov     dword ptr [esp+4H], 1098907648
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1037041664
        mov     dword ptr [esp+4H], 1092616192
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 7
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 8
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3313:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3314

__317:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3310:

__3304:
        jmp     __2659

__2693:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 32
        mov     eax, dword ptr [eax]
        add     eax, 1
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 32
        call    ___bbMod
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 300
        jle     __3315
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 250
        call    ___bbMod
        mov     dword ptr [ebp-10H], eax
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-10H], 136
        jge     __3316
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3316:
        cmp     dword ptr [ebp-10H], 132
        jge     __3317
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3317:
        cmp     dword ptr [ebp-10H], 128
        jge     __3318
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3318:
        cmp     dword ptr [ebp-10H], 124
        jge     __3319
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3319:
        cmp     dword ptr [ebp-10H], 120
        jge     __3320
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3320:
        cmp     dword ptr [ebp-10H], 38
        jge     __3321
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3321:
        cmp     dword ptr [ebp-10H], 34
        jge     __3322
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3322:
        cmp     dword ptr [ebp-10H], 30
        jge     __3323
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3323:
        cmp     dword ptr [ebp-10H], 26
        jge     __3324
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3324:
        cmp     dword ptr [ebp-10H], 22
        jge     __3325
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3325:

__3315:
        cmp     dword ptr [ebp-10H], 154
        jne     __3326
        sub     esp, 4
        mov     dword ptr [esp], 29
        call    __fplaysounds

__3326:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 40
        mov     eax, dword ptr [eax]
        cmp     eax, 5
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-10H], 145
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3327
        sub     esp, 8
        lea     eax, dword ptr [ebp-58H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, offset __tenemy_zap
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1143930880
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 9
        call    __frand
        mov     ebx, dword ptr [ebp-58H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        cmp     dword ptr [ebp-10H], 100
        jle     __3328
        cmp     dword ptr [ebp-10H], 165
        jge     __3329
        mov     ebx, 1
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3329:
        cmp     dword ptr [ebp-10H], 155
        jge     __3330
        mov     ebx, 0
        mov     esi, dword ptr [ebp-58H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3330:

__3328:

__3327:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2000
        jle     __3331
        mov     ebx, 4294966296
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 3276275712
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3332
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        jmp     __l_250nosquid3

__3332:

__3331:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3233808384
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3333
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1041865114
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3333:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3334
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1041865114
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3334:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3233808384
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3335
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1041865114
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3335:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        sub     ebx, 20
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1086324736
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3336
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1041865114
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3336:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117257728
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-4H]
        mov     edi, dword ptr [edi]
        add     edi, 32
        mov     edi, dword ptr [edi]
        sar     edi, 3
        mov     dword ptr [esp+0CH], edi
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollision_enemy_bullet
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        add     ebx, eax
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 0
        je      __3337
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3337:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 70
        jle     __3338
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117257728
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     esi, dword ptr [esi]
        sar     esi, 3
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fcollide_player
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        or      eax, ebx
        and     eax, eax
        je      __3339
        add     dword ptr [ebp-10H], 250

__3339:

__3338:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-14H], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 120
        jle     __3340
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3340:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 240
        jle     __3341
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3341:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 360
        jle     __3342
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3342:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 480
        jle     __3343
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3343:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 3
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3344
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 16
        mov     dword ptr [esp+18H], 2
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -4
        mov     dword ptr [esp+8H], 2
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3344:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        cmp     eax, 4
        setge   al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        cmp     dword ptr [ebp-14H], 4
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3345
        sub     esp, 28
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+14H], 16
        mov     dword ptr [esp+18H], 1
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], -3
        mov     dword ptr [esp+8H], -1
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_big_shard

__3345:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 600
        jl      __3346
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 5
        sub     esp, 16
        mov     dword ptr [esp+8H], 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1084227584
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1101004800
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3347

__3348:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 4
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3347:
        cmp     dword ptr [ebp-0CH], 80
        jle     __3348

__318:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3349

__3350:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 15
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 16
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3349:
        cmp     dword ptr [ebp-0CH], 4
        jle     __3350

__319:
        sub     esp, 12
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 5
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_bonuses
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__l_250nosquid3:

__3346:
        jmp     __2659

__2694:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1119040307
        mov     dword ptr [esp+4H], 1028443341
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1119040307
        mov     dword ptr [esp+4H], 1028443341
        call    __frnd
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1142128640
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3229614080
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3351
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1028443341
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3351:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1140785152
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3352
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1028443341
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 52
        mov     dword ptr [esi], ebx

__3352:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1132068864
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 3229614080
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3353
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1028443341
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3353:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1135542272
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1082130432
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3354
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 56
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1028443341
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esi], ebx

__3354:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15000
        jge     __3355
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 500
        call    ___bbMod
        cmp     eax, 0
        jne     __3356
        sub     esp, 4
        mov     dword ptr [esp], 17
        call    __fload_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1121714176
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1121189888
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1077936128
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 150
        mov     dword ptr [esp+8H], 17
        call    __fmake_enemy
        sub     esp, 32
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1124204544
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1119879168
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     edi, 1077936128
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 210
        mov     dword ptr [esp+8H], 17
        call    __fmake_enemy

__3356:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 660
        call    ___bbMod
        cmp     eax, 480
        jle     __3357
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        cmp     eax, 40
        jge     __3358
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3358:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        cmp     eax, 35
        jge     __3359
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3359:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        cmp     eax, 30
        jge     __3360
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3360:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        cmp     eax, 10
        jge     __3361
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3361:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        cmp     eax, 5
        jge     __3362
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 40
        mov     dword ptr [esi], ebx

__3362:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 60
        call    ___bbMod
        cmp     eax, 10
        jne     __3363
        sub     esp, 4
        mov     dword ptr [esp], 7
        call    __fload_enemy
        sub     esp, 40
        mov     dword ptr [esp], 1106247680
        mov     dword ptr [esp+4H], 1141800960
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+1CH], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1135542272
        mov     dword ptr [esp+4H], 1142620160
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+0CH], ebx
        mov     dword ptr [esp+8H], 9
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     edi, 1103626240
        push    edi
        fld     dword ptr [esp]
        pop     edi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1103626240
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_enemy

__3363:

__3357:
        sub     esp, 24
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 52
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     dword ptr [esp+14H], 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fcollision_enemy_bullet
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        je      __3364
        sub     esp, 4
        mov     dword ptr [esp], 16
        call    __fplaysounds

__3364:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fcollide_player
        cmp     eax, 1
        jne     __3365
        add     dword ptr [ebp-10H], 250

__3365:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, dword ptr [ebp-10H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [ebp-44H], ebx
        mov     ebx, 67
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 3000
        jle     __3366
        mov     ebx, 68
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3366:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 6000
        jle     __3367
        mov     ebx, 69
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3367:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9000
        jle     __3368
        mov     ebx, 70
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3368:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 12000
        jle     __3369
        mov     ebx, 71
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3369:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-44H]
        je      __3370
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1117782016
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 240
        mov     dword ptr [esp+0CH], 246
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     esi, 1106247680
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fexplosion_square

__3370:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15000
        jle     __3371
        mov     ebx, 15000
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3371:
        jmp     __3372

__3355:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15500
        jge     __3373
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 60
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 10
        call    ___bbMod
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     dword ptr [ebp-60H], eax
        sub     esp, 8
        mov     dword ptr [esp], 15000
        mov     dword ptr [esp+4H], 15500
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-60H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     eax, ebx
        and     eax, eax
        je      __3374
        mov     dword ptr [ebp-20H], 1
        jmp     __3375

__3376:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1128792064
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 400
        mov     dword ptr [esp+4H], 1
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 80
        mov     dword ptr [esp+4H], 1
        mov     eax, esi
        call    __frand
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        add     dword ptr [ebp-20H], 1

__3375:
        cmp     dword ptr [ebp-20H], 2
        jle     __3376

__3374:

__320:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1140457472
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        mov     dword ptr [ebp-5CH], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15500
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3377
        mov     ebx, 15499
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3377:
        jmp     __3378

__3373:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhitfirst]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ascore]
        mov     ebx, dword ptr [ebx]
        add     ebx, 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ascore]
        mov     dword ptr [esi], ebx
        sub     esp, 16
        mov     dword ptr [esp+8H], 2500
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vhitfirst]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fmake_score
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1112014848
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 41
        call    __fmake_explosion
        mov     dword ptr [ebp-0CH], 0
        jmp     __3379

__3380:
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 32
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     esi, 1109393408
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp-0CH]
        sar     esi, 5
        mov     dword ptr [esp+10H], esi
        mov     dword ptr [esp+14H], 0
        mov     edi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], edi
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3379:
        cmp     dword ptr [ebp-0CH], 160
        jle     __3380

__321:
        mov     dword ptr [ebp-0CH], 1
        jmp     __3381

__3382:
        sub     esp, 8
        mov     dword ptr [esp], -1044381696
        mov     dword ptr [esp+4H], 1098907648
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1037041664
        mov     dword ptr [esp+4H], 1092616192
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 11
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        sub     esp, 8
        mov     dword ptr [esp], -1050673152
        mov     dword ptr [esp+4H], 1090519040
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 8
        mov     dword ptr [esp], -1045430272
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 36
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 1088421888
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+10H], eax
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+14H], 12
        mov     ebx, dword ptr [ebp-1CH]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], esi
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-1CH]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     edi, 1109393408
        push    edi
        fld     dword ptr [esp]
        pop     edi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 6
        call    __frand
        imul    eax, dword ptr [ebp-18H]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fmake_big_shard
        mov     esi, eax
        add     dword ptr [ebp-0CH], 1

__3381:
        cmp     dword ptr [ebp-0CH], 40
        jle     __3382

__322:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1112014848
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 14
        call    __fmake_bonuses
; Note: Memory operand is misaligned. Performance penalty
        add     dword ptr [__vprims_hit], 50
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3378:

__3372:
        jmp     __2659

__l_250nomoreship:

__2659:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __2658

__251:
        mov     eax, 0
        jmp     __250_leave

__250_leave:
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-54H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-58H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-50H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-48H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-3CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-38H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     dword ptr [ebp-5CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-5CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fenemy ENDP

__fcollision_enemy_bullet PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 28
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp+28H], 0
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tplayershot
        call    ___bbObjEachFirst
        and     eax, eax
        je      __324

__3383:
        mov     dword ptr [ebp-0CH], 0
        sub     esp, 32
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+18H], ebx
        mov     dword ptr [esp+1CH], 0
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+14H], esi
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__abullet_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+14H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+1CH]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        and     eax, eax
        je      __3384
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3385
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhitfirst], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __3386
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx

__3386:
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3387
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1065353216
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx

__3387:
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __3388
        sub     esp, 12
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     dword ptr [esp], eax
        call    __fmake_explosion
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1103626240
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx

__3388:
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        jne     __3389
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx

__3389:
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3390
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __tflash
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 20
        mov     dword ptr [esp+4H], 30
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3390:
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __3391
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __tflash
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 20
        mov     dword ptr [esp+4H], 30
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        add     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 12
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-10H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3391:
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 16
        mov     eax, dword ptr [eax]
        cmp     eax, 6
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 15
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        or      eax, ebx
        mov     dword ptr [ebp-1CH], eax
        cmp     dword ptr [ebp+28H], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __3392
        mov     ebx, 4294966296
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx

__3392:
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3393
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1059481190
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jne     __3394
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1059481190
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx

__3394:

__3393:
        mov     ebx, dword ptr [ebp-4H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-4H], ebx

__3385:

__3384:
        sub     esp, 4
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3383

__324:
        mov     dword ptr [ebp-14H], 1
        jmp     __3395

__3396:
        mov     dword ptr [ebp-0CH], 0
        mov     eax, dword ptr [ebp-14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__alightning]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-1CH], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlight_on_off], 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     eax, ebx
        and     eax, eax
        je      __3397
        sub     esp, 32
        mov     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 5
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 58
        mov     dword ptr [esp+14H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlightning_im]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+14H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+1CH]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        and     eax, eax
        je      __3398
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     ebx, dword ptr [ebp-14H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhitfirst], ebx
        mov     dword ptr [ebp-18H], 0
        jmp     __3399

__3400:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 1086324736
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
        add     esi, 5
        mov     dword ptr [esp+4H], esi
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        sar     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_shard
        mov     ebx, eax
        add     dword ptr [ebp-18H], 1

__3399:
        cmp     dword ptr [ebp-18H], 3
        jle     __3400

__3398:

__326:
        sub     esp, 32
        mov     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__vpodoffset]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-14H]
        add     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esp+14H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlightning_im]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+14H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+1CH]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3401
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     ebx, dword ptr [ebp-14H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhitfirst], ebx
        mov     dword ptr [ebp-18H], 0
        jmp     __3402

__3403:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 1086324736
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__vpodoffset]
        mov     dword ptr [esp+4H], esi
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        sar     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_shard
        mov     ebx, eax
        add     dword ptr [ebp-18H], 1

__3402:
        cmp     dword ptr [ebp-18H], 3
        jle     __3403

__3401:

__327:
        sub     esp, 32
        mov     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vpodoffset]
        mov     dword ptr [esp+18H], ebx
        mov     esi, dword ptr [ebp-14H]
        add     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alightning]
        mov     esi, dword ptr [esi]
        sub     esi, 1
        mov     dword ptr [esp+1CH], esi
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ax]
        mov     esi, dword ptr [esi]
        add     esi, 56
        mov     dword ptr [esp+14H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlightning_im]
        mov     dword ptr [esp+10H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+14H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+1CH]
        mov     dword ptr [esp], eax
        call    __fimagescollide
        mov     dword ptr [ebp-1CH], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        and     ebx, eax
        and     ebx, ebx
        je      __3404
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1077936128
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     ebx, dword ptr [ebp-14H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhitfirst], ebx
        mov     dword ptr [ebp-18H], 0
        jmp     __3405

__3406:
        sub     esp, 32
        mov     dword ptr [esp], -1049624576
        mov     dword ptr [esp+4H], 1084227584
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1061158912
        mov     dword ptr [esp+4H], 1086324736
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ay]
        mov     esi, dword ptr [esi]
; Note: Memory operand is misaligned. Performance penalty
        sub     esi, dword ptr [__vpodoffset]
        mov     dword ptr [esp+4H], esi
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimagewidth
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        sar     ebx, 1
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        fsubp   st(1), st(0)
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmake_shard
        mov     ebx, eax
        add     dword ptr [ebp-18H], 1

__3405:
        cmp     dword ptr [ebp-18H], 3
        jle     __3406

__3404:

__3397:

__328:
        mov     ebx, dword ptr [ebp-4H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-0CH]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-4H], ebx
        add     dword ptr [ebp-14H], 1

__3395:
        cmp     dword ptr [ebp-14H], 2
        jle     __3396

__325:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __3407
        mov     ebx, dword ptr [ebp-4H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1060320051
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-4H], ebx

__3407:
        mov     eax, dword ptr [ebp-4H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        jmp     __323_leave

        mov     eax, 0
        jmp     __323_leave

__323_leave:
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     24
__fcollision_enemy_bullet ENDP

__fmake_explosion PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __texplosion
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vexplod], 1
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp+1CH], 1
        jne     __3408
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fplaysounds

__3408:
        cmp     dword ptr [ebp+1CH], 21
        jne     __3409
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __fplaysounds

__3409:
        cmp     dword ptr [ebp+1CH], 41
        jne     __3410
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __fplaysounds

__3410:
        mov     eax, 0
        jmp     __329_leave

__329_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     12
__fmake_explosion ENDP

__fmake_smoke_ring PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tsmoke_ring
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __330_leave

__330_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     20
__fmake_smoke_ring ENDP

__ffire_enemy_bullet PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 40
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdifficulty]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 3
        jne     __3411
        mov     dword ptr [ebp-4H], 6

__3411:
        sub     esp, 8
        mov     dword ptr [esp], 1065353216
        mov     ebx, dword ptr [ebp-4H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        cmp     eax, 1
        jne     __3412
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __3413
        sub     esp, 8
        mov     dword ptr [esp], 1065353216
        mov     dword ptr [esp+4H], 1073741824
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-8H], eax
        jmp     __3414

__3413:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __3415
        mov     dword ptr [ebp-8H], 1
        jmp     __3416

__3415:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        and     ebx, ebx
        je      __3417
        mov     dword ptr [ebp-8H], 2
        jmp     __3418

__3417:
        jmp     __l_331skip

__3418:

__3416:

__3414:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ay]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        sub     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ax]
        mov     ebx, dword ptr [ebx]
        add     ebx, 26
        sub     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-10H], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-0CH]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp-10H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-10H]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fsqr
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-14H], eax
        mov     ebx, dword ptr [ebp-14H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp-10H]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
        mov     dword ptr [ebp-10H], esi
        mov     dword ptr [ebp-18H], 0
        mov     dword ptr [ebp-1CH], 0
        mov     eax, dword ptr [ebp-0CH]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3419
        mov     ebx, dword ptr [ebp-0CH]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-18H], 1

__3419:
        mov     eax, dword ptr [ebp-10H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __3420
        mov     ebx, dword ptr [ebp-10H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-1CH], 1

__3420:
        mov     eax, dword ptr [ebp-10H]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setne   al
        movzx   eax, al
        and     eax, eax
        je      __3421
        sub     esp, 4
        mov     eax, dword ptr [ebp-0CH]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-10H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        call    __fatan
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-20H], eax
        jmp     __3422

__3421:
        jmp     __l_331skip

__3422:
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tenemyshot
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     dword ptr [esp], 20
        call    __fplaysounds
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-20H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-20H]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asint]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vshotspeed]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-18H]
        and     ebx, ebx
        je      __3423
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3423:
        mov     ebx, dword ptr [ebp-1CH]
        and     ebx, ebx
        je      __3424
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fchs
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3424:
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1069547520
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__l_331skip:

__3412:
        mov     eax, 0
        jmp     __331_leave

__331_leave:
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     8
__ffire_enemy_bullet ENDP

__ffire_enemy_bullet_2 PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdifficulty]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 3
        jne     __3425
        mov     dword ptr [ebp-4H], 6

__3425:
        sub     esp, 8
        mov     dword ptr [esp], 1065353216
        mov     ebx, dword ptr [ebp-4H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        cmp     eax, 1
        jne     __3426
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tenemyshot
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     dword ptr [esp], 19
        call    __fplaysounds

__3426:
        mov     eax, 0
        jmp     __332_leave

__332_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     24
__ffire_enemy_bullet_2 ENDP

__fmake_bonuses PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 0
        je      __3428
        cmp     dword ptr [ebp-4H], 1
        je      __3429
        cmp     dword ptr [ebp-4H], 2
        je      __3430
        cmp     dword ptr [ebp-4H], 3
        je      __3431
        cmp     dword ptr [ebp-4H], 4
        je      __3432
        cmp     dword ptr [ebp-4H], 5
        je      __3433
        cmp     dword ptr [ebp-4H], 6
        je      __3434
        cmp     dword ptr [ebp-4H], 7
        je      __3435
        cmp     dword ptr [ebp-4H], 8
        je      __3436
        cmp     dword ptr [ebp-4H], 9
        je      __3437
        cmp     dword ptr [ebp-4H], 10
        je      __3438
        cmp     dword ptr [ebp-4H], 11
        je      __3439
        cmp     dword ptr [ebp-4H], 12
        je      __3440
        cmp     dword ptr [ebp-4H], 13
        je      __3441
        cmp     dword ptr [ebp-4H], 14
        je      __3442
        jmp     __3427

__3428:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3429:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3430:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3431:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3432:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3433:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3434:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3435:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3436:
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1063256064
        mov     dword ptr [esp+4H], -1073741824
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3437:
        sub     esp, 16
        mov     dword ptr [esp+8H], 1
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_balloon
        jmp     __3427

__3438:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     esi, dword ptr [esi]
        and     ebx, esi
        and     ebx, ebx
        je      __3443
        sub     esp, 16
        mov     dword ptr [esp+8H], 2
        mov     dword ptr [esp+0CH], 1
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        add     eax, 30
        mov     dword ptr [esp], eax
        call    __fmake_balloon
        jmp     __3444

__3443:
        sub     esp, 16
        mov     dword ptr [esp+8H], 1
        mov     dword ptr [esp+0CH], 1
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        add     eax, 30
        mov     dword ptr [esp], eax
        call    __fmake_balloon

__3444:
        sub     esp, 16
        mov     dword ptr [esp+8H], 2
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        sub     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_balloon
        jmp     __3427

__3439:
        sub     esp, 16
        mov     dword ptr [esp+8H], 3
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_balloon
        jmp     __3427

__3440:
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        jmp     __3427

__3441:
        sub     esp, 16
        mov     dword ptr [esp+8H], 2
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        sub     eax, 40
        mov     dword ptr [esp], eax
        call    __fmake_balloon
        jmp     __3427

__3442:
        mov     dword ptr [ebp-8H], 1
        jmp     __3445

__3446:
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        sub     esp, 32
        mov     dword ptr [esp], -1059061760
        mov     dword ptr [esp+4H], -1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+0CH], eax
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], -1073741824
        mov     dword ptr [esp+4H], 1065353216
        mov     eax, ebx
        call    __frnd
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fmake_bonus
        add     dword ptr [ebp-8H], 1

__3445:
        cmp     dword ptr [ebp-8H], 6
        jle     __3446

__335:
        jmp     __3427

__3427:
        mov     eax, 0
        jmp     __333_leave

__333_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     12
__fmake_bonuses ENDP

__fprintline PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 20
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
        mov     dword ptr [ebp-4H], eax
        jmp     __3447

__3448:
        sub     esp, 20
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 12
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __3450
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrCompare
        cmp     eax, 0
        je      __3449
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fupper
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fasc
        mov     dword ptr [ebp-0CH], eax
        cmp     dword ptr [ebp-0CH], 64
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-0CH], 91
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        and     eax, ebx
        and     eax, eax
        je      __3451
        sub     dword ptr [ebp-0CH], 65
        jmp     __l_336skipconv

__3451:
        cmp     dword ptr [ebp-0CH], 47
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-0CH], 58
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        and     eax, ebx
        and     eax, eax
        je      __3452
        sub     dword ptr [ebp-0CH], 22
        jmp     __l_336skipconv

__3452:
        cmp     dword ptr [ebp-0CH], 42
        jne     __3453
        mov     dword ptr [ebp-0CH], 36
        jmp     __l_336skipconv

__3453:
        cmp     dword ptr [ebp-0CH], 33
        jne     __3454
        mov     dword ptr [ebp-0CH], 37
        jmp     __l_336skipconv

__3454:
        cmp     dword ptr [ebp-0CH], 40
        jne     __3455
        mov     dword ptr [ebp-0CH], 38
        jmp     __l_336skipconv

__3455:
        cmp     dword ptr [ebp-0CH], 41
        jne     __3456
        mov     dword ptr [ebp-0CH], 39
        jmp     __l_336skipconv

__3456:
        cmp     dword ptr [ebp-0CH], 43
        jne     __3457
        mov     dword ptr [ebp-0CH], 40
        jmp     __l_336skipconv

__3457:
        cmp     dword ptr [ebp-0CH], 63
        jne     __3458
        mov     dword ptr [ebp-0CH], 41
        jmp     __l_336skipconv

__3458:
        cmp     dword ptr [ebp-0CH], 46
        jne     __3459
        mov     dword ptr [ebp-0CH], 42
        jmp     __l_336skipconv

__3459:
        cmp     dword ptr [ebp-0CH], 34
        jne     __3460
        mov     dword ptr [ebp-0CH], 43
        jmp     __l_336skipconv

__3460:
        cmp     dword ptr [ebp-0CH], 94
        jne     __3461
        mov     dword ptr [ebp-0CH], 44
        jmp     __l_336skipconv

__3461:
        cmp     dword ptr [ebp-0CH], 37
        jne     __3462
        mov     dword ptr [ebp-0CH], 45
        jmp     __l_336skipconv

__3462:
        cmp     dword ptr [ebp-0CH], 36
        jne     __3463
        mov     dword ptr [ebp-0CH], 46
        jmp     __l_336skipconv

__3463:
        cmp     dword ptr [ebp-0CH], 38
        jne     __3464
        mov     dword ptr [ebp-0CH], 47
        jmp     __l_336skipconv

__3464:
        cmp     dword ptr [ebp-0CH], 45
        jne     __3465
        mov     dword ptr [ebp-0CH], 48
        jmp     __l_336skipconv

__3465:
        cmp     dword ptr [ebp-0CH], 58
        jne     __3466
        mov     dword ptr [ebp-0CH], 49
        jmp     __l_336skipconv

__3466:
        cmp     dword ptr [ebp-0CH], 61
        jne     __3467
        mov     dword ptr [ebp-0CH], 50
        jmp     __l_336skipconv

__3467:
        cmp     dword ptr [ebp-0CH], 44
        jne     __3468
        mov     dword ptr [ebp-0CH], 51

__l_336skipconv:

__3468:
        cmp     dword ptr [ebp-0CH], 51
        jle     __3469
        mov     dword ptr [ebp-0CH], 0

__3469:
        cmp     dword ptr [ebp+20H], 3
        je      __3470
        cmp     dword ptr [ebp+24H], -1
        je      __3471
        sub     esp, 36
        mov     ebx, dword ptr [ebp+28H]
        mov     dword ptr [esp+1CH], ebx
        mov     esi, dword ptr [ebp+2CH]
        mov     dword ptr [esp+20H], esi
        mov     esi, dword ptr [ebp-4H]
        imul    esi, dword ptr [ebp+24H]
        mov     dword ptr [esp+18H], esi
        mov     dword ptr [esp+14H], -1
        mov     dword ptr [esp+10H], 9
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        sub     eax, 1
        imul    eax, eax, 27
        add     eax, dword ptr [ebp+18H]
        mov     dword ptr [esp], eax
        call    __fmakeletter
        jmp     __3472

__3471:
        sub     esp, 36
        mov     ebx, dword ptr [ebp+28H]
        mov     dword ptr [esp+1CH], ebx
        mov     esi, dword ptr [ebp+2CH]
        mov     dword ptr [esp+20H], esi
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+14H], -1
        mov     dword ptr [esp+10H], 1
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        sub     eax, 1
        imul    eax, eax, 27
        add     eax, dword ptr [ebp+18H]
        mov     dword ptr [esp], eax
        call    __fmakeletter

__3472:
        jmp     __3473

__3470:
        cmp     dword ptr [ebp+24H], -1
        je      __3474
        sub     esp, 36
        mov     ebx, dword ptr [ebp+28H]
        mov     dword ptr [esp+1CH], ebx
        mov     esi, dword ptr [ebp+2CH]
        mov     dword ptr [esp+20H], esi
        mov     esi, dword ptr [ebp-4H]
        imul    esi, dword ptr [ebp+24H]
        mov     dword ptr [esp+18H], esi
        mov     dword ptr [esp+14H], -1
        mov     dword ptr [esp+10H], 9
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        sub     eax, 1
        imul    eax, eax, 13
        add     eax, dword ptr [ebp+18H]
        mov     dword ptr [esp], eax
        call    __fmakeletter
        jmp     __3475

__3474:
        sub     esp, 36
        mov     ebx, dword ptr [ebp+28H]
        mov     dword ptr [esp+1CH], ebx
        mov     esi, dword ptr [ebp+2CH]
        mov     dword ptr [esp+20H], esi
        mov     dword ptr [esp+18H], 0
        mov     dword ptr [esp+14H], -1
        mov     dword ptr [esp+10H], 1
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+4H], ebx
        mov     eax, dword ptr [ebp-4H]
        sub     eax, 1
        imul    eax, eax, 13
        add     eax, dword ptr [ebp+18H]
        mov     dword ptr [esp], eax
        call    __fmakeletter

__3475:

__3473:

__3449:
        add     dword ptr [ebp-4H], -1

__3447:
        cmp     dword ptr [ebp-4H], 1
        jge     __3448

__337:
        mov     eax, 0
        jmp     __336_leave

__336_leave:
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-10H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     28
__fprintline ENDP

__fmakeletter PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tletter
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+2CH]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+30H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 32
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+34H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __338_leave

__338_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     36
__fmakeletter ENDP

__fupdateletters PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tletter
        call    ___bbObjEachFirst
        and     eax, eax
        je      __340

__3476:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3477
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 32
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atrigger]
        mov     eax, dword ptr [eax]
        cmp     eax, 1
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-8H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -2
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        and     eax, ebx
        and     eax, eax
        je      __3478
        mov     ebx, 4294967294
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3478:
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 32
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__atrigger]
        mov     eax, dword ptr [eax]
        cmp     eax, 3
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-8H], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -2
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        and     eax, ebx
        and     eax, eax
        je      __3479
        mov     ebx, 4294967292
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3479:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        jle     __3480
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3481
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jle     __3482
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jle     __3483
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3483:
        jmp     __3484

__3482:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__3484:

__3481:
        jmp     __3485

__3480:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        jne     __3486
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3487
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__3487:

__3486:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -2
        jne     __3488
        sub     esp, 8
        mov     dword ptr [esp], 10
        mov     dword ptr [esp+4H], 1
        call    __frand
        cmp     eax, 1
        jne     __3489
        mov     ebx, 4294967293
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx

__3489:

__3488:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -3
        jne     __3490
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1050253722
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        jge     __3491
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jle     __3492
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3492:
        jmp     __3493

__3491:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3493:
        jmp     __3494

__3490:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -4
        jne     __3495
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        jge     __3496
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 5
        jle     __3497
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3497:
        jmp     __3498

__3496:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3498:

__3495:

__3494:

__3485:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        je      __3499
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 32
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__atrigger]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 2
        jne     __3500
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3500:

__3499:
        jmp     __3501

__3477:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 36
        mov     dword ptr [esi], ebx

__3501:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3476

__340:
        mov     eax, 0
        jmp     __339_leave

__339_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fupdateletters ENDP

__fdrawletters PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 4
        mov     eax, offset __afont_active
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 3
        mov     esi, offset __afont_active
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __afont_active
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tletter
        call    ___bbObjEachFirst
        and     eax, eax
        je      __342

__3502:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_active]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_active]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3502

__342:
        mov     dword ptr [ebp-8H], 1
        jmp     __3503

__3504:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        and     eax, ebx
        and     eax, eax
        je      __3505
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fload_font
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1

__3505:
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_active]
        mov     eax, dword ptr [eax]
        cmp     eax, 0
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-0CH], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        and     eax, ebx
        mov     dword ptr [ebp-0CH], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vunload], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        and     eax, ebx
        and     eax, eax
        je      __3506
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __ffree_font
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1

__3506:
        add     dword ptr [ebp-8H], 1

__3503:
        cmp     dword ptr [ebp-8H], 3
        jle     __3504

__343:
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tletter
        call    ___bbObjEachFirst
        and     eax, eax
        je      __344

__3507:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 36
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3508
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     ebx, dword ptr [ebx]
        cmp     ebx, -1
        je      __3509
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_im]
        mov     esi, dword ptr [esi]
        cmp     esi, 0
        je      __3510
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 20
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        call    __fmikedrawimage

__3510:

__3509:

__3508:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3507

__344:
        mov     eax, 0
        jmp     __341_leave

__341_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdrawletters ENDP

__fupdatecounters PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 20
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-4H], 0
        jmp     __3511

__3512:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounteractive]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3513
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounterdigits]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3514
        mov     dword ptr [ebp-8H], 1
        jmp     __3515

__3516:
        sub     esp, 4
        mov     eax, offset __adigid
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-8H]
        add     eax, dword ptr [ebp-4H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adigid]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        add     dword ptr [ebp-8H], 1

__3515:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounterdigits]
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3516

__347:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounterdigits]
        mov     dword ptr [esi], ebx

__3514:
        jmp     __3517

__3513:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aoldcountervalue]
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        je      __3518
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountercounter]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3519
        mov     ebx, 16
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountercounter]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __3521

__3520:
        sub     esp, 20
        mov     eax, offset __3522
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__3521:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounterdigits]
        mov     ebx, dword ptr [ebx]
        cmp     eax, ebx
        jl      __3520

__348:
        mov     dword ptr [ebp-8H], 1
        jmp     __3523

__3524:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp], eax
        call    __fasc
        sub     eax, 48
        mov     dword ptr [ebp-10H], eax
        cmp     dword ptr [ebp-10H], 0
        jge     __3525
        mov     dword ptr [ebp-10H], 0

__3525:
        cmp     dword ptr [ebp-10H], 9
        jle     __3526
        mov     dword ptr [ebp-10H], 9

__3526:
        mov     ebx, dword ptr [ebp-10H]
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-8H]
        add     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__3523:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acounterdigits]
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3524

__349:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountervalue]
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aoldcountervalue]
        mov     dword ptr [esi], ebx
        jmp     __3527

__3519:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acountercounter]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountercounter]
        mov     dword ptr [esi], ebx

__3527:

__3518:

__3517:
        add     dword ptr [ebp-4H], 1

__3511:
        cmp     dword ptr [ebp-4H], 10
        jle     __3512

__346:
        mov     eax, 0
        jmp     __345_leave

__345_leave:
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fupdatecounters ENDP

__fmakecounter PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 16
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-4H], 0
        mov     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounteractive]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountercounter]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+24H]
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acounterdigits]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__acountervalue]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+20H]
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aoldcountervalue]
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __3529

__3528:
        sub     esp, 20
        mov     eax, offset __3530
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax

__3529:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
        cmp     eax, dword ptr [ebp+24H]
        jl      __3528

__351:
        mov     ebx, dword ptr [ebp+24H]
        mov     dword ptr [ebp-0CH], ebx
        jmp     __3531

__3532:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp], eax
        call    __fasc
        sub     eax, 48
        mov     dword ptr [ebp-4H], eax
        cmp     dword ptr [ebp-4H], 0
        jge     __3533
        mov     dword ptr [ebp-4H], 0

__3533:
        cmp     dword ptr [ebp-4H], 9
        jle     __3534
        mov     dword ptr [ebp-4H], 9

__3534:
        sub     esp, 8
        mov     eax, offset __adigid
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-0CH]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__adigid]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __tdigit
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-0CH]
        imul    ebx, ebx, 27
        add     ebx, dword ptr [ebp+18H]
        sub     ebx, 27
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-0CH]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-0CH]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+28H]
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-0CH]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 28
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-0CH]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, offset __adigid
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-0CH]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adigid]
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-0CH]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, offset __adigid
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-0CH]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adigid]
        mov     ebx, dword ptr [ebx]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __adigid
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-0CH]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__adigid]
        mov     esi, dword ptr [esi]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-0CH], -1

__3531:
        cmp     dword ptr [ebp-0CH], 1
        jge     __3532

__352:
        mov     eax, 0
        jmp     __350_leave

__350_leave:
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     24
__fmakecounter ENDP

__fupdatedigits PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tdigit
        call    ___bbObjEachFirst
        and     eax, eax
        je      __354

__3535:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __3536
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3536:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __3537
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3537:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        je      __3538
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jne     __3539
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __3540
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 1
        jmp     __3541

__3542:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__3541:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3542

__355:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        imul    ebx, ebx, 3
        add     ebx, 7
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        jmp     __3543

__3540:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 1
        jmp     __3544

__3545:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__3544:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3545

__356:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     ebx, esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        imul    ebx, ebx, 3
        add     ebx, 9
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3543:
        jmp     __3546

__3539:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 4
        jne     __3547
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jge     __3548
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        jmp     __3549

__3548:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     esi, dword ptr [esi]
        cmp     ebx, esi
        jle     __3550
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 20
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        jmp     __3551

__3550:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3551:

__3549:
        jmp     __3552

__3547:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3552:

__3546:
        jmp     __3553

__3538:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3553:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3535

__354:
        mov     eax, 0
        jmp     __353_leave

__353_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fupdatedigits ENDP

__fdrawdigits PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tdigit
        call    ___bbObjEachFirst
        and     eax, eax
        je      __358

__3554:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 28
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amorph_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3554

__358:
        mov     eax, 0
        jmp     __357_leave

__357_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdrawdigits ENDP

__fdo_flip PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 4
        mov     eax, 500
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vframerate]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-4H], eax
        mov     eax, ebx
        call    __fmillisecs
        mov     ebx, eax
        mov     eax, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vtimery]
        cmp     ebx, eax
        jge     __3555
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vframerate], 60

__3555:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fflip
        jmp     __3557

__3557:

__3556:
        mov     eax, 1000
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vframerate]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-4H], eax
        mov     eax, ebx
        call    __fmillisecs
        mov     ebx, eax
        mov     eax, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vtimery]
        cmp     ebx, eax
        jl      __3556

__360:
        mov     eax, 1200
; Note: Memory operand is misaligned. Performance penalty
        mov     ecx, dword ptr [__vframerate]
        cdq
        idiv    ecx
        mov     dword ptr [ebp-4H], eax
        mov     eax, ebx
        call    __fmillisecs
        mov     ebx, eax
        mov     eax, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vtimery]
        cmp     ebx, eax
        jle     __3558
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vframerate], 30
        sub     esp, 4
        call    __ffrontbuffer
        mov     dword ptr [esp], eax
        call    __fsetbuffer
        sub     esp, 16
        mov     dword ptr [esp+8H], 2
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 2
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vslow_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 4
        call    __fbackbuffer
        mov     dword ptr [esp], eax
        call    __fsetbuffer

__3558:
        call    __fmillisecs
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vtimery], eax
        mov     eax, 0
        jmp     __359_leave

__359_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdo_flip ENDP

__fload_explosion PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        cmp     dword ptr [ebp+14H], 20
        jge     __3559
        sub     esp, 28
        mov     eax, offset __3560
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __3561
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3562

__3559:
        cmp     dword ptr [ebp+14H], 40
        jge     __3563
        sub     esp, 28
        mov     eax, offset __3564
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        sub     ebx, 20
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __3565
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     ebx, dword ptr [ebp+14H]
        sub     ebx, 20
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexofx]
        mov     ebx, dword ptr [ebx]
        sar     ebx, 1
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp+14H]
        sub     esi, 20
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexofy]
        mov     esi, dword ptr [esi]
        sar     esi, 1
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3566

__3563:
        sub     esp, 28
        mov     eax, offset __3567
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        sub     ebx, 40
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __3568
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     ebx, dword ptr [ebp+14H]
        sub     ebx, 40
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexofx]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        mov     esi, dword ptr [ebp+14H]
        sub     esi, 40
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexofy]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp+8H], esi
        mov     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3566:

__3562:
        mov     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexplosion_loaded]
        mov     dword ptr [esi], ebx
        mov     eax, 0
        jmp     __361_leave

__361_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fload_explosion ENDP

__fload_enemy PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 4
        mov     dword ptr [ebp-4H], 0
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3569
        mov     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_loaded]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __3571
        cmp     dword ptr [ebp-4H], 2
        je      __3572
        cmp     dword ptr [ebp-4H], 3
        je      __3573
        cmp     dword ptr [ebp-4H], 4
        je      __3574
        cmp     dword ptr [ebp-4H], 5
        je      __3575
        cmp     dword ptr [ebp-4H], 6
        je      __3576
        cmp     dword ptr [ebp-4H], 7
        je      __3577
        cmp     dword ptr [ebp-4H], 8
        je      __3578
        cmp     dword ptr [ebp-4H], 9
        je      __3579
        cmp     dword ptr [ebp-4H], 10
        je      __3580
        cmp     dword ptr [ebp-4H], 11
        je      __3581
        cmp     dword ptr [ebp-4H], 12
        je      __3582
        cmp     dword ptr [ebp-4H], 13
        je      __3583
        cmp     dword ptr [ebp-4H], 14
        je      __3584
        cmp     dword ptr [ebp-4H], 15
        je      __3585
        cmp     dword ptr [ebp-4H], 16
        je      __3586
        cmp     dword ptr [ebp-4H], 17
        je      __3587
        cmp     dword ptr [ebp-4H], 18
        je      __3588
        cmp     dword ptr [ebp-4H], 19
        je      __3589
        cmp     dword ptr [ebp-4H], 20
        je      __3590
        cmp     dword ptr [ebp-4H], 21
        je      __3591
        cmp     dword ptr [ebp-4H], 22
        je      __3592
        cmp     dword ptr [ebp-4H], 23
        je      __3593
        cmp     dword ptr [ebp-4H], 24
        je      __3594
        cmp     dword ptr [ebp-4H], 25
        je      __3595
        cmp     dword ptr [ebp-4H], 26
        je      __3596
        cmp     dword ptr [ebp-4H], 27
        je      __3597
        cmp     dword ptr [ebp-4H], 28
        je      __3598
        cmp     dword ptr [ebp-4H], 29
        je      __3599
        cmp     dword ptr [ebp-4H], 30
        je      __3600
        cmp     dword ptr [ebp-4H], 31
        je      __3601
        cmp     dword ptr [ebp-4H], 32
        je      __3602
        cmp     dword ptr [ebp-4H], 33
        je      __3603
        cmp     dword ptr [ebp-4H], 34
        je      __3604
        cmp     dword ptr [ebp-4H], 35
        je      __3605
        cmp     dword ptr [ebp-4H], 36
        je      __3606
        cmp     dword ptr [ebp-4H], 37
        je      __3607
        cmp     dword ptr [ebp-4H], 38
        je      __3608
        cmp     dword ptr [ebp-4H], 39
        je      __3609
        cmp     dword ptr [ebp-4H], 40
        je      __3610
        cmp     dword ptr [ebp-4H], 41
        je      __3611
        cmp     dword ptr [ebp-4H], 42
        je      __3612
        cmp     dword ptr [ebp-4H], 43
        je      __3613
        cmp     dword ptr [ebp-4H], 44
        je      __3614
        cmp     dword ptr [ebp-4H], 45
        je      __3615
        cmp     dword ptr [ebp-4H], 46
        je      __3616
        cmp     dword ptr [ebp-4H], 47
        je      __3617
        cmp     dword ptr [ebp-4H], 48
        je      __3618
        cmp     dword ptr [ebp-4H], 49
        je      __3619
        cmp     dword ptr [ebp-4H], 50
        je      __3620
        cmp     dword ptr [ebp-4H], 51
        je      __3621
        cmp     dword ptr [ebp-4H], 52
        je      __3622
        cmp     dword ptr [ebp-4H], 53
        je      __3623
        cmp     dword ptr [ebp-4H], 54
        je      __3624
        cmp     dword ptr [ebp-4H], 55
        je      __3625
        cmp     dword ptr [ebp-4H], 56
        je      __3626
        cmp     dword ptr [ebp-4H], 57
        je      __3627
        cmp     dword ptr [ebp-4H], 58
        je      __3628
        cmp     dword ptr [ebp-4H], 59
        je      __3629
        cmp     dword ptr [ebp-4H], 60
        je      __3630
        cmp     dword ptr [ebp-4H], 61
        je      __3631
        cmp     dword ptr [ebp-4H], 62
        je      __3632
        cmp     dword ptr [ebp-4H], 63
        je      __3633
        cmp     dword ptr [ebp-4H], 64
        je      __3634
        cmp     dword ptr [ebp-4H], 65
        je      __3635
        cmp     dword ptr [ebp-4H], 66
        je      __3636
        cmp     dword ptr [ebp-4H], 67
        je      __3637
        cmp     dword ptr [ebp-4H], 68
        je      __3638
        cmp     dword ptr [ebp-4H], 69
        je      __3639
        cmp     dword ptr [ebp-4H], 70
        je      __3640
        cmp     dword ptr [ebp-4H], 71
        je      __3641
        jmp     __3570

__3571:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 35
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        mov     eax, offset __3642
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3572:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 206
        mov     dword ptr [esp+4H], 190
        sub     esp, 4
        mov     eax, offset __3643
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3573:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 109
        mov     dword ptr [esp+4H], 100
        sub     esp, 4
        mov     eax, offset __3644
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3574:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 35
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        mov     eax, offset __3645
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3575:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+8H], 76
        mov     dword ptr [esp+4H], 66
        sub     esp, 4
        mov     eax, offset __3646
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3576:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+8H], 76
        mov     dword ptr [esp+4H], 66
        sub     esp, 4
        mov     eax, offset __3647
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3577:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 47
        mov     dword ptr [esp+4H], 46
        sub     esp, 4
        mov     eax, offset __3648
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 7
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 30
        mov     dword ptr [esp+4H], 52
        sub     esp, 4
        mov     eax, offset __3649
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsquidbottom_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3578:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 103
        mov     dword ptr [esp+4H], 106
        sub     esp, 4
        mov     eax, offset __3650
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3579:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 92
        mov     dword ptr [esp+4H], 88
        sub     esp, 4
        mov     eax, offset __3651
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 9
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 60
        mov     dword ptr [esp+4H], 104
        sub     esp, 4
        mov     eax, offset __3652
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_squidbottom_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3580:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 18
        mov     dword ptr [esp+8H], 101
        mov     dword ptr [esp+4H], 72
        sub     esp, 4
        mov     eax, offset __3653
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3581:
        sub     esp, 8
        mov     eax, offset __3654
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3582:
        sub     esp, 8
        mov     eax, offset __3655
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 12
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 12
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 12
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3583:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 146
        mov     dword ptr [esp+4H], 190
        sub     esp, 4
        mov     eax, offset __3656
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 13
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 13
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 13
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3584:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 152
        mov     dword ptr [esp+4H], 244
        sub     esp, 4
        mov     eax, offset __3657
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 14
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 14
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 14
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3585:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 86
        mov     dword ptr [esp+4H], 55
        sub     esp, 4
        mov     eax, offset __3658
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 15
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 15
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 15
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3586:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+8H], 56
        mov     dword ptr [esp+4H], 60
        sub     esp, 4
        mov     eax, offset __3659
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 16
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
        mov     eax, 16
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 16
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3587:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 32
        mov     dword ptr [esp+8H], 43
        mov     dword ptr [esp+4H], 44
        sub     esp, 4
        mov     eax, offset __3660
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 17
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 17
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 17
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3588:
        sub     esp, 8
        mov     eax, offset __3661
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 18
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 18
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 18
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3589:
        sub     esp, 8
        mov     eax, offset __3662
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 19
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        jmp     __3570

__3590:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 119
        mov     dword ptr [esp+4H], 136
        sub     esp, 4
        mov     eax, offset __3663
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 20
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 20
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 20
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3591:
        sub     esp, 8
        mov     eax, offset __3664
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 21
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 21
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 21
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3592:
        sub     esp, 8
        mov     eax, offset __3665
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 22
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 22
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp+8H], 33
        mov     eax, 22
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3570

__3593:
        sub     esp, 8
        mov     eax, offset __3666
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 23
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 23
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp+8H], 61
        mov     eax, 23
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3570

__3594:
        sub     esp, 8
        mov     eax, offset __3667
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 24
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 24
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp+8H], 90
        mov     eax, 24
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3570

__3595:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 212
        mov     dword ptr [esp+4H], 128
        sub     esp, 4
        mov     eax, offset __3668
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 25
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 25
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 64
        mov     dword ptr [esp+8H], 100
        mov     eax, 25
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3570

__3596:
        sub     esp, 8
        mov     eax, offset __3669
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 26
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 26
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 26
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3597:
        sub     esp, 8
        mov     eax, offset __3670
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 27
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 27
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 27
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3598:
        sub     esp, 8
        mov     eax, offset __3671
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 28
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 28
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 28
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3599:
        sub     esp, 8
        mov     eax, offset __3672
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 29
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 29
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 29
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3600:
        sub     esp, 8
        mov     eax, offset __3673
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 30
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 30
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 30
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3601:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 130
        mov     dword ptr [esp+4H], 102
        sub     esp, 4
        mov     eax, offset __3674
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 31
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 31
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 31
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3602:
        sub     esp, 8
        mov     eax, offset __3675
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 32
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 32
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 32
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3603:
        sub     esp, 8
        mov     eax, offset __3676
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 33
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 33
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 33
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3604:
        sub     esp, 8
        mov     eax, offset __3677
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 34
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 34
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 34
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3605:
        sub     esp, 8
        mov     eax, offset __3678
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 35
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 35
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 35
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3606:
        sub     esp, 8
        mov     eax, offset __3679
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 36
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 36
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 36
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3607:
        sub     esp, 8
        mov     eax, offset __3680
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 37
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 37
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 37
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3608:
        sub     esp, 8
        mov     eax, offset __3681
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 38
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 38
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 38
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3609:
        sub     esp, 8
        mov     eax, offset __3682
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 39
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 39
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 39
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3610:
        sub     esp, 8
        mov     eax, offset __3683
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 40
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 40
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 40
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3611:
        sub     esp, 8
        mov     eax, offset __3684
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 41
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 41
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 41
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3612:
        sub     esp, 8
        mov     eax, offset __3685
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 42
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 42
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 42
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3613:
        sub     esp, 8
        mov     eax, offset __3686
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 43
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 43
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 43
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3614:
        sub     esp, 8
        mov     eax, offset __3687
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 44
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 44
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 44
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3615:
        sub     esp, 8
        mov     eax, offset __3688
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 45
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 45
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 45
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3616:
        sub     esp, 8
        mov     eax, offset __3689
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 46
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 46
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 46
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3617:
        sub     esp, 8
        mov     eax, offset __3690
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 47
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 47
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 47
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3618:
        sub     esp, 8
        mov     eax, offset __3691
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 48
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 48
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 48
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3619:
        sub     esp, 8
        mov     eax, offset __3692
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 49
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 49
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 49
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3620:
        sub     esp, 8
        mov     eax, offset __3693
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 50
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 50
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 50
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3621:
        sub     esp, 8
        mov     eax, offset __3694
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 51
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 51
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 51
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3622:
        sub     esp, 8
        mov     eax, offset __3695
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 52
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 52
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 52
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3623:
        sub     esp, 8
        mov     eax, offset __3696
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 53
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 53
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 53
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3624:
        sub     esp, 8
        mov     eax, offset __3697
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 54
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 54
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 54
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3625:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 16
        mov     dword ptr [esp+8H], 32
        mov     dword ptr [esp+4H], 44
        sub     esp, 4
        mov     eax, offset __3698
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 55
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 55
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 55
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3626:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 51
        mov     dword ptr [esp+4H], 156
        sub     esp, 4
        mov     eax, offset __3699
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 56
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 56
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 56
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3627:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 113
        mov     dword ptr [esp+4H], 285
        sub     esp, 4
        mov     eax, offset __3700
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 57
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 57
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 57
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3628:
        sub     esp, 8
        mov     eax, offset __3701
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 58
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 58
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 58
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3629:
        sub     esp, 8
        mov     eax, offset __3702
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 59
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 59
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 59
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3630:
        sub     esp, 8
        mov     eax, offset __3703
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 60
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 60
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 60
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3631:
        sub     esp, 8
        mov     eax, offset __3704
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 61
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 61
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 61
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3632:
        sub     esp, 8
        mov     eax, offset __3705
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 62
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 62
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 62
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3633:
        sub     esp, 8
        mov     eax, offset __3706
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 63
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 63
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 63
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3634:
        sub     esp, 8
        mov     eax, offset __3707
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 64
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 64
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 64
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3635:
        sub     esp, 8
        mov     eax, offset __3708
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 65
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 65
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 65
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3636:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 112
        mov     dword ptr [esp+4H], 88
        sub     esp, 4
        mov     eax, offset __3709
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 66
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 66
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 66
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 60
        mov     dword ptr [esp+4H], 104
        sub     esp, 4
        mov     eax, offset __3710
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlaser_squidbottom_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        jmp     __3570

__3637:
        sub     esp, 8
        mov     eax, offset __3711
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 67
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 67
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 67
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3638:
        sub     esp, 8
        mov     eax, offset __3712
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 68
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 68
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 68
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3639:
        sub     esp, 8
        mov     eax, offset __3713
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 69
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 69
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 69
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3640:
        sub     esp, 8
        mov     eax, offset __3714
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 70
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 0
        mov     eax, 70
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 70
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3641:
        sub     esp, 8
        mov     eax, offset __3715
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 71
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 71
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 71
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __3570

__3570:

__3569:
        mov     eax, 0
        jmp     __362_leave

__362_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fload_enemy ENDP

__fload_font PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fautomidhandle
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 9
        jge     __3716
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __3718
        cmp     dword ptr [ebp-4H], 2
        je      __3719
        cmp     dword ptr [ebp-4H], 3
        je      __3720
        jmp     __3717

__3718:
        sub     esp, 28
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __3721
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp], ebx
        sub     esp, 4
        mov     eax, offset __3722
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp+4H], eax
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 52
        mov     dword ptr [esp+8H], 36
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        call    __fmaskimage
        jmp     __3717

__3719:
        sub     esp, 28
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __3723
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp], ebx
        sub     esp, 4
        mov     eax, offset __3724
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp+4H], eax
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 52
        mov     dword ptr [esp+8H], 36
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        call    __fmaskimage
        jmp     __3717

__3720:
        sub     esp, 28
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __3725
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp], ebx
        sub     esp, 4
        mov     eax, offset __3726
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp+4H], eax
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 52
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 18
        sub     esp, 4
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, esi, 3
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 3
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
        call    __fmaskimage
        jmp     __3717

__3717:
        jmp     __3727

__3716:
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx

__3727:
        mov     eax, 0
        jmp     __364_leave

__364_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fload_font ENDP

__ffree_font PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __3728
        mov     ebx, 9
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx

__3728:
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jle     __3729
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vunload], 0
        jne     __3730
        sub     esp, 4
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+14H]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp+14H]
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     esi, 0
        mov     dword ptr [ebx], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx

__3730:

__3729:
        mov     eax, 0
        jmp     __366_leave

__366_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__ffree_font ENDP

__ffastload_font PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 16
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        call    __fzzz
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fautomidhandle
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        je      __3731
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __3733
        cmp     dword ptr [ebp-4H], 2
        je      __3734
        cmp     dword ptr [ebp-4H], 3
        je      __3735
        jmp     __3732

__3733:
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     dword ptr [ebp-8H], ebx
        jmp     __3737

__3736:
        sub     esp, 28
        mov     eax, offset __3738
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __3739
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 52
        mov     dword ptr [esp+8H], 36
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 10
        sub     eax, dword ptr [ebp-8H]
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        call    __fmaskimage
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3740
        sub     esp, 8
        mov     eax, offset __3741
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fruntimeerror

__3740:
        add     dword ptr [ebp-8H], 1

__3737:
        cmp     dword ptr [ebp-8H], 10
        jl      __3736

__369:
        jmp     __3732

__3734:
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     dword ptr [ebp-8H], ebx
        jmp     __3743

__3742:
        sub     esp, 28
        mov     eax, offset __3744
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __3745
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 52
        mov     dword ptr [esp+8H], 36
        mov     dword ptr [esp+4H], 32
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 10
        sub     eax, dword ptr [ebp-8H]
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        call    __fmaskimage
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3746
        sub     esp, 8
        mov     eax, offset __3747
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fruntimeerror

__3746:
        add     dword ptr [ebp-8H], 1

__3743:
        cmp     dword ptr [ebp-8H], 10
        jl      __3742

__370:
        jmp     __3732

__3735:
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     dword ptr [ebp-8H], ebx
        jmp     __3749

__3748:
        sub     esp, 28
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __3750
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp], ebx
        sub     esp, 4
        mov     eax, offset __3751
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp+4H], eax
        mov     eax, ebx
        call    ___bbStrConcat
        mov     ebx, eax
        mov     dword ptr [esp+4H], ebx
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrStore
        sub     esp, 28
        mov     eax, offset __3752
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __3753
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 52
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 18
        sub     esp, 4
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, esi, 3
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 10
        sub     eax, dword ptr [ebp-8H]
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 3
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 248
        call    __fmaskimage
        mov     ebx, 10
        sub     ebx, dword ptr [ebp-8H]
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3754
        sub     esp, 8
        mov     eax, offset __3755
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fruntimeerror

__3754:
        add     dword ptr [ebp-8H], 1

__3749:
        cmp     dword ptr [ebp-8H], 10
        jl      __3748

__371:
        jmp     __3732

__3732:
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx

__3731:
        mov     eax, 0
        jmp     __367_leave

__367_leave:
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__ffastload_font ENDP

__ffastfree_font PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        call    __fzzz
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 10
        jne     __3756
        mov     ebx, 9
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx

__3756:
        jmp     __3758

__3757:
        sub     esp, 4
        mov     eax, 10
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     eax, ebx
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+14H]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 10
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     esi, dword ptr [esi]
        sub     ebx, esi
        mov     esi, offset __afont_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp+14H]
        add     ebx, esi
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     esi, 0
        mov     dword ptr [ebx], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vunload], 1
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__afont_loaded]
        mov     dword ptr [esi], ebx

__3758:
        mov     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __3757

__373:
        mov     eax, 0
        jmp     __372_leave

__372_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__ffastfree_font ENDP

__ffree_all PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        call    __fzzz
        mov     dword ptr [ebp-4H], 1
        jmp     __3759

__3760:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __ffastfree_font
        add     dword ptr [ebp-4H], 1

__3759:
        cmp     dword ptr [ebp-4H], 3
        jle     __3760

__375:
        mov     dword ptr [ebp-4H], 1
        jmp     __3761

__3762:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aenemy_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3763
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aenemy_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_im]
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp-4H], 7
        jne     __3764
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsquidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsquidbottom_im], 0

__3764:
        cmp     dword ptr [ebp-4H], 9
        jne     __3765
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_squidbottom_im], 0

__3765:
        cmp     dword ptr [ebp-4H], 66
        jne     __3766
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlaser_squidbottom_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlaser_squidbottom_im], 0

__3766:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aenemy_loaded]
        mov     dword ptr [esi], ebx

__3763:
        add     dword ptr [ebp-4H], 1

__3761:
        cmp     dword ptr [ebp-4H], 71
        jle     __3762

__376:
        mov     dword ptr [ebp-4H], 1
        jmp     __3767

__3768:
        mov     dword ptr [ebp-8H], 1
        jmp     __3769

__3770:
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-4H]
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3771
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-4H]
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-4H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-4H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-4H]
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_active]
        mov     dword ptr [esi], ebx

__3771:
        add     dword ptr [ebp-8H], 1

__3769:
        cmp     dword ptr [ebp-8H], 99
        jle     __3770

__378:
        add     dword ptr [ebp-4H], 1

__3767:
        cmp     dword ptr [ebp-4H], 7
        jle     __3768

__377:
        mov     dword ptr [ebp-4H], 1
        jmp     __3772

__3773:
        mov     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aexplosion_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3774
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aexplosion_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexplosion_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aexplosion_loaded]
        mov     dword ptr [esi], ebx

__3774:
        add     dword ptr [ebp-4H], 1

__3772:
        cmp     dword ptr [ebp-4H], 60
        jle     __3773

__379:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbase_loaded], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbase_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbase_im], 0
        mov     eax, 0
        jmp     __374_leave

__374_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__ffree_all ENDP

__fload_hill PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 24
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        setl    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 20
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        or      eax, ebx
        and     eax, eax
        je      __3775
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3776
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 8
        je      __3778
        cmp     dword ptr [ebp-4H], 0
        je      __3779
        sub     esp, 44
        mov     eax, offset __3780
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3781
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3782
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3777

__3778:
        cmp     dword ptr [ebp+14H], 1
        jne     __3783
        sub     esp, 8
        mov     eax, offset __3784
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3783:
        cmp     dword ptr [ebp+14H], 2
        jne     __3785
        sub     esp, 8
        mov     eax, offset __3786
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3785:
        jmp     __3777

__3779:
        sub     esp, 28
        mov     eax, offset __3787
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3788
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3777

__3777:
        mov     ebx, 1
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp+18H]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx

__3776:
        jmp     __3789

__3775:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __3790
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3791
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [ebp-0CH], ebx
        cmp     dword ptr [ebp-0CH], 8
        je      __3793
        cmp     dword ptr [ebp-0CH], 0
        je      __3794
        sub     esp, 44
        mov     eax, offset __3795
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3796
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+18H]
        sar     ebx, 1
        add     ebx, 1
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3797
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 0
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3792

__3793:
        cmp     dword ptr [ebp+14H], 1
        jne     __3798
        sub     esp, 8
        mov     eax, offset __3799
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3798:
        cmp     dword ptr [ebp+14H], 2
        jne     __3800
        sub     esp, 8
        mov     eax, offset __3801
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3800:
        cmp     dword ptr [ebp+14H], 3
        jne     __3802
        sub     esp, 8
        mov     eax, offset __3803
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3802:
        jmp     __3792

__3794:
        sub     esp, 28
        mov     eax, offset __3804
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3805
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 0
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3792

__3792:
        mov     ebx, 1
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp+18H]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx

__3791:
        jmp     __3806

__3790:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __3807
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3808
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 8
        je      __3810
        cmp     dword ptr [ebp-10H], 0
        je      __3811
        sub     esp, 44
        mov     eax, offset __3812
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3813
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3814
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 0
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     ebx, dword ptr [ebp+18H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__alayerxoff]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        push    eax
        fild    dword ptr [esp]
        pop     eax
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [esp+8H], eax
        mov     dword ptr [esp+4H], 0
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3809

__3810:
        cmp     dword ptr [ebp+14H], 1
        jne     __3815
        sub     esp, 8
        mov     eax, offset __3816
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3815:
        cmp     dword ptr [ebp+14H], 2
        jne     __3817
        sub     esp, 8
        mov     eax, offset __3818
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3817:
        cmp     dword ptr [ebp+14H], 3
        jne     __3819
        sub     esp, 8
        mov     eax, offset __3820
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3819:
        cmp     dword ptr [ebp+14H], 4
        jne     __3821
        sub     esp, 8
        mov     eax, offset __3822
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3821:
        jmp     __3809

__3811:
        sub     esp, 28
        mov     eax, offset __3823
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3824
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 0
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3809

__3809:
        mov     ebx, 1
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp+18H]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx

__3808:
        jmp     __3825

__3807:
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jne     __3826
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [ebp-14H], ebx
        cmp     dword ptr [ebp-14H], 8
        je      __3828
        cmp     dword ptr [ebp-14H], 0
        je      __3829
        sub     esp, 44
        mov     eax, offset __3830
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3831
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3832
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp+18H]
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3827

__3828:
        cmp     dword ptr [ebp+14H], 1
        jne     __3833
        sub     esp, 8
        mov     eax, offset __3834
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3833:
        cmp     dword ptr [ebp+14H], 2
        jne     __3835
        sub     esp, 8
        mov     eax, offset __3836
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 2
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3835:
        cmp     dword ptr [ebp+14H], 3
        jne     __3837
        sub     esp, 8
        mov     eax, offset __3838
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 3
        add     ebx, 3
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 3
        add     eax, 3
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage

__3837:
        jmp     __3827

__3829:
        sub     esp, 28
        mov     eax, offset __3839
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __3840
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, offset __ahill_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 0
        add     ebx, dword ptr [ebp+14H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 0
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 0
        add     eax, dword ptr [ebp+14H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        jmp     __3827

__3827:
        mov     ebx, 1
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp+18H]
        add     esi, dword ptr [ebp+14H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx

__3826:

__3825:

__3806:

__3789:
        mov     eax, 0
        jmp     __380_leave

__380_leave:
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     8
__fload_hill ENDP

__fkill_hills PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-4H], 0
        jmp     __3841

__3842:
        mov     dword ptr [ebp-8H], 0
        jmp     __3843

__3844:
        mov     ebx, offset __ahill_loaded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, dword ptr [ebp-8H]
        add     ebx, dword ptr [ebp-4H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahill_loaded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __3845
        mov     ebx, 0
        mov     esi, offset __ahill_loaded
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-8H]
        add     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_loaded]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __ahill_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, dword ptr [ebp-8H]
        add     eax, dword ptr [ebp-4H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-8H]
        add     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, offset __ahill_active
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    esi, dword ptr [ebp-8H]
        add     esi, dword ptr [ebp-4H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_active]
        mov     dword ptr [esi], ebx

__3845:
        add     dword ptr [ebp-8H], 1

__3843:
        cmp     dword ptr [ebp-8H], 8
        jle     __3844

__387:
        add     dword ptr [ebp-4H], 1

__3841:
        cmp     dword ptr [ebp-4H], 99
        jle     __3842

__386:
        mov     eax, 0
        jmp     __385_leave

__385_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fkill_hills ENDP

__fmake_score PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 16
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __tscores
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [ebp-8H], ebx
        cmp     dword ptr [ebp-8H], 100
        je      __3847
        cmp     dword ptr [ebp-8H], 150
        je      __3848
        cmp     dword ptr [ebp-8H], 200
        je      __3849
        cmp     dword ptr [ebp-8H], 250
        je      __3850
        cmp     dword ptr [ebp-8H], 500
        je      __3851
        cmp     dword ptr [ebp-8H], 1000
        je      __3852
        cmp     dword ptr [ebp-8H], 2500
        je      __3853
        jmp     __3846

__3847:
        mov     ebx, 0
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __3846

__3848:
        mov     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __3846

__3849:
        mov     ebx, 2
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __3846

__3850:
        mov     ebx, 3
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __3846

__3851:
        mov     ebx, 4
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        jmp     __3846

__3852:
        mov     ebx, 5
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 4294967266
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        jmp     __3846

__3853:
        mov     ebx, 6
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 4294967236
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        jmp     __3846

__3846:
        mov     ebx, dword ptr [ebp+20H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__adoubler]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jne     __3854
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ascores_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __tscores
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-0CH]
        sar     ebx, 1
        add     ebx, 8
        add     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 20
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx

__3854:
        mov     eax, 0
        jmp     __388_leave

__388_leave:
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fmake_score ENDP

__fload_base PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vbase_loaded], 0
        jne     __3855
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 76
        mov     dword ptr [esp+4H], 66
        sub     esp, 4
        mov     eax, offset __3856
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbase_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbase_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbase_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbase_loaded], 1

__3855:
        mov     eax, 0
        jmp     __390_leave

__390_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fload_base ENDP

__fexplosion_square PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        jmp     __3857

__3858:
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [ebp-8H], ebx
        jmp     __3859

__3860:
        sub     esp, 20
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 50
        call    __frand
        add     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 50
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        add     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 21
        call    __fmake_explosion
        add     dword ptr [ebp-8H], 80

__3859:
        mov     ebx, dword ptr [ebp+18H]
        add     ebx, dword ptr [ebp+20H]
        sub     ebx, 50
        cmp     dword ptr [ebp-8H], ebx
        jle     __3860

__393:
        add     dword ptr [ebp-4H], 80

__3857:
        mov     ebx, dword ptr [ebp+14H]
        add     ebx, dword ptr [ebp+1CH]
        sub     ebx, 50
        cmp     dword ptr [ebp-4H], ebx
        jle     __3858

__392:
        mov     eax, 0
        jmp     __391_leave

__391_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fexplosion_square ENDP

__fupdate_splinters PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        mov     eax, 0
        jmp     __394_leave

__394_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fupdate_splinters ENDP

__fdraw_splinters PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        mov     eax, 0
        jmp     __395_leave

__395_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdraw_splinters ENDP

__fnew_matrix PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        mov     eax, 0
        jmp     __396_leave

__396_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fnew_matrix ENDP

__fshatter PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        mov     eax, 0
        jmp     __397_leave

__397_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fshatter ENDP

__fhill_offset PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vcounter]
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, 1076677837
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        mov     ebx, 1069547520
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fdivp   st(1), st(0)
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 1135869952
        call    ___bbFMod
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__acost]
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1097859072
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fmulp   st(1), st(0)
        mov     dword ptr [ebp-8H], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1076677837
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp+14H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1070386381
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 1135869952
        mov     eax, ebx
        call    ___bbFMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1090519040
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     dword ptr [ebp-8H], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1076677837
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp+14H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1067030938
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 1135869952
        mov     eax, ebx
        call    ___bbFMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        mov     dword ptr [ebp-8H], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcounter]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, 1076677837
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        mov     esi, dword ptr [ebp+14H]
        push    esi
        fild    dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        mov     esi, 1084227584
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp], ebx
        mov     dword ptr [esp+4H], 1135869952
        mov     eax, ebx
        call    ___bbFMod
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__acost]
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1073741824
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fmulp   st(1), st(0)
        faddp   st(1), st(0)
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     dword ptr [ebp-4H], eax
        mov     eax, dword ptr [ebp-4H]
        jmp     __398_leave

        mov     eax, 0
        jmp     __398_leave

__398_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fhill_offset ENDP

__fmake_parachuter PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-4H], 1
        jmp     __3861

__3862:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tparachuter
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp+14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp+18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], -1082130432
        mov     dword ptr [esp+4H], 1065353216
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 10
        call    __frand
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 16
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1069547520
        mov     dword ptr [esp+4H], -1082130432
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        mov     ebx, 1000
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 24
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 2
        call    __frand
        cmp     eax, 1
        jne     __3863
        mov     ebx, 4294966296
        mov     esi, dword ptr [ebp-8H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx

__3863:
        add     dword ptr [ebp-4H], 1

__3861:
        cmp     dword ptr [ebp-4H], 1
        jle     __3862

__400:
        mov     eax, 0
        jmp     __399_leave

__399_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     8
__fmake_parachuter ENDP

__finit_level PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 44
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __3864
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fstopchannel
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fmikefreesound

__3864:
        sub     esp, 4
        mov     eax, offset __asethill
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __asethill
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asethill
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
        sub     esp, 4
        mov     eax, offset __alayer_block
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __alayer_block
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alayer_block
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyoffset], 1129447424
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], 1022739087
        mov     dword ptr [ebp-8H], 1
        jmp     __3865

__3866:
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tskystar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 1101004800
        mov     dword ptr [esp+4H], 1142784000
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1109393408
        mov     dword ptr [esp+4H], 1125515264
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-0CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-8H], 1

__3865:
        cmp     dword ptr [ebp-8H], 15
        jle     __3866

__402:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jge     __3867
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 2
        jne     __3868
        mov     ebx, 1
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayer_block]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayer_block]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 5
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayer_block]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayer_block]
        mov     dword ptr [esi], ebx

__3868:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __3869
        sub     esp, 8
        mov     eax, offset __3870
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-4H], eax

__3869:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirewait], 80
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 4
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 4
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 1
        jge     __3871
        mov     dword ptr [ebp-10H], 1

__3871:
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [ebp-8H], ebx
        jmp     __3872

__3873:
        mov     dword ptr [ebp-14H], 1
        jmp     __3874

__3875:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-14H], 1

__3874:
        cmp     dword ptr [ebp-14H], 8
        jle     __3875

__404:
        add     dword ptr [ebp-8H], 1

__3872:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3873

__403:
        mov     dword ptr [ebp-8H], 1
        jmp     __3876

__3877:
        mov     dword ptr [ebp-18H], 0

__l_401xsokx:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3878
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3878:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-1CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-18H]
        sub     eax, 1
        mov     dword ptr [ebp-18H], eax
        cmp     dword ptr [ebp-18H], 640
        jge     __3879
        jmp     __l_401xsokx

__3879:
        add     dword ptr [ebp-8H], 1

__3876:
        cmp     dword ptr [ebp-8H], 7
        jle     __3877

__405:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1140457472
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 1
        jmp     __3880

__3881:
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __407

__3882:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        mov     dword ptr [ebp-2CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-2CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, esi
        and     eax, eax
        je      __3883
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3884
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3884:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3883:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3885
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3885:
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3882

__407:
        add     dword ptr [ebp-8H], 1

__3880:
        cmp     dword ptr [ebp-8H], 200
        jle     __3881

__406:
        jmp     __3886

__3867:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __3887
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __3888
        sub     esp, 8
        mov     eax, offset __3889
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-4H], eax

__3888:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 3
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 1
        mov     ebx, 3
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vdifficulty]
        add     ebx, 3
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotspeed], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirewait], 80
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 1
        jge     __3890
        mov     dword ptr [ebp-10H], 1

__3890:
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [ebp-8H], ebx
        jmp     __3891

__3892:
        mov     dword ptr [ebp-14H], 1
        jmp     __3893

__3894:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-14H], 1

__3893:
        cmp     dword ptr [ebp-14H], 7
        jle     __3894

__409:
        add     dword ptr [ebp-8H], 1

__3891:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3892

__408:
        mov     dword ptr [ebp-8H], 1
        jmp     __3895

__3896:
        mov     dword ptr [ebp-18H], 0

__l_401xsokx2:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3897
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3897:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-1CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-18H]
        sub     eax, 1
        mov     dword ptr [ebp-18H], eax
        cmp     dword ptr [ebp-18H], 640
        jge     __3898
        jmp     __l_401xsokx2

__3898:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        add     dword ptr [ebp-8H], 1

__3895:
        cmp     dword ptr [ebp-8H], 7
        jle     __3896

__410:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1133641728
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1142128640
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 1
        jmp     __3899

__3900:
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __412

__3901:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        mov     dword ptr [ebp-2CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-2CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, esi
        and     eax, eax
        je      __3902
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3903
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3903:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3902:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3904
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3904:
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3901

__412:
        add     dword ptr [ebp-8H], 1

__3899:
        cmp     dword ptr [ebp-8H], 200
        jle     __3900

__411:
        jmp     __3905

__3887:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 15
        jge     __3906
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __3907
        sub     esp, 8
        mov     eax, offset __3908
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-4H], eax

__3907:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyoffset], 1134231552
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 1
        mov     ebx, 3
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vdifficulty]
        add     ebx, 3
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotspeed], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], -1124744561
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirewait], 80
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 1
        jge     __3909
        mov     dword ptr [ebp-10H], 1

__3909:
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [ebp-8H], ebx
        jmp     __3910

__3911:
        mov     dword ptr [ebp-14H], 1
        jmp     __3912

__3913:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-14H], 1

__3912:
        cmp     dword ptr [ebp-14H], 7
        jle     __3913

__414:
        add     dword ptr [ebp-8H], 1

__3910:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3911

__413:
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 7
        call    __fload_hill
        mov     dword ptr [ebp-8H], 1
        jmp     __3914

__3915:
        mov     dword ptr [ebp-18H], 0

__l_401xsokx3:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        cmp     dword ptr [ebp-8H], 7
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        cmp     dword ptr [ebp-18H], 500
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, ebx
        and     eax, eax
        je      __3916
        mov     ebx, 2
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3916:
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3917
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3917:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-1CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-18H]
        sub     eax, 1
        mov     dword ptr [ebp-18H], eax
        cmp     dword ptr [ebp-18H], 640
        jge     __3918
        jmp     __l_401xsokx3

__3918:
        add     dword ptr [ebp-8H], 1

__3914:
        cmp     dword ptr [ebp-8H], 7
        jle     __3915

__415:
        sub     esp, 8
        mov     dword ptr [esp], 3
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1143799808
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 11
        jne     __3919
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1131544576
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1136918528
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3919:
        mov     dword ptr [ebp-8H], 1
        jmp     __3920

__3921:
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __417

__3922:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        mov     dword ptr [ebp-2CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-2CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, esi
        and     eax, eax
        je      __3923
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3924
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3924:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3923:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3925
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3925:
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3922

__417:
        add     dword ptr [ebp-8H], 1

__3920:
        cmp     dword ptr [ebp-8H], 200
        jle     __3921

__416:
        jmp     __3926

__3906:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 20
        jge     __3927
        sub     esp, 4
        mov     dword ptr [esp], 4
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __3928
        sub     esp, 8
        mov     eax, offset __3929
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadsound
        mov     dword ptr [ebp-4H], eax

__3928:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfirewait], 40
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 6000
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 7
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 1
        mov     ebx, 4
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vdifficulty]
        add     ebx, 3
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotspeed], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], -1124744561
        mov     dword ptr [ebp-8H], 1
        jmp     __3930

__3931:
        sub     esp, 28
        mov     eax, offset __3932
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __3933
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-24H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmok_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmok_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        add     dword ptr [ebp-8H], 1

__3930:
        cmp     dword ptr [ebp-8H], 7
        jle     __3931

__418:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-10H], ebx
        cmp     dword ptr [ebp-10H], 1
        jge     __3934
        mov     dword ptr [ebp-10H], 1

__3934:
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [ebp-8H], ebx
        jmp     __3935

__3936:
        mov     dword ptr [ebp-14H], 1
        jmp     __3937

__3938:
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-14H], 1

__3937:
        cmp     dword ptr [ebp-14H], 7
        jle     __3938

__420:
        add     dword ptr [ebp-8H], 1

__3935:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-8H], ebx
        jle     __3936

__419:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        mov     dword ptr [ebp-8H], 0
        jmp     __3939

__3940:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-8H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 100

__3939:
        cmp     dword ptr [ebp-8H], 640
        jle     __3940

__421:
        mov     dword ptr [ebp-8H], 1
        jmp     __3941

__3942:
        mov     dword ptr [ebp-18H], 0

__l_401xsokx3gfd:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-18H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-8H]
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3943
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3943:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-1CH]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-1CH]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-18H]
        sub     eax, 1
        mov     dword ptr [ebp-18H], eax
        cmp     dword ptr [ebp-18H], 640
        jge     __3944
        jmp     __l_401xsokx3gfd

__3944:
        add     dword ptr [ebp-8H], 1

__3941:
        cmp     dword ptr [ebp-8H], 7
        jle     __3942

__422:

__3927:

__3926:

__3905:

__3886:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vrecording], 2
        je      __3945
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __floopsound
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fplaysound
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicchannel], eax
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__3945:
        mov     eax, 0
        jmp     __401_leave

__401_leave:
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-24H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-1CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__finit_level ENDP

__finit_title PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 44
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], 1
        sub     esp, 4
        mov     eax, offset __asethill
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 10
        mov     esi, offset __asethill
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __asethill
        mov     dword ptr [esp], eax
        call    ___bbDimArray
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
        sub     esp, 4
        mov     eax, offset __alayer_block
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 8
        mov     esi, offset __alayer_block
        add     esi, 12
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __alayer_block
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 450
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyoffset], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], 1022739087
        mov     dword ptr [ebp-4H], 1
        jmp     __3946

__3947:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tskystar
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 1101004800
        mov     dword ptr [esp+4H], 1142784000
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1109393408
        mov     dword ptr [esp+4H], 1125515264
        call    __frnd
        push    eax
        fistp   dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-4H], 1

__3946:
        cmp     dword ptr [ebp-4H], 15
        jle     __3947

__424:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 5
        jge     __3948
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 6
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 4
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        jne     __3949
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 5

__3949:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-0CH], ebx
        cmp     dword ptr [ebp-0CH], 1
        jge     __3950
        mov     dword ptr [ebp-0CH], 1

__3950:
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [ebp-4H], ebx
        jmp     __3951

__3952:
        mov     dword ptr [ebp-10H], 1
        jmp     __3953

__3954:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-10H], 1

__3953:
        cmp     dword ptr [ebp-10H], 7
        jle     __3954

__426:
        add     dword ptr [ebp-4H], 1

__3951:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-4H], ebx
        jle     __3952

__425:
        mov     dword ptr [ebp-4H], 1
        jmp     __3955

__3956:
        mov     dword ptr [ebp-14H], 0

__l_423xsokx:
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3957
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3957:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-18H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-14H]
        sub     eax, 1
        mov     dword ptr [ebp-14H], eax
        cmp     dword ptr [ebp-14H], 640
        jge     __3958
        jmp     __l_423xsokx

__3958:
        add     dword ptr [ebp-4H], 1

__3955:
        cmp     dword ptr [ebp-4H], 7
        jle     __3956

__427:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        jne     __3959
        mov     ebx, 99
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asethill]
        mov     dword ptr [esi], ebx

__3959:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1116538143
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1116471296
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3164854026
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3156465418
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskyoffset]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1125515264
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3960
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1124237967
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1126825984
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3173242634
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1142956196
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1124859904
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3173242634
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 3
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3960:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 3276275712
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1128792064
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-4H], 1
        jmp     __3961

__3962:
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __429

__3963:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        mov     dword ptr [ebp-2CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-2CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, esi
        and     eax, eax
        je      __3964
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3965
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3965:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3964:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3966
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3966:
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3963

__429:
        add     dword ptr [ebp-4H], 1

__3961:
        cmp     dword ptr [ebp-4H], 200
        jle     __3962

__428:
        jmp     __3967

__3948:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vlevel], 10
        jge     __3968
        sub     esp, 4
        mov     dword ptr [esp], 2
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 3
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotspeed], 1077936128
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-0CH], ebx
        cmp     dword ptr [ebp-0CH], 1
        jge     __3969
        mov     dword ptr [ebp-0CH], 1

__3969:
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [ebp-4H], ebx
        jmp     __3970

__3971:
        mov     dword ptr [ebp-10H], 1
        jmp     __3972

__3973:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-10H], 1

__3972:
        cmp     dword ptr [ebp-10H], 7
        jle     __3973

__431:
        add     dword ptr [ebp-4H], 1

__3970:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-4H], ebx
        jle     __3971

__430:
        mov     dword ptr [ebp-4H], 1
        jmp     __3974

__3975:
        mov     dword ptr [ebp-14H], 0

__l_423xsokx2:
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3976
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3976:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-18H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-14H]
        sub     eax, 1
        mov     dword ptr [ebp-14H], eax
        cmp     dword ptr [ebp-14H], 640
        jge     __3977
        jmp     __l_423xsokx2

__3977:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        add     dword ptr [ebp-4H], 1

__3974:
        cmp     dword ptr [ebp-4H], 7
        jle     __3975

__432:
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 0
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1133641728
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1142128640
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-4H], 1
        jmp     __3978

__3979:
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __434

__3980:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        mov     dword ptr [ebp-2CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-2CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, esi
        and     eax, eax
        je      __3981
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3982
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3982:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__3981:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3983
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__3983:
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __3980

__434:
        add     dword ptr [ebp-4H], 1

__3978:
        cmp     dword ptr [ebp-4H], 200
        jle     __3979

__433:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        cmp     eax, 1
        je      __3984
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1119159583
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1117782016
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3164854026
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3156465418
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1112148541
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1114636288
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3170222735
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3161834127
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        jmp     __3985

__3984:
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1125515264
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1124204544
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3156465418
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 3164854026
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 4
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3985:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vskyoffset]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __3986
        sub     esp, 8
        lea     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tmoon
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1141473280
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 1132068864
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 3173242634
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-1CH]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx

__3986:
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 5
        call    __frand
        cmp     eax, 1
        jne     __3987
        mov     dword ptr [ebp-4H], 0
        jmp     __3988

__3989:
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __tback_element
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 200
        mov     dword ptr [esp+4H], 480
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 12
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1090519040
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 24
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], -1102263091
        mov     dword ptr [esp+4H], 1045220557
        call    __frnd
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 28
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 3
        call    __frand
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-24H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 16
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 20
        mov     dword ptr [esi], ebx
        mov     ebx, 7
        mov     esi, dword ptr [ebp-24H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-4H], 1

__3988:
        cmp     dword ptr [ebp-4H], 15
        jle     __3989

__435:

__3987:
        jmp     __3990

__3968:
        sub     esp, 4
        mov     dword ptr [esp], 3
        call    __fload_level_images
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcounta], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighrand], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlowfront], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhighfront], 1
        mov     ebx, 3
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vdifficulty]
        add     ebx, 3
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vshotspeed], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vskyrise], -1124744561
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlowrand]
        mov     dword ptr [ebp-0CH], ebx
        cmp     dword ptr [ebp-0CH], 1
        jge     __3991
        mov     dword ptr [ebp-0CH], 1

__3991:
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [ebp-4H], ebx
        jmp     __3992

__3993:
        mov     dword ptr [ebp-10H], 1
        jmp     __3994

__3995:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        add     dword ptr [ebp-10H], 1

__3994:
        cmp     dword ptr [ebp-10H], 7
        jle     __3995

__437:
        add     dword ptr [ebp-4H], 1

__3992:
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        cmp     dword ptr [ebp-4H], ebx
        jle     __3993

__436:
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 7
        call    __fload_hill
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 8
        call    __fload_hill
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1120403456
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, 1133903872
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, 8
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-4H], 1
        jmp     __3996

__3997:
        mov     dword ptr [ebp-14H], 0

__l_423xsokx3:
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        mov     ebx, dword ptr [ebp-14H]
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __3998
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__3998:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-18H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        add     eax, dword ptr [ebp-14H]
        sub     eax, 1
        mov     dword ptr [ebp-14H], eax
        cmp     dword ptr [ebp-14H], 640
        jge     __3999
        jmp     __l_423xsokx3

__3999:
        add     dword ptr [ebp-4H], 1

__3996:
        cmp     dword ptr [ebp-4H], 7
        jle     __3997

__438:
        mov     dword ptr [ebp-4H], 1
        jmp     __4000

__4001:
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     dword ptr [esp], 0
        mov     dword ptr [esp+4H], 640
        call    __frand
        push    eax
        fild    dword ptr [esp]
        pop     eax
        push    eax
        fstp    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 7
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, dword ptr [ebp-18H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fload_hill
        sub     esp, 8
        mov     dword ptr [esp], 1
        mov     dword ptr [esp+4H], 5
        call    __frand
        cmp     eax, 1
        jne     __4002
        jmp     __439

__4002:
        add     dword ptr [ebp-4H], 1

__4000:
        cmp     dword ptr [ebp-4H], 15
        jle     __4001

__439:
        mov     dword ptr [ebp-4H], 1
        jmp     __4003

__4004:
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 4
        call    __frand
        mov     dword ptr [ebp-28H], eax
        sub     esp, 8
        mov     dword ptr [esp], 2
        mov     dword ptr [esp+4H], 7
        mov     eax, ebx
        call    __frand
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asethill]
        mov     dword ptr [ebx], eax
        add     dword ptr [ebp-4H], 1

__4003:
        cmp     dword ptr [ebp-4H], 3
        jle     __4004

__440:
        mov     dword ptr [ebp-4H], 1
        jmp     __4005

__4006:
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __thill
        call    ___bbObjEachFirst
        and     eax, eax
        je      __442

__4007:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 640
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setbe   al
        movzx   eax, al
        mov     dword ptr [ebp-28H], eax
        mov     dword ptr [ebp-2CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     esi, dword ptr [esi]
        add     esi, ebx
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ahill_im]
        mov     esi, dword ptr [esi]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    __fimagewidth
        mov     esi, eax
        mov     eax, dword ptr [ebp-2CH]
        mov     ebx, 640
        sub     ebx, esi
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     esi, dword ptr [esi]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__alayerxoff]
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, dword ptr [ebp-20H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     esi, dword ptr [esi]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        mov     eax, esi
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        and     eax, esi
        and     eax, eax
        je      __4008
        sub     esp, 8
        lea     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, offset __thill
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        push    eax
        fild    dword ptr [esp]
        pop     eax
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        faddp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 0
        mov     dword ptr [esi], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlowrand]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vhighrand]
        mov     dword ptr [esp+4H], ebx
        call    __frand
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     dword ptr [ebx], eax
        mov     ebx, dword ptr [ebp-18H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 1
        jge     __4009
        mov     ebx, 1
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx

__4009:
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, dword ptr [ebp-18H]
        mov     esi, dword ptr [esi]
        add     esi, 4
        mov     dword ptr [esi], ebx

__4008:
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 4
        mov     ebx, dword ptr [ebx]
        mov     esi, offset __ahill_im
        add     esi, 12
        mov     esi, dword ptr [esi]
        imul    ebx, esi
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 8
        mov     eax, dword ptr [eax]
        add     eax, ebx
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__ahill_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     ebx, 0
        sub     ebx, eax
        push    ebx
        fild    dword ptr [esp]
        pop     ebx
        mov     eax, dword ptr [ebp-20H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        fucompp
        fnstsw  ax
        sahf
        setb    al
        movzx   eax, al
        and     eax, eax
        je      __4010
        sub     esp, 4
        mov     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete

__4010:
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4007

__442:
        add     dword ptr [ebp-4H], 1

__4005:
        cmp     dword ptr [ebp-4H], 200
        jle     __4006

__441:

__3990:

__3967:
        mov     eax, 0
        jmp     __423_leave

__423_leave:
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-24H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-1CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-18H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-28H]
        mov     dword ptr [ebp-28H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-28H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__finit_title ENDP

__fsave_recording PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vlevel]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        mov     dword ptr [ebp-8H], 0
        jmp     __4011

__4012:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        mov     eax, offset __arecorded
        add     eax, 12
        mov     eax, dword ptr [eax]
        shl     eax, 0
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__arecorded]
        mov     eax, dword ptr [eax]
        cmp     eax, 255
        sete    al
        movzx   eax, al
        mov     dword ptr [ebp-0CH], eax
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        or      eax, ebx
        and     eax, eax
        je      __4013
        jmp     __444

__4013:
        add     dword ptr [ebp-8H], 1

__4011:
        cmp     dword ptr [ebp-8H], 8000
        jle     __4012

__444:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        mov     eax, 0
        jmp     __443_leave

__443_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fsave_recording ENDP

__fload_recording PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 16
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        sub     esp, 28
        mov     eax, offset __4014
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, offset __4015
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __freadfile
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlevel], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ais_active]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aweapon_count]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, offset __apod
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__apod]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbUndimArray
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 12
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        mov     esi, offset __apod
        add     esi, 16
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, offset __apod
        mov     dword ptr [esp], eax
        call    ___bbDimArray
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ais_active]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        cmp     dword ptr [ebp+14H], 5
        jne     __4016
        mov     ebx, 6
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 5000
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 0
        add     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        mov     esi, offset __apod
        add     esi, 12
        mov     esi, dword ptr [esi]
        shl     esi, 1
        add     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apod]
        mov     dword ptr [esi], ebx
        jmp     __4017

__4016:
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aweapon_count]
        mov     dword ptr [esi], ebx

__4017:
        mov     dword ptr [ebp-0CH], 0
        jmp     __4018

__4019:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     dword ptr [ebx], eax
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 0
        add     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4020
        jmp     __446

__4020:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __freadbyte
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     dword ptr [ebx], eax
        mov     ebx, offset __arecorded
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        shl     ebx, 1
        add     ebx, dword ptr [ebp-0CH]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__arecorded]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4021
        jmp     __446

__4021:
        add     dword ptr [ebp-0CH], 1

__4018:
        cmp     dword ptr [ebp-0CH], 8000
        jle     __4019

__446:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        mov     eax, 0
        jmp     __445_leave

__445_leave:
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-10H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fload_recording ENDP

__fchoose_key PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_down]
        mov     ebx, dword ptr [ebx]
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_left]
        mov     ebx, dword ptr [ebx]
        mov     esi, 3
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_right]
        mov     ebx, dword ptr [ebx]
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     ebx, dword ptr [ebx]
        mov     esi, 5
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_down]
        mov     ebx, dword ptr [ebx]
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_left]
        mov     ebx, dword ptr [ebx]
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_right]
        mov     ebx, dword ptr [ebx]
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     ebx, dword ptr [ebx]
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asigh]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-4H], 0
        mov     dword ptr [ebp-8H], 2
        jmp     __4022

__4023:
        sub     esp, 12
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__akeydes]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __4025
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrCompare
        cmp     eax, 0
        je      __4024
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fkeydown
        and     eax, eax
        je      __4026
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [ebp-4H], ebx

__4026:

__4024:
        add     dword ptr [ebp-8H], 1

__4022:
        cmp     dword ptr [ebp-8H], 221
        jle     __4023

__448:
        mov     dword ptr [ebp-8H], 1
        jmp     __4027

__4028:
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asigh]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp-4H]
        jne     __4029
        mov     dword ptr [ebp-4H], 0

__4029:
        add     dword ptr [ebp-8H], 1

__4027:
        cmp     dword ptr [ebp-8H], 10
        jle     __4028

__449:
        mov     eax, dword ptr [ebp-4H]
        jmp     __447_leave

        mov     eax, 0
        jmp     __447_leave

__447_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fchoose_key ENDP

__fwritedatafile PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 8
        mov     eax, offset __4030
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fwritefile
        mov     dword ptr [ebp-4H], eax
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcolour]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusic]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        push    ebx
        fistp   dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vbroken]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdemo_time_left]
        mov     dword ptr [esp+4H], ebx
        call    __fwriteint
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_down]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_left]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_right]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_down]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_left]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_right]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_fire]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vdifficulty]
        mov     dword ptr [esp+4H], ebx
        call    __fwritebyte
        mov     dword ptr [ebp-8H], 1
        jmp     __4031

__4032:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiscore]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp+4H], ebx
        call    __fwriteint
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ahiname]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    __fwritestring
        add     dword ptr [ebp-8H], 1

__4031:
        cmp     dword ptr [ebp-8H], 10
        jle     __4032

__451:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        mov     eax, 0
        jmp     __450_leave

__450_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fwritedatafile ENDP

IFDEF PATCHES
__fload_level_images PROC NEAR
        push 1
        call __fload_level_images_real
        push 2
        call __fload_level_images_real
        push 3
        call __fload_level_images_real
        push 4
        call __fload_level_images_real
        ret 4
__fload_level_images ENDP


__fload_level_images_real PROC NEAR
ELSE
__fload_level_images PROC NEAR
ENDIF
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 28
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __4034
        cmp     dword ptr [ebp-4H], 2
        je      __4035
        cmp     dword ptr [ebp-4H], 3
        je      __4036
        cmp     dword ptr [ebp-4H], 4
        je      __4037
        jmp     __4033

__4034:
        mov     dword ptr [ebp-8H], 1
        jmp     __4038

__4039:
        sub     esp, 28
        mov     eax, offset __4040
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __4041
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fimageheight
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+8H], ebx
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        add     dword ptr [ebp-8H], 1

__4038:
        cmp     dword ptr [ebp-8H], 4
        jle     __4039

__454:
        sub     esp, 8
        mov     eax, offset __4042
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        sar     eax, 1
        mov     dword ptr [esp+4H], eax
        mov     dword ptr [esp+8H], 0
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     ebx, dword ptr [ebx]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fhandleimage
        mov     ebx, eax
        sub     esp, 4
        mov     dword ptr [esp], 0
        call    __fautomidhandle
        sub     esp, 8
        mov     eax, offset __4043
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall_im], eax
        sub     esp, 8
        mov     eax, offset __4044
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall_top_im], eax
        sub     esp, 8
        mov     eax, offset __4045
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall2_im], eax
        sub     esp, 8
        mov     eax, offset __4046
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall2_top_im], eax
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fautomidhandle
        jmp     __4033

__4035:
        sub     esp, 8
        mov     eax, offset __4047
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 9
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4048
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 10
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4049
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 11
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4050
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 12
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 12
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 12
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4051
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4052
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 13
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 13
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 13
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4053
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 4
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4054
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfrayed_body_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __4055
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfrayed_body2_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body2_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body2_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __4056
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhomer1_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer1_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer1_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __4057
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhomer2_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer2_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer2_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 8
        mov     eax, offset __4058
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__varm1_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm1_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm1_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4059
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__varm2_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm2_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm2_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4060
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbomb_balloon_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_balloon_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_balloon_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4061
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vballoon_bomb_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vballoon_bomb_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vballoon_bomb_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4062
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbomb_tye_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_tye_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_tye_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4063
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbomb_rope_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_rope_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_rope_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 3
        mov     dword ptr [esp+8H], 28
        mov     dword ptr [esp+4H], 90
        sub     esp, 4
        mov     eax, offset __4064
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 7
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        jmp     __4033

__4036:
        mov     dword ptr [ebp-8H], 1
        jmp     __4065

__4066:
        sub     esp, 28
        mov     eax, offset __4067
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __4068
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__asmoke_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        add     dword ptr [ebp-8H], 1

__4065:
        cmp     dword ptr [ebp-8H], 5
        jle     __4066

__455:
        mov     dword ptr [ebp-8H], 1
        jmp     __4069

__4070:
        mov     dword ptr [ebp-14H], 3
        jmp     __4071

__4072:
        sub     esp, 44
        mov     eax, offset __4073
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __4074
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __4075
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        mov     ebx, dword ptr [ebp-14H]
        sub     ebx, 3
        imul    ebx, ebx, 3
        add     ebx, 13
        add     ebx, dword ptr [ebp-8H]
        mov     dword ptr [ebp-18H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-18H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-18H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, dword ptr [ebp-18H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        add     dword ptr [ebp-14H], 1

__4071:
        cmp     dword ptr [ebp-14H], 7
        jle     __4072

__457:
        add     dword ptr [ebp-8H], 1

__4069:
        cmp     dword ptr [ebp-8H], 3
        jle     __4070

__456:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+4H], 148
        sub     esp, 4
        mov     eax, offset __4076
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 29
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 74
        mov     dword ptr [esp+8H], 200
        mov     eax, 29
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 113
        mov     dword ptr [esp+4H], 83
        sub     esp, 4
        mov     eax, offset __4077
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 30
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 41
        mov     dword ptr [esp+8H], 113
        mov     eax, 30
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 84
        mov     dword ptr [esp+4H], 62
        sub     esp, 4
        mov     eax, offset __4078
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 31
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 31
        mov     dword ptr [esp+8H], 84
        mov     eax, 31
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 64
        mov     dword ptr [esp+4H], 47
        sub     esp, 4
        mov     eax, offset __4079
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 32
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 23
        mov     dword ptr [esp+8H], 64
        mov     eax, 32
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 48
        mov     dword ptr [esp+4H], 35
        sub     esp, 4
        mov     eax, offset __4080
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 33
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 17
        mov     dword ptr [esp+8H], 48
        mov     eax, 33
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 35
        mov     dword ptr [esp+4H], 26
        sub     esp, 4
        mov     eax, offset __4081
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 34
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 13
        mov     dword ptr [esp+8H], 35
        mov     eax, 34
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 37
        mov     dword ptr [esp+4H], 44
        sub     esp, 4
        mov     eax, offset __4082
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 35
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 35
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 5
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 24
        sub     esp, 4
        mov     eax, offset __4083
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 36
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 36
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        mov     dword ptr [ebp-8H], 1
        jmp     __4084

__4085:
        sub     esp, 28
        mov     eax, offset __4086
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __4087
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 36
        add     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 36
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        add     dword ptr [ebp-8H], 1

__4084:
        cmp     dword ptr [ebp-8H], 7
        jle     __4085

__458:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 39
        mov     dword ptr [esp+4H], 29
        sub     esp, 4
        mov     eax, offset __4088
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
        mov     ebx, 44
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 44
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4089
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 45
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__aback_im]
        mov     dword ptr [ebx], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
        mov     eax, 45
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     eax, 45
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 13
        mov     dword ptr [esp+4H], 198
        sub     esp, 4
        mov     eax, offset __4090
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwake_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwake_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 13
        mov     dword ptr [esp+4H], 396
        sub     esp, 4
        mov     eax, offset __4091
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_wake_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_wake_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 13
        mov     dword ptr [esp+4H], 640
        sub     esp, 4
        mov     eax, offset __4092
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbigger_wake_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigger_wake_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 2
        mov     dword ptr [esp+8H], 40
        mov     dword ptr [esp+4H], 37
        sub     esp, 4
        mov     eax, offset __4093
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlauncher_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlauncher_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlauncher_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4094
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 5
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4095
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 6
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4096
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 7
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4097
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 8
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 8
        mov     eax, offset __4098
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, 9
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__amoon_im]
        mov     dword ptr [ebx], eax
        sub     esp, 4
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        mov     dword ptr [ebp-8H], 1
        jmp     __4099

__4100:
        sub     esp, 28
        mov     eax, offset __4101
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrFromInt
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, offset __4102
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
        mov     ebx, dword ptr [ebp-8H]
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__awater_im]
        mov     dword ptr [ebx], eax
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [esp+8H], eax
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fhandleimage
        add     dword ptr [ebp-8H], 1

__4099:
        cmp     dword ptr [ebp-8H], 3
        jle     __4100

__459:
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 4
        mov     dword ptr [esp+8H], 20
        mov     dword ptr [esp+4H], 65
        sub     esp, 4
        mov     eax, offset __4103
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwater_spray_im], eax
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmidhandle
        sub     esp, 4
        mov     dword ptr [esp], 0
        call    __fautomidhandle
        sub     esp, 8
        mov     eax, offset __4104
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsub_back_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsub_back_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fautomidhandle
        jmp     __4033

__4037:
        sub     esp, 4
        mov     dword ptr [esp], 0
        call    __fautomidhandle
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 6
        mov     dword ptr [esp+8H], 113
        mov     dword ptr [esp+4H], 104
        sub     esp, 4
        mov     eax, offset __4105
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlast_boss_hatch_im], eax
        sub     esp, 16
        mov     dword ptr [esp+8H], 248
        mov     dword ptr [esp+0CH], 248
        mov     dword ptr [esp+4H], 248
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlast_boss_hatch_im]
        mov     dword ptr [esp], eax
        call    __fmaskimage
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 10
        mov     dword ptr [esp+8H], 43
        mov     dword ptr [esp+4H], 640
        sub     esp, 4
        mov     eax, offset __4106
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlightning_im], eax
        sub     esp, 20
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+10H], 10
        mov     dword ptr [esp+8H], 43
        mov     dword ptr [esp+4H], 640
        sub     esp, 4
        mov     eax, offset __4107
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fmikeloadanimimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__venemy_lightning_im], eax
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fautomidhandle
        jmp     __4033

__4033:
        mov     eax, 0
        jmp     __452_leave

__452_leave:
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
IFDEF PATCHES
__fload_level_images_real ENDP
ELSE
__fload_level_images ENDP
ENDIF

IFDEF PATCHES
__ffree_level_images PROC NEAR
        ret 4
__ffree_level_images ENDP

__ffree_level_images_real PROC NEAR
ELSE
__ffree_level_images PROC NEAR
ENDIF
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 16
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [ebp-4H], ebx
        cmp     dword ptr [ebp-4H], 1
        je      __4109
        cmp     dword ptr [ebp-4H], 2
        je      __4110
        cmp     dword ptr [ebp-4H], 3
        je      __4111
        cmp     dword ptr [ebp-4H], 4
        je      __4112
        jmp     __4108

__4109:
        mov     dword ptr [ebp-8H], 1
        jmp     __4113

__4114:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__4113:
        cmp     dword ptr [ebp-8H], 4
        jle     __4114

__462:
        sub     esp, 4
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall_top_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall_top_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall2_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall2_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwaterfall2_top_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwaterfall2_top_im], 0
        jmp     __4108

__4110:
        sub     esp, 4
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 10
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 10
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 11
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 11
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 12
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 12
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 13
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 13
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 4
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 4
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfrayed_body_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vfrayed_body2_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vfrayed_body2_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer1_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhomer1_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vhomer2_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vhomer2_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm1_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__varm1_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__varm2_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__varm2_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_balloon_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbomb_balloon_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vballoon_bomb_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vballoon_bomb_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_tye_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbomb_tye_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbomb_rope_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbomb_rope_im], 0
        sub     esp, 4
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        jmp     __4108

__4111:
        mov     dword ptr [ebp-8H], 1
        jmp     __4115

__4116:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__asmoke_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__asmoke_im]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__4115:
        cmp     dword ptr [ebp-8H], 5
        jle     __4116

__463:
        mov     dword ptr [ebp-8H], 1
        jmp     __4117

__4118:
        mov     dword ptr [ebp-0CH], 3
        jmp     __4119

__4120:
        mov     ebx, dword ptr [ebp-0CH]
        sub     ebx, 3
        imul    ebx, ebx, 3
        add     ebx, 13
        add     ebx, dword ptr [ebp-8H]
        mov     dword ptr [ebp-10H], ebx
        sub     esp, 4
        mov     eax, dword ptr [ebp-10H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-10H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-0CH], 1

__4119:
        cmp     dword ptr [ebp-0CH], 7
        jle     __4120

__465:
        add     dword ptr [ebp-8H], 1

__4117:
        cmp     dword ptr [ebp-8H], 3
        jle     __4118

__464:
        sub     esp, 4
        mov     eax, 29
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 29
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 30
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 30
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 31
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 31
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 32
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 32
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 33
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 33
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 34
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 34
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 35
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 35
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 36
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 36
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 1
        jmp     __4121

__4122:
        sub     esp, 4
        mov     eax, 36
        add     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 36
        add     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__4121:
        cmp     dword ptr [ebp-8H], 7
        jle     __4122

__466:
        sub     esp, 4
        mov     eax, 44
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 44
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 45
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__aback_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 45
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__aback_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwake_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwake_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbig_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbig_wake_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vbigger_wake_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vbigger_wake_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlauncher_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlauncher_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsub_back_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vsub_back_im], 0
        sub     esp, 4
        mov     eax, 5
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 5
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 6
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 6
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 7
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 7
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 8
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 8
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        sub     esp, 4
        mov     eax, 9
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__amoon_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, 9
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__amoon_im]
        mov     dword ptr [esi], ebx
        mov     dword ptr [ebp-8H], 1
        jmp     __4123

__4124:
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__awater_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
        mov     ebx, 0
        mov     esi, dword ptr [ebp-8H]
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__awater_im]
        mov     dword ptr [esi], ebx
        add     dword ptr [ebp-8H], 1

__4123:
        cmp     dword ptr [ebp-8H], 3
        jle     __4124

__467:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vwater_spray_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vwater_spray_im], 0
        jmp     __4108

__4112:
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlast_boss_hatch_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlast_boss_hatch_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__venemy_lightning_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__venemy_lightning_im], 0
        sub     esp, 4
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vlightning_im]
        mov     dword ptr [esp], eax
        call    __fmikefreeimage
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vlightning_im], 0
        jmp     __4108

__4108:
        mov     eax, 0
        jmp     __460_leave

__460_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
IFDEF PATCHES
__ffree_level_images_real ENDP
ELSE
__ffree_level_images ENDP
ENDIF

__fzzz  PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 4
        sub     esp, 32
        call    __ffrontbuffer
        mov     dword ptr [esp+18H], eax
        mov     dword ptr [ebp-4H], eax
        mov     eax, ebx
        call    __fbackbuffer
        mov     ebx, eax
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp+1CH], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fcopyrect
        sub     esp, 16
        mov     dword ptr [esp+8H], 448
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 608
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vzzz_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 32
        call    __fbackbuffer
        mov     dword ptr [esp+18H], eax
        mov     dword ptr [ebp-4H], eax
        mov     eax, ebx
        call    __ffrontbuffer
        mov     ebx, eax
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp+1CH], ebx
        mov     dword ptr [esp+14H], 0
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+0CH], 480
        mov     dword ptr [esp+8H], 640
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp], 0
        call    __fcopyrect
        sub     esp, 4
        mov     dword ptr [esp], 0
        call    __fflip
        mov     eax, 0
        jmp     __468_leave

__468_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fzzz  ENDP

__frendermenu PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 52
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        mov     dword ptr [ebp-18H], ebx
        mov     dword ptr [ebp-1CH], ebx
        mov     dword ptr [ebp-20H], ebx
        mov     dword ptr [ebp-24H], ebx
        mov     dword ptr [ebp-28H], ebx
        mov     dword ptr [ebp-2CH], ebx
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4125
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 100

__4125:
        mov     ebx, offset __afont_im
        add     ebx, 12
        mov     ebx, dword ptr [ebx]
        imul    ebx, ebx, 3
        add     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__afont_im]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4126
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 255
        call    __fcolor
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 212
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 236
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4127
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 212
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4128
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx

__4128:
        jmp     __4129

__4127:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 274
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 298
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4130
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvendor], 99
        je      __4131
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 274
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4132
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        jne     __4133
        sub     esp, 8
        mov     eax, offset __4134
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __freadfile
        mov     dword ptr [ebp-4H], eax
        cmp     dword ptr [ebp-4H], 0
        je      __4135
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadline
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadline
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 20
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     dword ptr [ebp-34H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __flen
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        sub     ebx, 4
        mov     dword ptr [esp+4H], ebx
        call    __fright
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 12
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdemo_time_left]
        mov     ecx, 1000
        cdq
        idiv    ecx
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 28
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4136
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        call    __fendgraphics
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fexecfile
        call    __fend

__4135:
        jmp     __4137

__4133:
        sub     esp, 8
        mov     eax, offset __4138
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __freadfile
        mov     dword ptr [ebp-4H], eax
        cmp     dword ptr [ebp-4H], 0
        je      __4139
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadline
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadline
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 20
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     dword ptr [ebp-34H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-34H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __flen
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        sub     ebx, 4
        mov     dword ptr [esp+4H], ebx
        call    __fright
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        call    __fendgraphics
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fexecfile
        call    __fend

__4139:

__4137:

__4132:

__4131:
        jmp     __4140

__4130:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 295
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 319
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4141
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 299
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4142
; Note: Memory operand is misaligned. Performance penalty
        sub     dword ptr [__vdifficulty], 1
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdifficulty], 1
        jge     __4143
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vdifficulty], 3

__4143:

__4142:
        jmp     __4144

__4141:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 324
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 348
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4145
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 324
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4146
        mov     ebx, 1120403456
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vmusicvol]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmusicvol], ebx
        sub     esp, 8
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmusicvol]
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        mov     esi, 1120403456
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
        push    ebx
        fstp    dword ptr [esp]
        pop     ebx
        mov     dword ptr [esp+4H], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicchannel]
        mov     dword ptr [esp], eax
        call    __fchannelvolume

__4146:
        jmp     __4147

__4145:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 349
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 373
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4148
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 349
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4149
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4150
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 255
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4151
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 200
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 208
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 203
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 205
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx

__4151:
        jmp     __4152

__4150:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4153
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 200
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 208
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 203
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 205
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jne     __4154
        mov     ebx, 1
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx

__4154:
        jmp     __4155

__4153:
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4156
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 255
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx

__4156:

__4155:

__4152:

__4149:
        jmp     __4157

__4148:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 374
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 398
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4158
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 374
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4159
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4160
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 255
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 999
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4161
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 200
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 208
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 203
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 205
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx

__4161:
        jmp     __4162

__4160:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4163
        mov     ebx, 200
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx
        mov     ebx, 208
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_down]
        mov     dword ptr [esi], ebx
        mov     ebx, 203
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_left]
        mov     dword ptr [esi], ebx
        mov     ebx, 205
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_right]
        mov     dword ptr [esi], ebx
        mov     ebx, 29
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_fire]
        mov     dword ptr [esi], ebx
        mov     ebx, 0
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 200
        jne     __4164
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx

__4164:
        jmp     __4165

__4163:
        mov     ebx, 1
        mov     esi, 2
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4166
        mov     ebx, 0
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__ausejoy]
        mov     dword ptr [esi], ebx
        mov     ebx, 255
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__akey_up]
        mov     dword ptr [esi], ebx

__4166:

__4165:

__4162:

__4159:
        jmp     __4167

__4158:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 127
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 399
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 513
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        mov     dword ptr [ebp-30H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 423
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        and     eax, ebx
        and     eax, eax
        je      __4168
        sub     esp, 20
        mov     dword ptr [esp+0CH], 23
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 399
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4169
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        je      __4170
        call    __fwritedatafile
        call    __fend
        jmp     __4171

__4170:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnagged_once], 0
        jne     __4172
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnagged_once], 1
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 1800
        jmp     __4173

__4172:
        call    __fend

__4173:

__4171:

__4169:

__4168:

__4167:

__4157:

__4147:

__4144:

__4140:

__4129:
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimagewidth
        mov     dword ptr [ebp-10H], eax
        sub     esp, 4
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fimageheight
        mov     dword ptr [ebp-14H], eax
        mov     ebx, 270
        mov     esi, dword ptr [ebp-14H]
        sar     esi, 1
        sub     ebx, esi
        mov     dword ptr [ebp-18H], ebx
        jmp     __4174

__4175:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 1
        mov     esi, dword ptr [ebp-10H]
        sar     esi, 1
        add     ebx, esi
        mov     esi, 320
        sub     esi, ebx
        mov     dword ptr [ebp-1CH], esi
        jmp     __4176

__4177:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vstippletoggle], 1
        jne     __4178
        sub     esp, 16
        mov     ebx, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-1CH]
        mov     dword ptr [esp+4H], esi
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __4179

__4178:
        sub     esp, 16
        mov     ebx, dword ptr [ebp-18H]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
        mov     esi, dword ptr [ebp-1CH]
        sub     esi, 1
        mov     dword ptr [esp+4H], esi
        mov     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__4179:
        add     dword ptr [ebp-1CH], 64

__4176:
        mov     ebx, dword ptr [ebp-10H]
        shl     ebx, 1
        mov     esi, dword ptr [ebp-10H]
        sar     esi, 1
        add     ebx, esi
        add     ebx, 320
        cmp     dword ptr [ebp-1CH], ebx
        jle     __4177

__471:
        add     dword ptr [ebp-18H], 32

__4174:
        mov     ebx, dword ptr [ebp-14H]
        sar     ebx, 1
        add     ebx, 64
        add     ebx, 16
        add     ebx, 286
        cmp     dword ptr [ebp-18H], ebx
        jle     __4175

__470:
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 0
        call    __fcolor
        sub     esp, 20
        mov     dword ptr [esp+0CH], 225
        mov     dword ptr [esp+10H], 0
        mov     dword ptr [esp+8H], 385
        mov     dword ptr [esp+4H], 205
        mov     dword ptr [esp], 127
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdifficulty], 3
        jne     __4180
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4181
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4182

__4180:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdifficulty], 2
        jne     __4183
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4184
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4185

__4183:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdifficulty], 1
        jne     __4186
        sub     esp, 8
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4187
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__4186:

__4185:

__4182:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4188
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4189
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4190

__4188:
        mov     ebx, 1
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4191
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4192
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4193

__4191:
        sub     esp, 8
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4194
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__4193:

__4190:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__ausejoy]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        je      __4195
        sub     esp, 8
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4196
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4197

__4195:
        mov     ebx, 2
        shl     ebx, 2
; Note: Memory operand is misaligned. Performance penalty
        add     ebx, dword ptr [__akey_up]
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 255
        jne     __4198
        sub     esp, 8
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4199
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4200

__4198:
        sub     esp, 8
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4201
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__4200:

__4197:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmusicvol]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 0
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        setne   al
        movzx   eax, al
        and     eax, eax
        je      __4202
        sub     esp, 8
        lea     eax, dword ptr [ebp-2CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4203
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        jmp     __4204

__4202:
        sub     esp, 8
        lea     eax, dword ptr [ebp-2CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, offset __4205
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__4204:
        sub     esp, 16
        mov     dword ptr [esp+8H], 224
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        mov     eax, offset __4206
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 1
        jne     __4207
        sub     esp, 16
        mov     dword ptr [esp+8H], 254
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        mov     eax, offset __4208
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext

__4207:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvendor], 1
        jne     __4209
        sub     esp, 16
        mov     dword ptr [esp+8H], 286
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        mov     eax, offset __4210
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        jmp     __4211

__4209:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vvendor], 0
        jne     __4212
        sub     esp, 16
        mov     dword ptr [esp+8H], 286
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        mov     eax, offset __4213
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext

__4212:

__4211:
        sub     esp, 16
        mov     dword ptr [esp+8H], 311
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        lea     eax, dword ptr [ebp-20H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 336
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        lea     eax, dword ptr [ebp-2CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 361
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        lea     eax, dword ptr [ebp-24H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 386
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        lea     eax, dword ptr [ebp-28H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 411
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 320
        sub     esp, 4
        mov     eax, offset __4214
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext

__4126:
        mov     eax, 0
        jmp     __469_leave

__469_leave:
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-28H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-2CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-24H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-20H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-0CH]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-30H]
        mov     dword ptr [ebp-30H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-30H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__frendermenu ENDP

__fdrawtext PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 28
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     dword ptr [ebp-14H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __flen
        mov     dword ptr [ebp-4H], eax
        cmp     dword ptr [ebp+20H], 1
        jne     __4215
        mov     ebx, dword ptr [ebp+18H]
        mov     esi, dword ptr [ebp-4H]
        imul    esi, esi, 15
        sar     esi, 1
        sub     ebx, esi
        add     ebx, 8
        mov     dword ptr [ebp-8H], ebx
        jmp     __4216

__4215:
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [ebp-8H], ebx

__4216:
        mov     dword ptr [ebp-0CH], 1
        jmp     __4217

__4218:
        sub     esp, 20
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp+8H], 1
        sub     esp, 4
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmid
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 12
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, offset __4220
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrCompare
        cmp     eax, 0
        je      __4219
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     dword ptr [ebp-1CH], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-1CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fupper
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-10H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fasc
        mov     dword ptr [ebp-14H], eax
        cmp     dword ptr [ebp-14H], 64
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        cmp     dword ptr [ebp-14H], 91
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __4221
        sub     dword ptr [ebp-14H], 65
        jmp     __l_472skipconv

__4221:
        cmp     dword ptr [ebp-14H], 47
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-18H], eax
        cmp     dword ptr [ebp-14H], 58
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        and     eax, ebx
        and     eax, eax
        je      __4222
        sub     dword ptr [ebp-14H], 22
        jmp     __l_472skipconv

__4222:
        cmp     dword ptr [ebp-14H], 42
        jne     __4223
        mov     dword ptr [ebp-14H], 36
        jmp     __l_472skipconv

__4223:
        cmp     dword ptr [ebp-14H], 33
        jne     __4224
        mov     dword ptr [ebp-14H], 37
        jmp     __l_472skipconv

__4224:
        cmp     dword ptr [ebp-14H], 40
        jne     __4225
        mov     dword ptr [ebp-14H], 38
        jmp     __l_472skipconv

__4225:
        cmp     dword ptr [ebp-14H], 41
        jne     __4226
        mov     dword ptr [ebp-14H], 39
        jmp     __l_472skipconv

__4226:
        cmp     dword ptr [ebp-14H], 43
        jne     __4227
        mov     dword ptr [ebp-14H], 40
        jmp     __l_472skipconv

__4227:
        cmp     dword ptr [ebp-14H], 63
        jne     __4228
        mov     dword ptr [ebp-14H], 41
        jmp     __l_472skipconv

__4228:
        cmp     dword ptr [ebp-14H], 46
        jne     __4229
        mov     dword ptr [ebp-14H], 42
        jmp     __l_472skipconv

__4229:
        cmp     dword ptr [ebp-14H], 34
        jne     __4230
        mov     dword ptr [ebp-14H], 43
        jmp     __l_472skipconv

__4230:
        cmp     dword ptr [ebp-14H], 94
        jne     __4231
        mov     dword ptr [ebp-14H], 44
        jmp     __l_472skipconv

__4231:
        cmp     dword ptr [ebp-14H], 37
        jne     __4232
        mov     dword ptr [ebp-14H], 45
        jmp     __l_472skipconv

__4232:
        cmp     dword ptr [ebp-14H], 36
        jne     __4233
        mov     dword ptr [ebp-14H], 46
        jmp     __l_472skipconv

__4233:
        cmp     dword ptr [ebp-14H], 38
        jne     __4234
        mov     dword ptr [ebp-14H], 47
        jmp     __l_472skipconv

__4234:
        cmp     dword ptr [ebp-14H], 45
        jne     __4235
        mov     dword ptr [ebp-14H], 48
        jmp     __l_472skipconv

__4235:
        cmp     dword ptr [ebp-14H], 58
        jne     __4236
        mov     dword ptr [ebp-14H], 49
        jmp     __l_472skipconv

__4236:
        cmp     dword ptr [ebp-14H], 61
        jne     __4237
        mov     dword ptr [ebp-14H], 50
        jmp     __l_472skipconv

__4237:
        cmp     dword ptr [ebp-14H], 44
        jne     __4238
        mov     dword ptr [ebp-14H], 51

__l_472skipconv:

__4238:
        cmp     dword ptr [ebp-14H], 51
        jle     __4239
        mov     dword ptr [ebp-14H], -1

__4239:
        sub     esp, 16
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp-14H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], esi
        mov     eax, offset __afont_im
        add     eax, 12
        mov     eax, dword ptr [eax]
        imul    eax, eax, 3
        add     eax, 1
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__afont_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __4240

__4219:
        mov     dword ptr [ebp-14H], -1

__4240:
        add     dword ptr [ebp-8H], 15
        add     dword ptr [ebp-0CH], 1

__4217:
        mov     ebx, dword ptr [ebp-4H]
        cmp     dword ptr [ebp-0CH], ebx
        jle     __4218

__473:
        mov     eax, 0
        jmp     __472_leave

__472_leave:
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-18H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fdrawtext ENDP

__fdomouse PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 4
        mov     dword ptr [ebp-4H], 0
        call    __fmousex
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vcurx]
        sub     eax, 320
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcurx], eax
        call    __fmousey
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__vcury]
        sub     eax, 200
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcury], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 639
        jle     __4241
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcurx], 639

__4241:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 479
        jle     __4242
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcury], 479

__4242:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 0
        jge     __4243
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcurx], 0

__4243:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], 0
        jge     __4244
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vcury], 0

__4244:
        sub     esp, 4
        mov     dword ptr [esp], 1
        call    __fmousedown
        mov     dword ptr [ebp-4H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit2], 0
        jne     __4245
        mov     ebx, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit], ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit2], 1
        jmp     __4246

__4245:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit], 0

__4246:
        cmp     dword ptr [ebp-4H], 0
        jne     __4247
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vmhit2], 0

__4247:
        sub     esp, 16
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vcury]
        mov     dword ptr [esp+8H], ebx
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vcurx]
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vmouse_cursor_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 8
        mov     dword ptr [esp], 320
        mov     dword ptr [esp+4H], 200
        call    __fmovemouse
        mov     eax, 0
        jmp     __474_leave

__474_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdomouse ENDP

__fdonagstuff PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 24
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        mov     dword ptr [ebp-0CH], ebx
        mov     dword ptr [ebp-10H], ebx
        mov     ebx, 1
; Note: Memory operand is misaligned. Performance penalty
        sub     ebx, dword ptr [__vstippletoggle]
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vstippletoggle], ebx
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 255
        call    __fcolor
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 415
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 608
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        mov     dword ptr [ebp-14H], eax
        mov     ebx, 400
        sub     ebx, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], ebx
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        mov     dword ptr [ebp-14H], eax
        mov     ebx, 432
        sub     ebx, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], ebx
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __4248
        sub     esp, 20
        mov     dword ptr [esp+0CH], 32
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 192
        mov     ebx, 400
        sub     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp], 416
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4249
        sub     esp, 8
        mov     eax, offset __4250
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __freadfile
        mov     dword ptr [ebp-8H], eax
        cmp     dword ptr [ebp-8H], 0
        je      __4251
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadline
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-8H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __freadline
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        sub     esp, 20
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     dword ptr [ebp-18H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-18H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __flen
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        sub     ebx, 4
        mov     dword ptr [esp+4H], ebx
        call    __fright
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 12
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vdemo_time_left]
        mov     ecx, 1000
        cdq
        idiv    ecx
        mov     dword ptr [esp], eax
        call    ___bbStrFromInt
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 28
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, offset __4252
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp-10H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp+4H], eax
        lea     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrStore
        mov     ebx, eax
        sub     esp, 4
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        call    __fclosefile
        call    __fendgraphics
        sub     esp, 8
        lea     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fexecfile
        call    __fend

__4251:

__4249:
        jmp     __4253

__4248:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 415
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcurx], 608
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        mov     dword ptr [ebp-14H], eax
        mov     ebx, 432
        sub     ebx, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], ebx
        mov     eax, ebx
        setg    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        mov     dword ptr [ebp-14H], eax
        mov     ebx, 464
        sub     ebx, dword ptr [ebp-4H]
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vcury], ebx
        mov     eax, ebx
        setl    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __4254
        sub     esp, 20
        mov     dword ptr [esp+0CH], 32
        mov     dword ptr [esp+10H], 1
        mov     dword ptr [esp+8H], 192
        mov     ebx, 432
        sub     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp+4H], ebx
        mov     dword ptr [esp], 416
        call    __frect
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vmhit], 1
        jne     __4255
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdemo_time_left], 5000
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnagged_once], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __4256
; Note: Memory operand is misaligned. Performance penalty
        mov     ebx, dword ptr [__vmhit]
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx
        jmp     __4257

__4256:
        call    __fend

__4257:

__4255:

__4254:

__4253:
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vstippletoggle], 1
        jne     __4258
        sub     esp, 16
        mov     dword ptr [esp+8H], 432
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 576
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 432
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 512
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 432
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 448
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        jmp     __4259

__4258:
        sub     esp, 16
        mov     dword ptr [esp+8H], 432
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 575
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 432
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 511
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 432
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 447
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vstip]
        shl     eax, 2
; Note: Memory operand is misaligned. Performance penalty
        add     eax, dword ptr [__astipple_im]
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage

__4259:
        sub     esp, 12
        mov     dword ptr [esp+4H], 0
        mov     dword ptr [esp+8H], 0
        mov     dword ptr [esp], 0
        call    __fcolor
        sub     esp, 16
        mov     dword ptr [esp+8H], 607
        mov     dword ptr [esp+0CH], 400
        mov     dword ptr [esp+4H], 400
        mov     dword ptr [esp], 415
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 607
        mov     dword ptr [esp+0CH], 464
        mov     dword ptr [esp+4H], 464
        mov     dword ptr [esp], 415
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 415
        mov     dword ptr [esp+0CH], 464
        mov     dword ptr [esp+4H], 400
        mov     dword ptr [esp], 415
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 607
        mov     dword ptr [esp+0CH], 464
        mov     dword ptr [esp+4H], 400
        mov     dword ptr [esp], 607
        call    __fline
        sub     esp, 16
        mov     dword ptr [esp+8H], 416
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 512
        sub     esp, 4
        mov     eax, offset __4260
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdemo_time_left], 5000
        setg    al
        movzx   eax, al
        mov     dword ptr [ebp-14H], eax
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vnagged_once], 0
        mov     eax, ebx
        sete    al
        movzx   eax, al
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        and     eax, ebx
        and     eax, eax
        je      __4261
        sub     esp, 16
        mov     dword ptr [esp+8H], 448
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 512
        sub     esp, 4
        mov     eax, offset __4262
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        jmp     __4263

__4261:
        sub     esp, 16
        mov     dword ptr [esp+8H], 448
        mov     dword ptr [esp+0CH], 1
        mov     dword ptr [esp+4H], 512
        sub     esp, 4
        mov     eax, offset __4264
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext

__4263:
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vnag_x]
        push    eax
        fld     dword ptr [esp]
        pop     eax
        mov     ebx, 1126170624
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
        fucompp
        fnstsw  ax
        sahf
        seta    al
        movzx   eax, al
        and     eax, eax
        je      __4265
        mov     ebx, 1126825984
        push    ebx
        fld     dword ptr [esp]
        pop     ebx
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vnag_x]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fsubp   st(1), st(0)
        mov     esi, 1094713344
        push    esi
        fld     dword ptr [esp]
        pop     esi
        fdivp   st(1), st(0)
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vnag_x]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        faddp   st(1), st(0)
        push    esi
        fstp    dword ptr [esp]
        pop     esi
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vnag_x], esi

__4265:
        sub     esp, 16
        mov     dword ptr [esp+8H], 240
        mov     dword ptr [esp+0CH], 0
; Note: Memory operand is misaligned. Performance penalty
        mov     esi, dword ptr [__vnag_x]
        push    esi
        fld     dword ptr [esp]
        pop     esi
        push    esi
        fistp   dword ptr [esp]
        pop     esi
        mov     dword ptr [esp+4H], esi
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vnag_im]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vdemo_time_left], 5000
        jle     __4266
        sub     esp, 16
        mov     dword ptr [esp+8H], 55
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 455
; Note: Memory operand is misaligned. Performance penalty
        mov     eax, dword ptr [__vsmall_logo]
        mov     dword ptr [esp], eax
        call    __fmikedrawimage
        sub     esp, 16
        mov     dword ptr [esp+8H], 118
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 300
        sub     esp, 4
        mov     eax, offset __4267
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 174
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 330
        sub     esp, 4
        mov     eax, offset __4268
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 204
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 330
        sub     esp, 4
        mov     eax, offset __4269
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 234
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 330
        sub     esp, 4
        mov     eax, offset __4270
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 264
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 330
        sub     esp, 4
        mov     eax, offset __4271
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 294
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 330
        sub     esp, 4
        mov     eax, offset __4272
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 360
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 280
        sub     esp, 4
        mov     eax, offset __4273
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        jmp     __4274

__4266:
        sub     esp, 16
        mov     dword ptr [esp+8H], 75
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 267
        sub     esp, 4
        mov     eax, offset __4275
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 150
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4276
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 175
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4277
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 200
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4278
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 225
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4279
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 44
        mov     dword ptr [esp], 34
        call    __fchr
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, offset __4280
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     dword ptr [esp], 34
        mov     eax, ebx
        call    __fchr
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, offset __4281
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrConst
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrConcat
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+8H], 250
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 275
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4282
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 300
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4283
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 325
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4284
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext
        sub     esp, 16
        mov     dword ptr [esp+8H], 350
        mov     dword ptr [esp+0CH], 0
        mov     dword ptr [esp+4H], 328
        sub     esp, 4
        mov     eax, offset __4285
        mov     dword ptr [esp], eax
        call    ___bbStrConst
        mov     dword ptr [esp], eax
        call    __fdrawtext

__4274:
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vroll_timer], 20
; Note: Memory operand is misaligned. Performance penalty
        cmp     dword ptr [__vfree_version], 0
        jne     __4286
        mov     ebx, 1
        mov     esi, 1
        shl     esi, 2
; Note: Memory operand is misaligned. Performance penalty
        add     esi, dword ptr [__apress_fire]
        mov     dword ptr [esi], ebx

__4286:
        mov     eax, 0
        jmp     __475_leave

__475_leave:
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-14H]
        mov     dword ptr [ebp-14H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-10H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbStrRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-14H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fdonagstuff ENDP

__fmikesearchimage PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tloadsprite
        call    ___bbObjEachFirst
        and     eax, eax
        je      __477

__4287:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrCompare
        cmp     eax, 0
        jne     __4288
        mov     eax, dword ptr [ebp-4H]
        jmp     __476_leave

__4288:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4287

__477:
        mov     eax, 0
        jmp     __476_leave

        mov     eax, 0
        jmp     __476_leave

__476_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikesearchimage ENDP

__fmikeisimage PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tloadsprite
        call    ___bbObjEachFirst
        and     eax, eax
        je      __479

__4289:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     ebx, dword ptr [ebp+14H]
        jne     __4290
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        jmp     __478_leave

__4290:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4289

__479:
        mov     eax, 0
        jmp     __478_leave

        mov     eax, 0
        jmp     __478_leave

__478_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikeisimage ENDP

__fmikesearchsound PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsoundloader
        call    ___bbObjEachFirst
        and     eax, eax
        je      __481

__4291:
        sub     esp, 12
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrCompare
        cmp     eax, 0
        jne     __4292
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        jmp     __480_leave

__4292:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4291

__481:
        mov     eax, 0
        jmp     __480_leave

        mov     eax, 0
        jmp     __480_leave

__480_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikesearchsound ENDP

__fmikeloadimage PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmikesearchimage
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        jne     __4293
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tloadsprite
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        call    __favailvidmem
        cmp     eax, 256000
        jle     __4294
        sub     esp, 8
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __floadimage
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        jmp     __4295

__4294:
        sub     esp, 8
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __floadimage
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax

__4295:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__4293:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        jmp     __482_leave

        mov     eax, 0
        jmp     __482_leave

__482_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikeloadimage ENDP

__fmikeloadanimimage PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    __fmikesearchimage
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], 0
        call    ___bbObjCompare
        cmp     eax, 0
        jne     __4296
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, offset __tloadsprite
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        call    __favailvidmem
        cmp     eax, 256000
        jle     __4297
        sub     esp, 20
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp+24H]
        mov     dword ptr [esp+10H], esi
        mov     esi, dword ptr [ebp+1CH]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __floadanimimage
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        jmp     __4298

__4297:
        sub     esp, 20
        mov     ebx, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], ebx
        mov     esi, dword ptr [ebp+24H]
        mov     dword ptr [esp+10H], esi
        mov     esi, dword ptr [ebp+1CH]
        mov     dword ptr [esp+8H], esi
        mov     ebx, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], ebx
        sub     esp, 4
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __floadanimimage
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax

__4298:
        sub     esp, 8
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore

__4296:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        add     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        jmp     __483_leave

        mov     eax, 0
        jmp     __483_leave

__483_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-4H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     20
__fmikeloadanimimage ENDP

__fmikeloadsound PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 12
        mov     ebx, 0
        mov     dword ptr [ebp-4H], ebx
        mov     dword ptr [ebp-8H], ebx
        sub     esp, 8
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __fmikesearchsound
        mov     dword ptr [ebp-4H], eax
        cmp     dword ptr [ebp-4H], 0
        je      __4299
        mov     eax, dword ptr [ebp-4H]
        jmp     __484_leave

__4299:
        sub     esp, 8
        lea     eax, dword ptr [ebp-8H]
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, offset __tsoundloader
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjNew
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbObjStore
        sub     esp, 8
        lea     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    ___bbStrLoad
        mov     dword ptr [esp], eax
        call    __floadsound
        mov     ebx, dword ptr [ebp-8H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     dword ptr [ebx], eax
        sub     esp, 8
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 4
        mov     dword ptr [esp], eax
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        lea     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrLoad
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [esp+4H], ebx
        call    ___bbStrStore
        mov     eax, dword ptr [ebp-8H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        jmp     __484_leave

        mov     eax, 0
        jmp     __484_leave

__484_leave:
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp+14H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbStrRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     dword ptr [ebp-0CH], eax
        sub     esp, 4
        mov     esi, dword ptr [ebp-8H]
        mov     dword ptr [esp], esi
        mov     eax, esi
        call    ___bbObjRelease
        mov     esi, eax
        mov     eax, dword ptr [ebp-0CH]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikeloadsound ENDP

__fmikefreeimage PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tloadsprite
        call    ___bbObjEachFirst
        and     eax, eax
        je      __486

__4300:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp+14H], ebx
        jne     __4301
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        sub     ebx, 1
        mov     esi, dword ptr [ebp-4H]
        mov     esi, dword ptr [esi]
        add     esi, 8
        mov     dword ptr [esi], ebx
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 8
        mov     ebx, dword ptr [ebx]
        cmp     ebx, 0
        jg      __4302
        sub     esp, 4
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __ffreeimage
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        mov     eax, 0
        jmp     __485_leave

__4302:

__4301:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4300

__486:
        mov     eax, 0
        jmp     __485_leave

__485_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikefreeimage ENDP

__fmikefreesound PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsoundloader
        call    ___bbObjEachFirst
        and     eax, eax
        je      __488

__4303:
        mov     ebx, dword ptr [ebp-4H]
        mov     ebx, dword ptr [ebx]
        add     ebx, 0
        mov     ebx, dword ptr [ebx]
        cmp     dword ptr [ebp+14H], ebx
        jne     __4304
        sub     esp, 4
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __ffreesound
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjDelete
        mov     eax, 0
        jmp     __487_leave

__4304:
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4303

__488:
        mov     eax, 0
        jmp     __487_leave

__487_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     4
__fmikefreesound ENDP

__fcleargfx PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tloadsprite
        call    ___bbObjEachFirst
        and     eax, eax
        je      __490

__4305:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __ffreeimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4305

__490:
        sub     esp, 4
        mov     eax, offset __tloadsprite
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        mov     eax, 0
        jmp     __489_leave

__489_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fcleargfx ENDP

__fclearsound PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        sub     esp, 8
        mov     dword ptr [ebp-4H], 0
        sub     esp, 8
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        mov     dword ptr [esp+4H], offset __tsoundloader
        call    ___bbObjEachFirst
        and     eax, eax
        je      __492

__4306:
        sub     esp, 4
        mov     eax, dword ptr [ebp-4H]
        mov     eax, dword ptr [eax]
        add     eax, 0
        mov     eax, dword ptr [eax]
        mov     dword ptr [esp], eax
        call    __ffreeimage
        sub     esp, 4
        lea     eax, dword ptr [ebp-4H]
        mov     dword ptr [esp], eax
        call    ___bbObjEachNext
        and     eax, eax
        jne     __4306

__492:
        sub     esp, 4
        mov     eax, offset __tsoundloader
        mov     dword ptr [esp], eax
        call    ___bbObjDeleteEach
        mov     eax, 0
        jmp     __491_leave

__491_leave:
        mov     dword ptr [ebp-8H], eax
        sub     esp, 4
        mov     ebx, dword ptr [ebp-4H]
        mov     dword ptr [esp], ebx
        mov     eax, ebx
        call    ___bbObjRelease
        mov     ebx, eax
        mov     eax, dword ptr [ebp-8H]
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fclearsound ENDP

__fmikedrawblock PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        cmp     dword ptr [ebp+14H], 0
        jne     __4307
        jmp     __4308

__4307:
        sub     esp, 16
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fdrawblock

__4308:
        mov     eax, 0
        jmp     __493_leave

__493_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fmikedrawblock ENDP

__fmikedrawimage PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
        cmp     dword ptr [ebp+14H], 0
        jne     __4309
        jmp     __4310

__4309:
        sub     esp, 16
        mov     ebx, dword ptr [ebp+1CH]
        mov     dword ptr [esp+8H], ebx
        mov     esi, dword ptr [ebp+20H]
        mov     dword ptr [esp+0CH], esi
        mov     esi, dword ptr [ebp+18H]
        mov     dword ptr [esp+4H], esi
        mov     eax, dword ptr [ebp+14H]
        mov     dword ptr [esp], eax
        call    __fdrawimage

__4310:
        mov     eax, 0
        jmp     __494_leave

__494_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     16
__fmikedrawimage ENDP

__fpause_game PROC NEAR
        push    ebx
        push    esi
        push    edi
        push    ebp
        mov     ebp, esp
; Note: Memory operand is misaligned. Performance penalty
        mov     dword ptr [__vghpause], 1
        mov     eax, 0
        jmp     __495_leave

__495_leave:
        mov     esp, ebp
        pop     ebp
        pop     edi
        pop     esi
        pop     ebx
        ret     0
__fpause_game ENDP

_DllEntry PROC NEAR
        mov     eax, 1
        ret     12
_DllEntry ENDP

.DATA

__792 BYTE "Platypus v1.13d",0,90h

__vvendor label dword
        dd 00000000H                                    ; 0011 _ 0 

__vghpause label dword
        dd 00000000H                                    ; 0015 _ 0 

__vcheating label dword
        dd 00000000H                                    ; 0019 _ 0 

__vpause dd 00000000H                                   ; 001D _ 0 

__vfree_version label dword
        dd 00000000H                                    ; 0021 _ 0 

__vshowlink label dword
        dd 00000000H                                    ; 0025 _ 0 

__vilink label byte
        db 00H, 00H, 00H, 00H                           ; 0029 _ ....

__793   label byte
        db 00H, 90H, 90H, 90H                           ; 002D _ ....

__vvisiturl label byte
        db 00H, 00H, 00H, 00H                           ; 0031 _ ....

__794   label byte
        db 00H, 90H, 90H, 90H                           ; 0035 _ ....

__vfullscreen label dword
        dd 00000000H                                    ; 0039 _ 0 

__vghlinkx label byte
        db 00H, 00H, 00H, 00H                           ; 003D _ ....

__vghlinky label byte
        db 00H, 00H, 00H, 00H                           ; 0041 _ ....

__vghloadingscreen label byte
        db 00H, 00H, 00H, 00H                           ; 0045 _ ....

__vshowlogo label byte
        db 00H, 00H, 00H, 00H                           ; 0049 _ ....

__vghlogo label byte
        db 00H, 00H, 00H, 00H                           ; 004D _ ....

__vghlogox label byte
        db 00H, 00H, 00H, 00H                           ; 0051 _ ....

__vghlogoy label byte
        db 00H, 00H, 00H, 00H                           ; 0055 _ ....

__vlogo_im label byte
        db 00H, 00H, 00H, 00H                           ; 0059 _ ....

__vmusicchannel label dword
        dd 00000000H                                    ; 005D _ 0 

__vnuffz dd 00000000H                                   ; 0061 _ 0 

__vdifficulty label dword
        dd 00000000H                                    ; 0065 _ 0 

__vmhit dd 00000000H                                    ; 0069 _ 0 

__vroll_timer label dword
        dd 00000000H                                    ; 006D _ 0 

__alightch label dword
        dd 00000000H, 00000001H                         ; 0071 _ 0 1 
        dd 00000001H, 00000000H                         ; 0079 _ 1 0 

__vcurx dd 00000000H                                    ; 0081 _ 0 

__vcury dd 00000000H                                    ; 0085 _ 0 

__vmhit2 dd 00000000H                                   ; 0089 _ 0 

__vnag_im label dword
        dd 00000000H                                    ; 008D _ 0 

__vsmall_logo label dword
        dd 00000000H                                    ; 0091 _ 0 

__vnag_x dd 00000000H                                   ; 0095 _ 0 

__vnagged_once label dword
        dd 00000000H                                    ; 0099 _ 0 

__vdemo_time_left label dword
        dd 00000000H                                    ; 009D _ 0 

__vstippletoggle label dword
        dd 00000000H                                    ; 00A1 _ 0 

__vbase_im label dword
        dd 00000000H                                    ; 00A5 _ 0 

__vbase_loaded label dword
        dd 00000000H                                    ; 00A9 _ 0 

__asigh dd 00000000H, 00000001H                         ; 00AD _ 0 1 
        dd 00000001H, 00000000H                         ; 00B5 _ 1 0 

__vpaused label dword
        dd 00000000H                                    ; 00BD _ 0 

__vslow_im label dword
        dd 00000000H                                    ; 00C1 _ 0 

__vzzz_im label dword
        dd 00000000H                                    ; 00C5 _ 0 

__vend_bonus label dword
        dd 00000000H                                    ; 00C9 _ 0 

__vlives_off label dword
        dd 00000000H                                    ; 00CD _ 0 

__akeydes label dword
        dd 00000000H, 00000003H                         ; 00D1 _ 0 3 
        dd 00000001H, 00000000H                         ; 00D9 _ 1 0 

__ausejoy label dword
        dd 00000000H, 00000001H                         ; 00E1 _ 0 1 
        dd 00000001H, 00000000H                         ; 00E9 _ 1 0 

__vmfader label dword
        dd 00000000H                                    ; 00F1 _ 0 

__vdemoupto label dword
        dd 00000000H                                    ; 00F5 _ 0 

__atitle_roller label dword
        dd 00000000H, 00000001H                         ; 00F9 _ 0 1 
        dd 00000001H, 00000000H                         ; 0101 _ 1 0 

__vtitle_upto label dword
        dd 00000000H                                    ; 0109 _ 0 

__vstip dd 00000000H                                    ; 010D _ 0 

__vsmy  dd 00000000H                                    ; 0111 _ 0 

__vsmx  dd 00000000H                                    ; 0115 _ 0 

__vuptoletter label dword
        dd 00000000H                                    ; 0119 _ 0 

__vnameentered label byte
        db 00H, 00H, 00H, 00H                           ; 011D _ ....

__vwait_for_no_button label dword
        dd 00000000H                                    ; 0121 _ 0 

__valldone label dword
        dd 00000000H                                    ; 0125 _ 0 

__vrander label dword
        dd 00000000H                                    ; 0129 _ 0 

__arands dd 00000000H, 00000001H                        ; 012D _ 0 1 
        dd 00000001H, 00000000H                         ; 0135 _ 1 0 

__atypein label dword
        dd 00000000H, 00000003H                         ; 013D _ 0 3 
        dd 00000001H, 00000000H                         ; 0145 _ 1 0 

__arecorded label dword
        dd 00000000H, 00000001H                         ; 014D _ 0 1 
        dd 00000002H, 00000000H                         ; 0155 _ 2 0 
        dd 00000000H                                    ; 015D _ 0 

__vrecording label dword
        dd 00000000H                                    ; 0161 _ 0 

__vrecordupto label dword
        dd 00000000H                                    ; 0165 _ 0 

__aexplosion_loaded label dword
        dd 00000000H, 00000001H                         ; 0169 _ 0 1 
        dd 00000001H, 00000000H                         ; 0171 _ 1 0 

__802   label byte
        db 00H, 90H, 90H, 90H                           ; 0179 _ ....

__vframerate label dword
        dd 00000000H                                    ; 017D _ 0 

__vtimery label dword
        dd 00000000H                                    ; 0181 _ 0 

__asint dd 00000000H, 00000002H                         ; 0185 _ 0 2 
        dd 00000001H, 00000000H                         ; 018D _ 1 0 

__acost dd 00000000H, 00000002H                         ; 0195 _ 0 2 
        dd 00000001H, 00000000H                         ; 019D _ 1 0 

__ahighest_score label dword
        dd 00000000H, 00000001H                         ; 01A5 _ 0 1 
        dd 00000001H, 00000000H                         ; 01AD _ 1 0 

__vscreen_splinter_im label byte
        db 00H, 00H, 00H, 00H                           ; 01B5 _ ....

__vscreen_splinter2_im label byte
        db 00H, 00H, 00H, 00H                           ; 01B9 _ ....

__vimg  label byte
        db 00H, 00H, 00H, 00H                           ; 01BD _ ....

__vspl_frm label dword
        dd 00000000H                                    ; 01C1 _ 0 

__amatrix label byte
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; 01C5 _ ........
        db 03H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01CD _ ........
        db 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 01D5 _ ........

__aleg_im label dword
        dd 00000000H, 00000001H                         ; 01DD _ 0 1 
        dd 00000001H, 00000000H                         ; 01E5 _ 1 0 

__atrain dd 00000000H, 00000001H                        ; 01ED _ 0 1 
        dd 00000001H, 00000000H                         ; 01F5 _ 1 0 

__atrainbonus label dword
        dd 00000000H, 00000001H                         ; 01FD _ 0 1 
        dd 00000001H, 00000000H                         ; 0205 _ 1 0 

__asmok_im label dword
        dd 00000000H, 00000001H                         ; 020D _ 0 1 
        dd 00000001H, 00000000H                         ; 0215 _ 1 0 

__acardam label dword
        dd 00000000H, 00000001H                         ; 021D _ 0 1 
        dd 00000001H, 00000000H                         ; 0225 _ 1 0 

__awater_im label dword
        dd 00000000H, 00000001H                         ; 022D _ 0 1 
        dd 00000001H, 00000000H                         ; 0235 _ 1 0 

__awateroff label dword
        dd 00000000H, 00000002H                         ; 023D _ 0 2 
        dd 00000001H, 00000000H                         ; 0245 _ 1 0 

__vcarload label dword
        dd 00000000H                                    ; 024D _ 0 

__vtray_im label dword
        dd 00000000H                                    ; 0251 _ 0 

__vbigbarrel_im label dword
        dd 00000000H                                    ; 0255 _ 0 

__acartop_im label dword
        dd 00000000H, 00000001H                         ; 0259 _ 0 1 
        dd 00000001H, 00000000H                         ; 0261 _ 1 0 

__vsuspension_im label dword
        dd 00000000H                                    ; 0269 _ 0 

__vmiss_im label dword
        dd 00000000H                                    ; 026D _ 0 

__vwheel_im label dword
        dd 00000000H                                    ; 0271 _ 0 

__vbig_gun_im label dword
        dd 00000000H                                    ; 0275 _ 0 

__afont_im label dword
        dd 00000000H, 00000001H                         ; 0279 _ 0 1 
        dd 00000002H, 00000000H                         ; 0281 _ 2 0 
        dd 00000000H                                    ; 0289 _ 0 

__vunload label dword
        dd 00000000H                                    ; 028D _ 0 

__aexofx dd 00000000H, 00000001H                        ; 0291 _ 0 1 
        dd 00000001H, 00000000H                         ; 0299 _ 1 0 

__aexofy dd 00000000H, 00000001H                        ; 02A1 _ 0 1 
        dd 00000001H, 00000000H                         ; 02A9 _ 1 0 

__ahiscore label dword
        dd 00000000H, 00000001H                         ; 02B1 _ 0 1 
        dd 00000001H, 00000000H                         ; 02B9 _ 1 0 

__ahiname label dword
        dd 00000000H, 00000003H                         ; 02C1 _ 0 3 
        dd 00000001H, 00000000H                         ; 02C9 _ 1 0 

__atargname label dword
        dd 00000000H, 00000003H                         ; 02D1 _ 0 3 
        dd 00000001H, 00000000H                         ; 02D9 _ 1 0 

__atargpts label dword
        dd 00000000H, 00000001H                         ; 02E1 _ 0 1 
        dd 00000001H, 00000000H                         ; 02E9 _ 1 0 

__817   label byte
        db 20H, 20H, 20H, 44H, 45H, 53H, 49H, 47H       ; 02F1 _    DESIG
        db 4EH, 2CH, 50H, 52H, 4FH, 47H, 52H, 41H       ; 02F9 _ N,PROGRA
        db 4DH, 4DH, 49H, 4EH, 47H, 20H, 26H, 20H       ; 0301 _ MMING & 
        db 47H, 52H, 41H, 50H, 48H, 49H, 43H, 53H       ; 0309 _ GRAPHICS
        db 20H, 42H, 59H, 20H, 41H, 4EH, 54H, 48H       ; 0311 _  BY ANTH
        db 4FH, 4EH, 59H, 20H, 46H, 4CH, 41H, 43H       ; 0319 _ ONY FLAC
        db 4BH, 2EH, 20H, 20H, 20H, 20H, 20H, 20H       ; 0321 _ K.      
        db 20H, 41H, 44H, 44H, 49H, 54H, 49H, 4FH       ; 0329 _  ADDITIO
        db 4EH, 41H, 4CH, 20H, 50H, 52H, 4FH, 47H       ; 0331 _ NAL PROG
        db 52H, 41H, 4DH, 4DH, 49H, 4EH, 47H, 20H       ; 0339 _ RAMMING 
        db 42H, 59H, 20H, 4DH, 49H, 4BH, 45H, 20H       ; 0341 _ BY MIKE 
        db 42H, 4FH, 45H, 48H, 2EH, 20H, 20H, 20H       ; 0349 _ BOEH.   
        db 20H, 20H, 20H, 20H, 20H, 4DH, 55H, 53H       ; 0351 _      MUS
        db 49H, 43H, 20H, 42H, 59H, 20H, 43H, 48H       ; 0359 _ IC BY CH
        db 52H, 49H, 53H, 20H, 41H, 42H, 42H, 4FH       ; 0361 _ RIS ABBO
        db 54H, 2EH, 20H, 20H, 20H, 20H, 20H, 20H       ; 0369 _ T.      
        db 20H, 20H, 50H, 52H, 4FH, 4AH, 45H, 43H       ; 0371 _   PROJEC
        db 54H, 20H, 4DH, 41H, 4EH, 41H, 47H, 45H       ; 0379 _ T MANAGE
        db 52H, 3AH, 20H, 47H, 45H, 4FH, 52H, 47H       ; 0381 _ R: GEORG
        db 45H, 20H, 42H, 52H, 41H, 59H, 2EH, 20H       ; 0389 _ E BRAY. 
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 2AH       ; 0391 _        *
        db 20H, 32H, 30H, 30H, 34H, 20H, 49H, 44H       ; 0399 _  2004 ID
        db 49H, 47H, 49H, 43H, 4FH, 4EH, 20H, 4CH       ; 03A1 _ IGICON L
        db 54H, 44H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03A9 _ TD      
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03B1 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03B9 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03C1 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03C9 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03D1 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03D9 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03E1 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03E9 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03F1 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 03F9 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 0401 _         
        db 20H, 20H, 20H, 20H, 20H, 20H, 20H, 20H       ; 0409 _         
        db 20H, 20H, 20H, 00H                           ; 0411 _    .

__akey_up label dword
        dd 00000000H, 00000001H                         ; 0415 _ 0 1 
        dd 00000001H, 00000000H                         ; 041D _ 1 0 

__akey_down label dword
        dd 00000000H, 00000001H                         ; 0425 _ 0 1 
        dd 00000001H, 00000000H                         ; 042D _ 1 0 

__akey_left label dword
        dd 00000000H, 00000001H                         ; 0435 _ 0 1 
        dd 00000001H, 00000000H                         ; 043D _ 1 0 

__akey_right label dword
        dd 00000000H, 00000001H                         ; 0445 _ 0 1 
        dd 00000001H, 00000000H                         ; 044D _ 1 0 

__akey_fire label dword
        dd 00000000H, 00000001H                         ; 0455 _ 0 1 
        dd 00000001H, 00000000H                         ; 045D _ 1 0 

__vjoy  dd 00000000H                                    ; 0465 _ 0 

__vcolour label dword
        dd 00000000H                                    ; 0469 _ 0 

__vmusic dd 00000000H                                   ; 046D _ 0 

__vmusicvol label dword
        dd 00000000H                                    ; 0471 _ 0 

__vbroken label dword
        dd 00000000H                                    ; 0475 _ 0 

__aship_script label dword
        dd 00000000H, 00000001H                         ; 0479 _ 0 1 
        dd 00000002H, 00000000H                         ; 0481 _ 2 0 
        dd 00000000H                                    ; 0489 _ 0 

__vfishfire label dword
        dd 00000000H                                    ; 048D _ 0 

__aleveldata label dword
        dd 00000000H, 00000001H                         ; 0491 _ 0 1 
        dd 00000002H, 00000000H                         ; 0499 _ 2 0 
        dd 00000000H                                    ; 04A1 _ 0 

__vskyoffset label dword
        dd 00000000H                                    ; 04A5 _ 0 

__vskyrise label dword
        dd 00000000H                                    ; 04A9 _ 0 

__alayer_block label dword
        dd 00000000H, 00000001H                         ; 04AD _ 0 1 
        dd 00000001H, 00000000H                         ; 04B5 _ 1 0 

__amess dd 00000000H, 00000003H                         ; 04BD _ 0 3 
        dd 00000001H, 00000000H                         ; 04C5 _ 1 0 

__822   label byte
        db 20H, 53H, 50H, 45H, 43H, 49H, 41H, 4CH       ; 04CD _  SPECIAL
        db 20H, 42H, 4FH, 4EH, 55H, 53H, 20H, 46H       ; 04D5 _  BONUS F
        db 4FH, 52H, 20H, 50H, 41H, 53H, 53H, 49H       ; 04DD _ OR PASSI
        db 56H, 45H, 20H, 52H, 45H, 53H, 49H, 53H       ; 04E5 _ VE RESIS
        db 54H, 41H, 4EH, 43H, 45H, 21H, 00H            ; 04ED _ TANCE!.

__823   label byte
        db 20H, 53H, 48H, 4FH, 4FH, 54H, 20H, 54H       ; 04F4 _  SHOOT T
        db 48H, 45H, 20H, 53H, 54H, 41H, 52H, 20H       ; 04FC _ HE STAR 
        db 54H, 4FH, 20H, 43H, 48H, 41H, 4EH, 47H       ; 0504 _ TO CHANG
        db 45H, 20H, 57H, 45H, 41H, 50H, 4FH, 4EH       ; 050C _ E WEAPON
        db 2EH, 2EH, 2EH, 00H                           ; 0514 _ ....

__824   label byte
        db 20H, 53H, 48H, 4FH, 4FH, 54H, 20H, 54H       ; 0518 _  SHOOT T
        db 48H, 45H, 20H, 43H, 52H, 41H, 54H, 45H       ; 0520 _ HE CRATE
        db 53H, 20H, 46H, 4FH, 52H, 20H, 59H, 4FH       ; 0528 _ S FOR YO
        db 55H, 52H, 20H, 52H, 45H, 57H, 41H, 52H       ; 0530 _ UR REWAR
        db 44H, 21H, 00H                                ; 0538 _ D!.

__825   label byte
        db 20H, 44H, 41H, 4EH, 47H, 45H, 52H, 21H       ; 053B _  DANGER!
        db 20H, 4DH, 49H, 4EH, 45H, 53H, 20H, 00H       ; 0543 _  MINES .
        db 90H, 90H                                     ; 054B _ ..

__vcounter label dword
        dd 00000000H                                    ; 054D _ 0 

__vdataevent label dword
        dd 00000000H                                    ; 0551 _ 0 

__vlevel dd 00000000H                                   ; 0555 _ 0 

__varea label byte
        db 00H, 00H, 00H, 00H                           ; 0559 _ ....

__voldcounter label dword
        dd 00000000H                                    ; 055D _ 0 

__826   label byte
        db 64H, 61H, 74H, 61H, 5CH, 6CH, 65H, 76H       ; 0561 _ data\lev
        db 65H, 6CH, 20H, 64H, 61H, 74H, 61H, 2EH       ; 0569 _ el data.
        db 64H, 61H, 74H, 00H                           ; 0571 _ dat.

__abonusscore label dword
        dd 00000000H, 00000001H                         ; 0575 _ 0 1 
        dd 00000001H, 00000000H                         ; 057D _ 1 0 

__abonus_at label dword
        dd 00000000H, 00000001H                         ; 0585 _ 0 1 
        dd 00000001H, 00000000H                         ; 058D _ 1 0 

__aship_im label dword
        dd 00000000H, 00000001H                         ; 0595 _ 0 1 
        dd 00000001H, 00000000H                         ; 059D _ 1 0 

__ax    dd 00000000H, 00000001H                         ; 05A5 _ 0 1 
        dd 00000001H, 00000000H                         ; 05AD _ 1 0 

__ay    dd 00000000H, 00000001H                         ; 05B5 _ 0 1 
        dd 00000001H, 00000000H                         ; 05BD _ 1 0 

__aweapon label dword
        dd 00000000H, 00000001H                         ; 05C5 _ 0 1 
        dd 00000001H, 00000000H                         ; 05CD _ 1 0 

__aframe dd 00000000H, 00000001H                        ; 05D5 _ 0 1 
        dd 00000001H, 00000000H                         ; 05DD _ 1 0 

__ais_active label dword
        dd 00000000H, 00000001H                         ; 05E5 _ 0 1 
        dd 00000001H, 00000000H                         ; 05ED _ 1 0 

__ais_moving label dword
        dd 00000000H, 00000001H                         ; 05F5 _ 0 1 
        dd 00000001H, 00000000H                         ; 05FD _ 1 0 

__alightning label dword
        dd 00000000H, 00000001H                         ; 0605 _ 0 1 
        dd 00000001H, 00000000H                         ; 060D _ 1 0 

__aflames label byte
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; 0615 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 061D _ ........

__ashooting label dword
        dd 00000000H, 00000001H                         ; 0625 _ 0 1 
        dd 00000001H, 00000000H                         ; 062D _ 1 0 

__atofire label dword
        dd 00000000H, 00000001H                         ; 0635 _ 0 1 
        dd 00000001H, 00000000H                         ; 063D _ 1 0 

__abuttondown label dword
        dd 00000000H, 00000001H                         ; 0645 _ 0 1 
        dd 00000001H, 00000000H                         ; 064D _ 1 0 

__aweapon_count label dword
        dd 00000000H, 00000001H                         ; 0655 _ 0 1 
        dd 00000001H, 00000000H                         ; 065D _ 1 0 

__ascore dd 00000000H, 00000001H                        ; 0665 _ 0 1 
        dd 00000001H, 00000000H                         ; 066D _ 1 0 

__alives dd 00000000H, 00000001H                        ; 0675 _ 0 1 
        dd 00000001H, 00000000H                         ; 067D _ 1 0 

__adead dd 00000000H, 00000001H                         ; 0685 _ 0 1 
        dd 00000001H, 00000000H                         ; 068D _ 1 0 

__apod  dd 00000000H, 00000001H                         ; 0695 _ 0 1 
        dd 00000002H, 00000000H                         ; 069D _ 2 0 
        dd 00000000H                                    ; 06A5 _ 0 

__apress_up label dword
        dd 00000000H, 00000001H                         ; 06A9 _ 0 1 
        dd 00000001H, 00000000H                         ; 06B1 _ 1 0 

__apress_down label dword
        dd 00000000H, 00000001H                         ; 06B9 _ 0 1 
        dd 00000001H, 00000000H                         ; 06C1 _ 1 0 

__apress_left label dword
        dd 00000000H, 00000001H                         ; 06C9 _ 0 1 
        dd 00000001H, 00000000H                         ; 06D1 _ 1 0 

__apress_right label dword
        dd 00000000H, 00000001H                         ; 06D9 _ 0 1 
        dd 00000001H, 00000000H                         ; 06E1 _ 1 0 

__apress_fire label dword
        dd 00000000H, 00000001H                         ; 06E9 _ 0 1 
        dd 00000001H, 00000000H                         ; 06F1 _ 1 0 

__afiredelay label dword
        dd 00000000H, 00000001H                         ; 06F9 _ 0 1 
        dd 00000001H, 00000000H                         ; 0701 _ 1 0 

__astar_iris_im label byte
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; 0709 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0711 _ ........

__astar_irisp_im label byte
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; 0719 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 0721 _ ........

__aflsh dd 00000000H, 00000001H                         ; 0729 _ 0 1 
        dd 00000001H, 00000000H                         ; 0731 _ 1 0 

__atrigger label dword
        dd 00000000H, 00000001H                         ; 0739 _ 0 1 
        dd 00000001H, 00000000H                         ; 0741 _ 1 0 

__acountervalue label dword
        dd 00000000H, 00000001H                         ; 0749 _ 0 1 
        dd 00000001H, 00000000H                         ; 0751 _ 1 0 

__acountercounter label dword
        dd 00000000H, 00000001H                         ; 0759 _ 0 1 
        dd 00000001H, 00000000H                         ; 0761 _ 1 0 

__adigid dd 00000000H, 00000005H                        ; 0769 _ 0 5 
        dd 00000002H, 00000000H                         ; 0771 _ 2 0 
        dd 00000000H                                    ; 0779 _ 0 

__acounteractive label dword
        dd 00000000H, 00000001H                         ; 077D _ 0 1 
        dd 00000001H, 00000000H                         ; 0785 _ 1 0 

__acounterdigits label dword
        dd 00000000H, 00000001H                         ; 078D _ 0 1 
        dd 00000001H, 00000000H                         ; 0795 _ 1 0 

__aoldcountervalue label dword
        dd 00000000H, 00000001H                         ; 079D _ 0 1 
        dd 00000001H, 00000000H                         ; 07A5 _ 1 0 

__ashard_im label dword
        dd 00000000H, 00000001H                         ; 07AD _ 0 1 
        dd 00000001H, 00000000H                         ; 07B5 _ 1 0 

__abullet_im label dword
        dd 00000000H, 00000001H                         ; 07BD _ 0 1 
        dd 00000001H, 00000000H                         ; 07C5 _ 1 0 

__vlowrand label dword
        dd 00000000H                                    ; 07CD _ 0 

__vhighrand label dword
        dd 00000000H                                    ; 07D1 _ 0 

__vhighfront label dword
        dd 00000000H                                    ; 07D5 _ 0 

__vlowfront label dword
        dd 00000000H                                    ; 07D9 _ 0 

__asethill label dword
        dd 00000000H, 00000001H                         ; 07DD _ 0 1 
        dd 00000001H, 00000000H                         ; 07E5 _ 1 0 

__alayery label dword
        dd 00000000H, 00000001H                         ; 07ED _ 0 1 
        dd 00000001H, 00000000H                         ; 07F5 _ 1 0 

__alayerxoff label dword
        dd 00000000H, 00000002H                         ; 07FD _ 0 2 
        dd 00000001H, 00000000H                         ; 0805 _ 1 0 

__alayeryoff label dword
        dd 00000000H, 00000002H                         ; 080D _ 0 2 
        dd 00000001H, 00000000H                         ; 0815 _ 1 0 

__vbird_focus_x label dword
        dd 00000000H                                    ; 081D _ 0 

__vbird_focus_y label dword
        dd 00000000H                                    ; 0821 _ 0 

__vwire_slam label dword
        dd 00000000H                                    ; 0825 _ 0 

__aenemy_im label dword
        dd 00000000H, 00000001H                         ; 0829 _ 0 1 
        dd 00000001H, 00000000H                         ; 0831 _ 1 0 

__vcanvas_im label byte
        db 00H, 00H, 00H, 00H                           ; 0839 _ ....

__vpshotno label dword
        dd 00000000H                                    ; 083D _ 0 

__venemyno label dword
        dd 00000000H                                    ; 0841 _ 0 

__veshotno label dword
        dd 00000000H                                    ; 0845 _ 0 

__vshardno label dword
        dd 00000000H                                    ; 0849 _ 0 

__vstarno label dword
        dd 00000000H                                    ; 084D _ 0 

__vlight_on_off label dword
        dd 00000000H                                    ; 0851 _ 0 

__vvertscroll label dword
        dd 00000000H                                    ; 0855 _ 0 

__vplayer label dword
        dd 00000000H                                    ; 0859 _ 0 

__vexplosionno label dword
        dd 00000000H                                    ; 085D _ 0 

__vshotspeed label dword
        dd 00000000H                                    ; 0861 _ 0 

__vshotchance label dword
        dd 00000000H                                    ; 0865 _ 0 

__vmaxshot label dword
        dd 00000000H                                    ; 0869 _ 0 

__vshotwait label dword
        dd 00000000H                                    ; 086D _ 0 

__vhitfirst label dword
        dd 00000000H                                    ; 0871 _ 0 

__vpodcounter label dword
        dd 00000000H                                    ; 0875 _ 0 

__vpodoffset label dword
        dd 00000000H                                    ; 0879 _ 0 

__viris label byte
        db 00H, 00H, 00H, 00H                           ; 087D _ ....

__abonuscounter label dword
        dd 00000000H, 00000001H                         ; 0881 _ 0 1 
        dd 00000001H, 00000000H                         ; 0889 _ 1 0 

__abonustype label dword
        dd 00000000H, 00000001H                         ; 0891 _ 0 1 
        dd 00000001H, 00000000H                         ; 0899 _ 1 0 

__vspinster label dword
        dd 00000000H                                    ; 08A1 _ 0 

__vcredits label dword
        dd 00000000H                                    ; 08A5 _ 0 

__vnofire label dword
        dd 00000000H                                    ; 08A9 _ 0 

__vprims dd 00000000H                                   ; 08AD _ 0 

__vprims_hit label dword
        dd 00000000H                                    ; 08B1 _ 0 

__vsecs dd 00000000H                                    ; 08B5 _ 0 

__vsecs_hit label dword
        dd 00000000H                                    ; 08B9 _ 0 

__vnocollect label dword
        dd 00000000H                                    ; 08BD _ 0 

__vendcounter label dword
        dd 00000000H                                    ; 08C1 _ 0 

__vscroll_counter label dword
        dd 00000000H                                    ; 08C5 _ 0 

__vscroll_timer label dword
        dd 00000000H                                    ; 08C9 _ 0 

__ahill_im label dword
        dd 00000000H, 00000001H                         ; 08CD _ 0 1 
        dd 00000002H, 00000000H                         ; 08D5 _ 2 0 
        dd 00000000H                                    ; 08DD _ 0 

__ahillx label byte
        db 00H, 00H, 00H, 00H, 02H, 00H, 00H, 00H       ; 08E1 _ ........
        db 02H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 08E9 _ ........
        db 00H, 00H, 00H, 00H                           ; 08F1 _ ....

__asoundplaying label dword
        dd 00000000H, 00000001H                         ; 08F5 _ 0 1 
        dd 00000001H, 00000000H                         ; 08FD _ 1 0 

__vcounta label dword
        dd 00000000H                                    ; 0905 _ 0 

__vtarget_im label dword
        dd 00000000H                                    ; 0909 _ 0 

__vtargloaded label dword
        dd 00000000H                                    ; 090D _ 0 

__vroll_state label dword
        dd 00000000H                                    ; 0911 _ 0 

__vworld_im label dword
        dd 00000000H                                    ; 0915 _ 0 

__aenemy_loaded label dword
        dd 00000000H, 00000001H                         ; 0919 _ 0 1 
        dd 00000001H, 00000000H                         ; 0921 _ 1 0 

__aenemy_active label dword
        dd 00000000H, 00000001H                         ; 0929 _ 0 1 
        dd 00000001H, 00000000H                         ; 0931 _ 1 0 

__afont_loaded label dword
        dd 00000000H, 00000001H                         ; 0939 _ 0 1 
        dd 00000001H, 00000000H                         ; 0941 _ 1 0 

__afont_active label dword
        dd 00000000H, 00000001H                         ; 0949 _ 0 1 
        dd 00000001H, 00000000H                         ; 0951 _ 1 0 

__ahill_loaded label dword
        dd 00000000H, 00000001H                         ; 0959 _ 0 1 
        dd 00000002H, 00000000H                         ; 0961 _ 2 0 
        dd 00000000H                                    ; 0969 _ 0 

__ahill_active label dword
        dd 00000000H, 00000001H                         ; 096D _ 0 1 
        dd 00000002H, 00000000H                         ; 0975 _ 2 0 
        dd 00000000H                                    ; 097D _ 0 

__ahillpop label dword
        dd 00000000H, 00000001H                         ; 0981 _ 0 1 
        dd 00000001H, 00000000H                         ; 0989 _ 1 0 

__839   label byte
        db 63H, 6FH, 6EH, 66H, 69H, 67H, 2EH, 64H       ; 0991 _ config.d
        db 61H, 74H, 00H                                ; 0999 _ at.

__844   label byte
        db 67H, 66H, 78H, 5CH, 7AH, 7AH, 7AH, 2EH       ; 099C _ gfx\zzz.
        db 62H, 6DH, 70H, 00H, 90H                      ; 09A4 _ bmp..

__vwaterfall_im label dword
        dd 00000000H                                    ; 09A9 _ 0 

__vwaterfall_top_im label dword
        dd 00000000H                                    ; 09AD _ 0 

__vwaterfall2_im label dword
        dd 00000000H                                    ; 09B1 _ 0 

__vwaterfall2_top_im label dword
        dd 00000000H                                    ; 09B5 _ 0 

__vfrayed_body_im label dword
        dd 00000000H                                    ; 09B9 _ 0 

__vfrayed_body2_im label dword
        dd 00000000H                                    ; 09BD _ 0 

__vhomer1_im label dword
        dd 00000000H                                    ; 09C1 _ 0 

__vhomer2_im label dword
        dd 00000000H                                    ; 09C5 _ 0 

__varm1_im label dword
        dd 00000000H                                    ; 09C9 _ 0 

__varm2_im label dword
        dd 00000000H                                    ; 09CD _ 0 

__vbomb_balloon_im label dword
        dd 00000000H                                    ; 09D1 _ 0 

__vballoon_bomb_im label dword
        dd 00000000H                                    ; 09D5 _ 0 

__vbomb_tye_im label dword
        dd 00000000H                                    ; 09D9 _ 0 

__vbomb_rope_im label dword
        dd 00000000H                                    ; 09DD _ 0 

__vwake_im label dword
        dd 00000000H                                    ; 09E1 _ 0 

__vbig_wake_im label dword
        dd 00000000H                                    ; 09E5 _ 0 

__vbigger_wake_im label dword
        dd 00000000H                                    ; 09E9 _ 0 

__vlauncher_im label dword
        dd 00000000H                                    ; 09ED _ 0 

__vsub_back_im label dword
        dd 00000000H                                    ; 09F1 _ 0 

__vwater_spray_im label dword
        dd 00000000H                                    ; 09F5 _ 0 

__vlast_boss_hatch_im label dword
        dd 00000000H                                    ; 09F9 _ 0 

__vmouse_cursor_im label dword
        dd 00000000H                                    ; 09FD _ 0 

__asmoke_im label dword
        dd 00000000H, 00000001H                         ; 0A01 _ 0 1 
        dd 00000001H, 00000000H                         ; 0A09 _ 1 0 

__845   label byte
        db 67H, 66H, 78H, 5CH, 70H, 6FH, 69H, 6EH       ; 0A11 _ gfx\poin
        db 74H, 65H, 72H, 2EH, 62H, 6DH, 70H, 00H       ; 0A19 _ ter.bmp.

__846   label byte
        db 67H, 66H, 78H, 5CH, 7AH, 7AH, 7AH, 2EH       ; 0A21 _ gfx\zzz.
        db 62H, 6DH, 70H, 00H                           ; 0A29 _ bmp.

__vdot_im label dword
        dd 00000000H                                    ; 0A2D _ 0 

__vpyx  dd 00000000H                                    ; 0A31 _ 0 

__vpyy  dd 00000000H                                    ; 0A35 _ 0 

__847   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6CH, 6FH, 77H       ; 0A39 _ gfx\slow
        db 2EH, 62H, 6DH, 70H, 00H, 90H, 90H, 90H       ; 0A41 _ .bmp....

__ascores_im label dword
        dd 00000000H, 00000001H                         ; 0A49 _ 0 1 
        dd 00000001H, 00000000H                         ; 0A51 _ 1 0 

__848   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 31H, 30H, 30H       ; 0A59 _ font\100
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0A61 _ .bmp.

__849   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 31H, 35H, 30H       ; 0A66 _ font\150
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0A6E _ .bmp.

__850   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 32H, 30H, 30H       ; 0A73 _ font\200
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0A7B _ .bmp.

__851   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 32H, 35H, 30H       ; 0A80 _ font\250
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0A88 _ .bmp.

__852   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 35H, 30H, 30H       ; 0A8D _ font\500
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0A95 _ .bmp.

__853   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 31H, 30H, 30H       ; 0A9A _ font\100
        db 30H, 2EH, 62H, 6DH, 70H, 00H                 ; 0AA2 _ 0.bmp.

__854   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 32H, 35H, 30H       ; 0AA8 _ font\250
        db 30H, 2EH, 62H, 6DH, 70H, 00H                 ; 0AB0 _ 0.bmp.

__855   label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 78H, 32H, 2EH       ; 0AB6 _ font\x2.
        db 62H, 6DH, 70H, 00H, 90H, 90H, 90H            ; 0ABE _ bmp....

__vdelend_im label dword
        dd 00000000H                                    ; 0AC5 _ 0 

__856   label byte
        db 66H, 6FH, 6EH, 74H, 2FH, 64H, 65H, 6CH       ; 0AC9 _ font/del
        db 20H, 65H, 6EH, 64H, 2EH, 62H, 6DH, 70H       ; 0AD1 _  end.bmp
        db 00H, 90H, 90H, 90H                           ; 0AD9 _ ....

__astipple_im label dword
        dd 00000000H, 00000001H                         ; 0ADD _ 0 1 
        dd 00000001H, 00000000H                         ; 0AE5 _ 1 0 

__857   label byte
        db 67H, 66H, 78H, 5CH, 73H, 74H, 69H, 70H       ; 0AED _ gfx\stip
        db 70H, 6CH, 65H, 2EH, 62H, 6DH, 70H, 00H       ; 0AF5 _ ple.bmp.

__858   label byte
        db 67H, 66H, 78H, 5CH, 73H, 74H, 69H, 70H       ; 0AFD _ gfx\stip
        db 70H, 6CH, 65H, 32H, 2EH, 62H, 6DH, 70H       ; 0B05 _ ple2.bmp
        db 00H, 90H, 90H, 90H                           ; 0B0D _ ....

__vskystrip_im label dword
        dd 00000000H                                    ; 0B11 _ 0 

__vground_im label dword
        dd 00000000H                                    ; 0B15 _ 0 

__vlake_im label dword
        dd 00000000H                                    ; 0B19 _ 0 

__vtransition_im label dword
        dd 00000000H                                    ; 0B1D _ 0 

__vsquidbottom_im label dword
        dd 00000000H                                    ; 0B21 _ 0 

__vbig_squidbottom_im label dword
        dd 00000000H                                    ; 0B25 _ 0 

__vlaser_squidbottom_im label dword
        dd 00000000H                                    ; 0B29 _ 0 

__859   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6BH, 79H, 31H       ; 0B2D _ gfx\sky1
        db 36H, 2EH, 62H, 6DH, 70H, 00H                 ; 0B35 _ 6.bmp.

__860   label byte
        db 67H, 66H, 78H, 5CH, 67H, 72H, 6FH, 75H       ; 0B3B _ gfx\grou
        db 6EH, 64H, 20H, 31H, 36H, 2EH, 62H, 6DH       ; 0B43 _ nd 16.bm
        db 70H, 00H                                     ; 0B4B _ p.

__861   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 61H, 6BH, 65H       ; 0B4D _ gfx\lake
        db 20H, 31H, 36H, 2EH, 62H, 6DH, 70H, 00H       ; 0B55 _  16.bmp.

__862   label byte
        db 67H, 66H, 78H, 5CH, 74H, 72H, 61H, 6EH       ; 0B5D _ gfx\tran
        db 73H, 69H, 74H, 69H, 6FH, 6EH, 20H, 31H       ; 0B65 _ sition 1
        db 36H, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 0B6D _ 6.bmp...

__atitle_balloon_im label dword
        dd 00000000H, 00000001H                         ; 0B75 _ 0 1 
        dd 00000001H, 00000000H                         ; 0B7D _ 1 0 

__vselector_box_im label dword
        dd 00000000H                                    ; 0B85 _ 0 

__863   label byte
        db 67H, 66H, 78H, 5CH, 73H, 65H, 6CH, 65H       ; 0B89 _ gfx\sele
        db 63H, 74H, 20H, 62H, 6FH, 78H, 2EH, 62H       ; 0B91 _ ct box.b
        db 6DH, 70H, 00H, 90H                           ; 0B99 _ mp..

__vselx dd 00000000H                                    ; 0B9D _ 0 

__vsely dd 00000000H                                    ; 0BA1 _ 0 

__vselax dd 00000000H                                   ; 0BA5 _ 0 

__vselay dd 00000000H                                   ; 0BA9 _ 0 

__aback_im label dword
        dd 00000000H, 00000001H                         ; 0BAD _ 0 1 
        dd 00000001H, 00000000H                         ; 0BB5 _ 1 0 

__864   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 69H, 74H, 74H       ; 0BBD _ gfx\litt
        db 6CH, 65H, 20H, 72H, 65H, 64H, 20H, 62H       ; 0BC5 _ le red b
        db 69H, 67H, 20H, 75H, 6EH, 2EH, 62H, 6DH       ; 0BCD _ ig un.bm
        db 70H, 00H                                     ; 0BD5 _ p.

__865   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 69H, 74H, 74H       ; 0BD7 _ gfx\litt
        db 6CH, 65H, 20H, 67H, 72H, 65H, 65H, 6EH       ; 0BDF _ le green
        db 20H, 62H, 69H, 67H, 20H, 75H, 6EH, 2EH       ; 0BE7 _  big un.
        db 62H, 6DH, 70H, 00H                           ; 0BEF _ bmp.

__866   label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 0BF3 _ gfx\big 
        db 62H, 61H, 72H, 72H, 65H, 6CH, 2EH, 62H       ; 0BFB _ barrel.b
        db 6DH, 70H, 00H, 90H, 90H, 90H                 ; 0C03 _ mp....

__aexplosion_im label dword
        dd 00000000H, 00000001H                         ; 0C09 _ 0 1 
        dd 00000001H, 00000000H                         ; 0C11 _ 1 0 

__aenemybullet_im label dword
        dd 00000000H, 00000001H                         ; 0C19 _ 0 1 
        dd 00000001H, 00000000H                         ; 0C21 _ 1 0 

__867   label byte
        db 67H, 66H, 78H, 5CH, 65H, 6EH, 65H, 6DH       ; 0C29 _ gfx\enem
        db 79H, 62H, 75H, 6CH, 6CH, 65H, 74H, 2EH       ; 0C31 _ ybullet.
        db 62H, 6DH, 70H, 00H                           ; 0C39 _ bmp.

__868   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 61H, 73H, 65H       ; 0C3D _ gfx\lase
        db 72H, 2EH, 62H, 6DH, 70H, 00H                 ; 0C45 _ r.bmp.

__869   label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 0C4B _ gfx\big 
        db 62H, 75H, 6CH, 6CH, 65H, 74H, 2EH, 62H       ; 0C53 _ bullet.b
        db 6DH, 70H, 00H                                ; 0C5B _ mp.

__870   label byte
        db 67H, 66H, 78H, 5CH, 6DH, 69H, 6EH, 65H       ; 0C5E _ gfx\mine
        db 20H, 73H, 68H, 61H, 72H, 64H, 2EH, 62H       ; 0C66 _  shard.b
        db 6DH, 70H, 00H                                ; 0C6E _ mp.

__vbird_im label dword
        dd 00000000H                                    ; 0C71 _ 0 

__871   label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 72H, 64H       ; 0C75 _ gfx\bird
        db 2EH, 62H, 6DH, 70H, 00H, 90H, 90H, 90H       ; 0C7D _ .bmp....

__vparachute_man_im label dword
        dd 00000000H                                    ; 0C85 _ 0 

__872   label byte
        db 67H, 66H, 78H, 5CH, 70H, 61H, 72H, 61H       ; 0C89 _ gfx\para
        db 63H, 68H, 75H, 74H, 65H, 20H, 6DH, 61H       ; 0C91 _ chute ma
        db 6EH, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 0C99 _ n.bmp...

__vshot dd 00000000H                                    ; 0CA1 _ 0 

__873   label byte
        db 73H, 68H, 6FH, 74H, 2EH, 62H, 6DH, 70H       ; 0CA5 _ shot.bmp
        db 00H, 90H, 90H, 90H                           ; 0CAD _ ....

__vchute_im label dword
        dd 00000000H                                    ; 0CB1 _ 0 

__874   label byte
        db 67H, 66H, 78H, 5CH, 70H, 61H, 72H, 61H       ; 0CB5 _ gfx\para
        db 63H, 68H, 75H, 74H, 65H, 2EH, 62H, 6DH       ; 0CBD _ chute.bm
        db 70H, 00H, 90H, 90H                           ; 0CC5 _ p...

__aboulder_im label dword
        dd 00000000H, 00000001H                         ; 0CC9 _ 0 1 
        dd 00000001H, 00000000H                         ; 0CD1 _ 1 0 

__877   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 69H, 74H, 74H       ; 0CD9 _ gfx\litt
        db 6CH, 65H, 20H, 72H, 6FH, 63H, 6BH, 20H       ; 0CE1 _ le rock 
        db 00H                                          ; 0CE9 _ .

__878   label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0CEA _ .bmp.

__879   label byte
        db 67H, 66H, 78H, 5CH, 73H, 68H, 69H, 70H       ; 0CEF _ gfx\ship
        db 73H, 2EH, 62H, 6DH, 70H, 00H                 ; 0CF7 _ s.bmp.

__880   label byte
        db 67H, 66H, 78H, 5CH, 73H, 68H, 69H, 70H       ; 0CFD _ gfx\ship
        db 73H, 32H, 2EH, 62H, 6DH, 70H, 00H, 90H       ; 0D05 _ s2.bmp..

__vpod_im label dword
        dd 00000000H                                    ; 0D0D _ 0 

__881   label byte
        db 67H, 66H, 78H, 5CH, 70H, 6FH, 64H, 73H       ; 0D11 _ gfx\pods
        db 2EH, 62H, 6DH, 70H, 00H, 90H, 90H, 90H       ; 0D19 _ .bmp....

__aflash_im label dword
        dd 00000000H, 00000001H                         ; 0D21 _ 0 1 
        dd 00000001H, 00000000H                         ; 0D29 _ 1 0 

__882   label byte
        db 67H, 66H, 78H, 5CH, 66H, 6CH, 61H, 73H       ; 0D31 _ gfx\flas
        db 68H, 65H, 73H, 2EH, 62H, 6DH, 70H, 00H       ; 0D39 _ hes.bmp.

__883   label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 0D41 _ gfx\big 
        db 66H, 6CH, 61H, 73H, 68H, 65H, 73H, 2EH       ; 0D49 _ flashes.
        db 62H, 6DH, 70H, 00H                           ; 0D51 _ bmp.

__vlightning_im label dword
        dd 00000000H                                    ; 0D55 _ 0 

__venemy_lightning_im label dword
        dd 00000000H                                    ; 0D59 _ 0 

__886   label byte
        db 67H, 66H, 78H, 5CH, 62H, 75H, 6CH, 6CH       ; 0D5D _ gfx\bull
        db 65H, 74H, 00H                                ; 0D65 _ et.

__887   label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0D68 _ .bmp.

__888   label byte
        db 67H, 66H, 78H, 5CH, 72H, 6FH, 63H, 6BH       ; 0D6D _ gfx\rock
        db 65H, 74H, 2EH, 62H, 6DH, 70H, 00H            ; 0D75 _ et.bmp.

__893   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6FH, 6EH, 69H       ; 0D7C _ gfx\soni
        db 63H, 20H, 70H, 75H, 6CH, 73H, 65H, 20H       ; 0D84 _ c pulse 
        db 00H                                          ; 0D8C _ .

__894   label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0D8D _ .bmp.

__895   label byte
        db 67H, 66H, 78H, 5CH, 73H, 68H, 61H, 72H       ; 0D92 _ gfx\shar
        db 64H, 73H, 2EH, 62H, 6DH, 70H, 00H            ; 0D9A _ ds.bmp.

__896   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0DA1 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 72H, 65H, 64H, 2EH       ; 0DA9 _ is1-red.
        db 62H, 6DH, 70H, 00H                           ; 0DB1 _ bmp.

__897   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0DB5 _ gfx\debr
        db 69H, 73H, 32H, 2DH, 72H, 65H, 64H, 2EH       ; 0DBD _ is2-red.
        db 62H, 6DH, 70H, 00H                           ; 0DC5 _ bmp.

__898   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0DC9 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 67H, 72H, 65H, 65H       ; 0DD1 _ is1-gree
        db 6EH, 2EH, 62H, 6DH, 70H, 00H                 ; 0DD9 _ n.bmp.

__899   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0DDF _ gfx\debr
        db 69H, 73H, 32H, 2DH, 67H, 72H, 65H, 65H       ; 0DE7 _ is2-gree
        db 6EH, 2EH, 62H, 6DH, 70H, 00H                 ; 0DEF _ n.bmp.

__900   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0DF5 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 67H, 72H, 65H, 79H       ; 0DFD _ is1-grey
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0E05 _ .bmp.

__901   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E0A _ gfx\debr
        db 69H, 73H, 32H, 2DH, 67H, 72H, 65H, 79H       ; 0E12 _ is2-grey
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0E1A _ .bmp.

__902   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E1F _ gfx\debr
        db 69H, 73H, 31H, 2DH, 79H, 65H, 6CH, 6CH       ; 0E27 _ is1-yell
        db 6FH, 77H, 2EH, 62H, 6DH, 70H, 00H            ; 0E2F _ ow.bmp.

__903   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E36 _ gfx\debr
        db 69H, 73H, 32H, 2DH, 79H, 65H, 6CH, 6CH       ; 0E3E _ is2-yell
        db 6FH, 77H, 2EH, 62H, 6DH, 70H, 00H            ; 0E46 _ ow.bmp.

__904   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E4D _ gfx\debr
        db 69H, 73H, 31H, 2DH, 72H, 65H, 64H, 32H       ; 0E55 _ is1-red2
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0E5D _ .bmp.

__905   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E62 _ gfx\debr
        db 69H, 73H, 32H, 2DH, 72H, 65H, 64H, 32H       ; 0E6A _ is2-red2
        db 2EH, 62H, 6DH, 70H, 00H                      ; 0E72 _ .bmp.

__906   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E77 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 67H, 72H, 65H, 65H       ; 0E7F _ is1-gree
        db 6EH, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 0E87 _ n2.bmp.

__907   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0E8E _ gfx\debr
        db 69H, 73H, 32H, 2DH, 67H, 72H, 65H, 65H       ; 0E96 _ is2-gree
        db 6EH, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 0E9E _ n2.bmp.

__908   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0EA5 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 77H, 68H, 69H, 74H       ; 0EAD _ is1-whit
        db 65H, 2EH, 62H, 6DH, 70H, 00H                 ; 0EB5 _ e.bmp.

__909   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0EBB _ gfx\debr
        db 69H, 73H, 32H, 2DH, 77H, 68H, 69H, 74H       ; 0EC3 _ is2-whit
        db 65H, 2EH, 62H, 6DH, 70H, 00H                 ; 0ECB _ e.bmp.

__910   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0ED1 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 6FH, 72H, 61H, 6EH       ; 0ED9 _ is1-oran
        db 67H, 65H, 2EH, 62H, 6DH, 70H, 00H            ; 0EE1 _ ge.bmp.

__911   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0EE8 _ gfx\debr
        db 69H, 73H, 32H, 2DH, 6FH, 72H, 61H, 6EH       ; 0EF0 _ is2-oran
        db 67H, 65H, 2EH, 62H, 6DH, 70H, 00H            ; 0EF8 _ ge.bmp.

__912   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0EFF _ gfx\debr
        db 69H, 73H, 31H, 2DH, 74H, 61H, 6EH, 2EH       ; 0F07 _ is1-tan.
        db 62H, 6DH, 70H, 00H                           ; 0F0F _ bmp.

__913   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0F13 _ gfx\debr
        db 69H, 73H, 32H, 2DH, 74H, 61H, 6EH, 2EH       ; 0F1B _ is2-tan.
        db 62H, 6DH, 70H, 00H                           ; 0F23 _ bmp.

__914   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0F27 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 70H, 75H, 72H, 70H       ; 0F2F _ is1-purp
        db 6CH, 65H, 2EH, 62H, 6DH, 70H, 00H            ; 0F37 _ le.bmp.

__915   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0F3E _ gfx\debr
        db 69H, 73H, 32H, 2DH, 70H, 75H, 72H, 70H       ; 0F46 _ is2-purp
        db 6CH, 65H, 2EH, 62H, 6DH, 70H, 00H            ; 0F4E _ le.bmp.

__916   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0F55 _ gfx\debr
        db 69H, 73H, 31H, 2DH, 62H, 6CH, 61H, 63H       ; 0F5D _ is1-blac
        db 6BH, 2EH, 62H, 6DH, 70H, 00H                 ; 0F65 _ k.bmp.

__917   label byte
        db 67H, 66H, 78H, 5CH, 64H, 65H, 62H, 72H       ; 0F6B _ gfx\debr
        db 69H, 73H, 32H, 2DH, 62H, 6CH, 61H, 63H       ; 0F73 _ is2-blac
        db 6BH, 2EH, 62H, 6DH, 70H, 00H                 ; 0F7B _ k.bmp.

__vturret_im label dword
        dd 00000000H                                    ; 0F81 _ 0 

__918   label byte
        db 67H, 66H, 78H, 5CH, 74H, 75H, 72H, 72H       ; 0F85 _ gfx\turr
        db 65H, 74H, 73H, 2EH, 62H, 6DH, 70H, 00H       ; 0F8D _ ets.bmp.

__vbarrel_im label dword
        dd 00000000H                                    ; 0F95 _ 0 

__919   label byte
        db 67H, 66H, 78H, 5CH, 62H, 61H, 72H, 72H       ; 0F99 _ gfx\barr
        db 65H, 6CH, 73H, 2EH, 62H, 6DH, 70H, 00H       ; 0FA1 _ els.bmp.

__vstar_im label dword
        dd 00000000H                                    ; 0FA9 _ 0 

__920   label byte
        db 67H, 66H, 78H, 5CH, 73H, 74H, 61H, 72H       ; 0FAD _ gfx\star
        db 73H, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 0FB5 _ s.bmp...

__vbonus_im label dword
        dd 00000000H                                    ; 0FBD _ 0 

__921   label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 6EH, 75H       ; 0FC1 _ gfx\bonu
        db 73H, 20H, 66H, 72H, 75H, 69H, 74H, 2EH       ; 0FC9 _ s fruit.
        db 62H, 6DH, 70H, 00H                           ; 0FD1 _ bmp.

__vballoon_im label dword
        dd 00000000H                                    ; 0FD5 _ 0 

__922   label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 6EH, 75H       ; 0FD9 _ gfx\bonu
        db 73H, 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH       ; 0FE1 _ s balloo
        db 6EH, 73H, 2EH, 62H, 6DH, 70H, 00H, 90H       ; 0FE9 _ ns.bmp..

__vstring_im label dword
        dd 00000000H                                    ; 0FF1 _ 0 

__923   label byte
        db 67H, 66H, 78H, 5CH, 73H, 74H, 72H, 69H       ; 0FF5 _ gfx\stri
        db 6EH, 67H, 2EH, 62H, 6DH, 70H, 00H, 90H       ; 0FFD _ ng.bmp..

__vcrate_im label dword
        dd 00000000H                                    ; 1005 _ 0 

__924   label byte
        db 67H, 66H, 78H, 5CH, 63H, 72H, 61H, 74H       ; 1009 _ gfx\crat
        db 65H, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 1011 _ e.bmp...

__vbig_squid_gun_im label dword
        dd 00000000H                                    ; 1019 _ 0 

__925   label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 101D _ gfx\big 
        db 73H, 71H, 75H, 69H, 64H, 20H, 67H, 75H       ; 1025 _ squid gu
        db 6EH, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 102D _ n.bmp...

__vlaser_squid_gun_im label dword
        dd 00000000H                                    ; 1035 _ 0 

__926   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 61H, 73H, 65H       ; 1039 _ gfx\lase
        db 72H, 20H, 73H, 71H, 75H, 69H, 64H, 20H       ; 1041 _ r squid 
        db 67H, 75H, 6EH, 2EH, 62H, 6DH, 70H, 00H       ; 1049 _ gun.bmp.

__vsquid_gun_im label dword
        dd 00000000H                                    ; 1051 _ 0 

__927   label byte
        db 67H, 66H, 78H, 5CH, 73H, 71H, 75H, 69H       ; 1055 _ gfx\squi
        db 64H, 20H, 67H, 75H, 6EH, 2EH, 62H, 6DH       ; 105D _ d gun.bm
        db 70H, 00H, 90H, 90H                           ; 1065 _ p...

__amoon_im label dword
        dd 00000000H, 00000001H                         ; 1069 _ 0 1 
        dd 00000001H, 00000000H                         ; 1071 _ 1 0 

__928   label byte
        db 67H, 66H, 78H, 2FH, 6DH, 6FH, 6FH, 6EH       ; 1079 _ gfx/moon
        db 2EH, 62H, 6DH, 70H, 00H                      ; 1081 _ .bmp.

__929   label byte
        db 67H, 66H, 78H, 2FH, 6DH, 6FH, 6FH, 6EH       ; 1086 _ gfx/moon
        db 32H, 2EH, 62H, 6DH, 70H, 00H                 ; 108E _ 2.bmp.

__930   label byte
        db 67H, 66H, 78H, 2FH, 63H, 6CH, 6FH, 75H       ; 1094 _ gfx/clou
        db 64H, 2EH, 62H, 6DH, 70H, 00H                 ; 109C _ d.bmp.

__931   label byte
        db 67H, 66H, 78H, 2FH, 63H, 6CH, 6FH, 75H       ; 10A2 _ gfx/clou
        db 64H, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 10AA _ d2.bmp.

__vblimp_im label dword
        dd 00000000H                                    ; 10B1 _ 0 

__932   label byte
        db 67H, 66H, 78H, 5CH, 62H, 6CH, 69H, 6DH       ; 10B5 _ gfx\blim
        db 70H, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 10BD _ p.bmp...

__asmoke_ring_im label dword
        dd 00000000H, 00000001H                         ; 10C5 _ 0 1 
        dd 00000001H, 00000000H                         ; 10CD _ 1 0 

__933   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 6FH, 6BH       ; 10D5 _ gfx\smok
        db 65H, 20H, 72H, 69H, 6EH, 67H, 20H, 31H       ; 10DD _ e ring 1
        db 2EH, 62H, 6DH, 70H, 00H                      ; 10E5 _ .bmp.

__934   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 6FH, 6BH       ; 10EA _ gfx\smok
        db 65H, 20H, 72H, 69H, 6EH, 67H, 20H, 32H       ; 10F2 _ e ring 2
        db 2EH, 62H, 6DH, 70H, 00H                      ; 10FA _ .bmp.

__935   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 6FH, 6BH       ; 10FF _ gfx\smok
        db 65H, 20H, 72H, 69H, 6EH, 67H, 20H, 33H       ; 1107 _ e ring 3
        db 2EH, 62H, 6DH, 70H, 00H                      ; 110F _ .bmp.

__936   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 6FH, 6BH       ; 1114 _ gfx\smok
        db 65H, 20H, 72H, 69H, 6EH, 67H, 20H, 34H       ; 111C _ e ring 4
        db 2EH, 62H, 6DH, 70H, 00H                      ; 1124 _ .bmp.

__937   label byte
        db 67H, 66H, 78H, 5CH, 72H, 6FH, 63H, 6BH       ; 1129 _ gfx\rock
        db 65H, 74H, 20H, 74H, 72H, 61H, 69H, 6CH       ; 1131 _ et trail
        db 2EH, 62H, 6DH, 70H, 00H, 90H, 90H, 90H       ; 1139 _ .bmp....

__amorph_im label dword
        dd 00000000H, 00000001H                         ; 1141 _ 0 1 
        dd 00000001H, 00000000H                         ; 1149 _ 1 0 

__938   label byte
        db 66H, 6FH, 6EH, 74H, 2FH, 6DH, 6FH, 72H       ; 1151 _ font/mor
        db 70H, 68H, 2EH, 62H, 6DH, 70H, 00H            ; 1159 _ ph.bmp.

__939   label byte
        db 66H, 6FH, 6EH, 74H, 2FH, 6DH, 6FH, 72H       ; 1160 _ font/mor
        db 70H, 68H, 32H, 2EH, 62H, 6DH, 70H, 00H       ; 1168 _ ph2.bmp.
        db 90H                                          ; 1170 _ .

__vlittleships_im label dword
        dd 00000000H                                    ; 1171 _ 0 

__940   label byte
        db 67H, 66H, 78H, 5CH, 6CH, 69H, 74H, 74H       ; 1175 _ gfx\litt
        db 6CH, 65H, 73H, 68H, 69H, 70H, 73H, 2EH       ; 117D _ leships.
        db 62H, 6DH, 70H, 00H                           ; 1185 _ bmp.

__vfire_to_join_im label dword
        dd 00000000H                                    ; 1189 _ 0 

__941   label byte
        db 67H, 66H, 78H, 5CH, 66H, 69H, 72H, 65H       ; 118D _ gfx\fire
        db 20H, 74H, 6FH, 20H, 6AH, 6FH, 69H, 6EH       ; 1195 _  to join
        db 2EH, 62H, 6DH, 70H, 00H, 90H, 90H, 90H       ; 119D _ .bmp....

__vcredits_im label dword
        dd 00000000H                                    ; 11A5 _ 0 

__942   label byte
        db 67H, 66H, 78H, 5CH, 63H, 72H, 65H, 64H       ; 11A9 _ gfx\cred
        db 69H, 74H, 73H, 2EH, 62H, 6DH, 70H, 00H       ; 11B1 _ its.bmp.

__vcreditcount_im label dword
        dd 00000000H                                    ; 11B9 _ 0 

__943   label byte
        db 67H, 66H, 78H, 5CH, 63H, 72H, 65H, 64H       ; 11BD _ gfx\cred
        db 69H, 74H, 63H, 6FH, 75H, 6EH, 74H, 2EH       ; 11C5 _ itcount.
        db 62H, 6DH, 70H, 00H                           ; 11CD _ bmp.

__vcollect_these_im label dword
        dd 00000000H                                    ; 11D1 _ 0 

__944   label byte
        db 67H, 66H, 78H, 5CH, 63H, 6FH, 6CH, 6CH       ; 11D5 _ gfx\coll
        db 65H, 63H, 74H, 20H, 74H, 68H, 65H, 73H       ; 11DD _ ect thes
        db 65H, 2EH, 62H, 6DH, 70H, 00H, 90H, 90H       ; 11E5 _ e.bmp...

__vtitle_im label dword
        dd 00000000H                                    ; 11ED _ 0 

__asfx_sd label dword
        dd 00000000H, 00000001H                         ; 11F1 _ 0 1 
        dd 00000001H, 00000000H                         ; 11F9 _ 1 0 

__945   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 65H, 78H       ; 1201 _ sound/ex
        db 70H, 6CH, 6FH, 73H, 69H, 6FH, 6EH, 2DH       ; 1209 _ plosion-
        db 73H, 6DH, 61H, 6CH, 6CH, 2EH, 6FH, 67H       ; 1211 _ small.og
        db 67H, 00H                                     ; 1219 _ g.

__946   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 65H, 78H       ; 121B _ sound/ex
        db 70H, 6CH, 6FH, 73H, 69H, 6FH, 6EH, 2DH       ; 1223 _ plosion-
        db 6DH, 65H, 64H, 2EH, 6FH, 67H, 67H, 00H       ; 122B _ med.ogg.

__947   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 65H, 78H       ; 1233 _ sound/ex
        db 70H, 6CH, 6FH, 73H, 69H, 6FH, 6EH, 2DH       ; 123B _ plosion-
        db 62H, 69H, 67H, 2EH, 6FH, 67H, 67H, 00H       ; 1243 _ big.ogg.

__948   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 73H, 68H       ; 124B _ sound/sh
        db 6FH, 74H, 2DH, 31H, 2EH, 6FH, 67H, 67H       ; 1253 _ ot-1.ogg
        db 00H                                          ; 125B _ .

__949   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 77H, 69H       ; 125C _ sound/wi
        db 64H, 65H, 73H, 68H, 6FH, 74H, 2EH, 6FH       ; 1264 _ deshot.o
        db 67H, 67H, 00H                                ; 126C _ gg.

__950   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6DH, 61H       ; 126F _ sound/ma
        db 63H, 68H, 69H, 6EH, 65H, 67H, 75H, 6EH       ; 1277 _ chinegun
        db 2EH, 6FH, 67H, 67H, 00H                      ; 127F _ .ogg.

__951   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6DH, 69H       ; 1284 _ sound/mi
        db 73H, 73H, 69H, 6CH, 65H, 2EH, 6FH, 67H       ; 128C _ ssile.og
        db 67H, 00H                                     ; 1294 _ g.

__952   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 70H, 75H       ; 1296 _ sound/pu
        db 6CH, 73H, 65H, 2EH, 6FH, 67H, 67H, 00H       ; 129E _ lse.ogg.

__953   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 62H, 61H       ; 12A6 _ sound/ba
        db 6CH, 6CH, 6FH, 6FH, 6EH, 2DH, 70H, 6FH       ; 12AE _ lloon-po
        db 70H, 2EH, 6FH, 67H, 67H, 00H                 ; 12B6 _ p.ogg.

__954   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 67H, 65H       ; 12BC _ sound/ge
        db 74H, 66H, 72H, 75H, 69H, 74H, 2EH, 6FH       ; 12C4 _ tfruit.o
        db 67H, 67H, 00H                                ; 12CC _ gg.

__955   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 5CH, 62H, 6FH       ; 12CF _ sound\bo
        db 6EH, 75H, 73H, 2EH, 6FH, 67H, 67H, 00H       ; 12D7 _ nus.ogg.

__956   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 64H, 69H       ; 12DF _ sound/di
        db 6EH, 6BH, 2EH, 6FH, 67H, 67H, 00H            ; 12E7 _ nk.ogg.

__957   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 63H, 68H       ; 12EE _ sound/ch
        db 65H, 73H, 74H, 20H, 62H, 72H, 65H, 61H       ; 12F6 _ est brea
        db 6BH, 2EH, 6FH, 67H, 67H, 00H                 ; 12FE _ k.ogg.

__958   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 62H, 6FH       ; 1304 _ sound/bo
        db 6EH, 75H, 73H, 20H, 70H, 6FH, 69H, 6EH       ; 130C _ nus poin
        db 74H, 73H, 2EH, 6FH, 67H, 67H, 00H            ; 1314 _ ts.ogg.

__959   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6CH, 61H       ; 131B _ sound/la
        db 73H, 65H, 72H, 20H, 62H, 69H, 67H, 2EH       ; 1323 _ ser big.
        db 6FH, 67H, 67H, 00H                           ; 132B _ ogg.

__960   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6CH, 61H       ; 132F _ sound/la
        db 73H, 65H, 72H, 20H, 73H, 6DH, 61H, 6CH       ; 1337 _ ser smal
        db 6CH, 2EH, 6FH, 67H, 67H, 00H                 ; 133F _ l.ogg.

__961   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 65H, 72H       ; 1345 _ sound/er
        db 75H, 70H, 74H, 69H, 6FH, 6EH, 2EH, 6FH       ; 134D _ uption.o
        db 67H, 67H, 00H                                ; 1355 _ gg.

__962   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 77H, 6FH       ; 1358 _ sound/wo
        db 6FH, 73H, 68H, 2EH, 6FH, 67H, 67H, 00H       ; 1360 _ osh.ogg.

__963   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6CH, 69H       ; 1368 _ sound/li
        db 74H, 74H, 6CH, 65H, 20H, 73H, 70H, 6CH       ; 1370 _ ttle spl
        db 61H, 73H, 68H, 2EH, 6FH, 67H, 67H, 00H       ; 1378 _ ash.ogg.

__964   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 65H, 6EH       ; 1380 _ sound/en
        db 65H, 6DH, 79H, 20H, 6BH, 61H, 7AH, 61H       ; 1388 _ emy kaza
        db 70H, 2EH, 6FH, 67H, 67H, 00H                 ; 1390 _ p.ogg.

__965   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6BH, 65H       ; 1396 _ sound/ke
        db 72H, 73H, 70H, 6CH, 61H, 73H, 68H, 2EH       ; 139E _ rsplash.
        db 6FH, 67H, 67H, 00H, 90H, 90H, 90H            ; 13A6 _ ogg....

__vs_lightning label dword
        dd 00000000H                                    ; 13AD _ 0 

__966   label byte
        db 73H, 6FH, 75H, 6EH, 64H, 2FH, 6CH, 69H       ; 13B1 _ sound/li
        db 67H, 68H, 74H, 6EH, 69H, 6EH, 67H, 2EH       ; 13B9 _ ghtning.
        db 6FH, 67H, 67H, 00H                           ; 13C1 _ ogg.

__972   label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 74H, 69H       ; 13C5 _ music\ti
        db 74H, 6CH, 65H, 5FH, 74H, 75H, 6EH, 65H       ; 13CD _ tle_tune
        db 2EH, 6FH, 67H, 67H, 00H                      ; 13D5 _ .ogg.

__980   label byte
        db 67H, 66H, 78H, 2FH, 70H, 6CH, 61H, 74H       ; 13DA _ gfx/plat
        db 79H, 70H, 75H, 73H, 20H, 74H, 69H, 74H       ; 13E2 _ ypus tit
        db 6CH, 65H, 2EH, 62H, 6DH, 70H, 00H            ; 13EA _ le.bmp.

__986   label byte
        db 67H, 66H, 78H, 2FH, 62H, 69H, 67H, 20H       ; 13F1 _ gfx/big 
        db 70H, 6CH, 61H, 6EH, 65H, 74H, 2EH, 62H       ; 13F9 _ planet.b
        db 6DH, 70H, 00H                                ; 1401 _ mp.

__987   label byte
        db 67H, 66H, 78H, 5CH, 74H, 69H, 74H, 6CH       ; 1404 _ gfx\titl
        db 65H, 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH       ; 140C _ e balloo
        db 6EH, 20H, 79H, 65H, 6CH, 6CH, 6FH, 77H       ; 1414 _ n yellow
        db 2EH, 62H, 6DH, 70H, 00H                      ; 141C _ .bmp.

__988   label byte
        db 67H, 66H, 78H, 5CH, 74H, 69H, 74H, 6CH       ; 1421 _ gfx\titl
        db 65H, 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH       ; 1429 _ e balloo
        db 6EH, 20H, 72H, 65H, 64H, 2EH, 62H, 6DH       ; 1431 _ n red.bm
        db 70H, 00H                                     ; 1439 _ p.

__990   label byte
        db 67H, 66H, 78H, 5CH, 6EH, 61H, 67H, 5FH       ; 143B _ gfx\nag_
        db 73H, 63H, 72H, 65H, 65H, 6EH, 73H, 2EH       ; 1443 _ screens.
        db 62H, 6DH, 70H, 00H                           ; 144B _ bmp.

__991   label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 61H, 6CH       ; 144F _ gfx\smal
        db 6CH, 5FH, 6CH, 6FH, 67H, 6FH, 2EH, 62H       ; 1457 _ l_logo.b
        db 6DH, 70H, 00H                                ; 145F _ mp.

__995   label byte
        db 48H, 41H, 4CH, 4CH, 20H, 4FH, 46H, 20H       ; 1462 _ HALL OF 
        db 46H, 41H, 4DH, 45H, 00H                      ; 146A _ FAME.

__1000  label byte
        db 20H, 00H                                     ; 146F _  .

__1003  label byte
        db 43H, 4FH, 4CH, 4CH, 45H, 43H, 54H, 20H       ; 1471 _ COLLECT 
        db 54H, 48H, 45H, 53H, 45H, 21H, 00H            ; 1479 _ THESE!.

__1004  label byte
        db 57H, 49H, 44H, 45H, 20H, 53H, 48H, 4FH       ; 1480 _ WIDE SHO
        db 54H, 00H                                     ; 1488 _ T.

__1005  label byte
        db 41H, 55H, 54H, 4FH, 46H, 49H, 52H, 45H       ; 148A _ AUTOFIRE
        db 00H                                          ; 1492 _ .

__1006  label byte
        db 53H, 4FH, 4EH, 49H, 43H, 20H, 50H, 55H       ; 1493 _ SONIC PU
        db 4CH, 53H, 45H, 00H                           ; 149B _ LSE.

__1007  label byte
        db 52H, 4FH, 43H, 4BH, 45H, 54H, 53H, 00H       ; 149F _ ROCKETS.

__1008  label byte
        db 4CH, 49H, 47H, 48H, 54H, 4EH, 49H, 4EH       ; 14A7 _ LIGHTNIN
        db 47H, 00H                                     ; 14AF _ G.

__1009  label byte
        db 57H, 45H, 41H, 50H, 4FH, 4EH, 20H, 50H       ; 14B1 _ WEAPON P
        db 4FH, 44H, 53H, 00H                           ; 14B9 _ ODS.

__1012  label byte
        db 43H, 4FH, 4CH, 4CH, 45H, 43H, 54H, 20H       ; 14BD _ COLLECT 
        db 54H, 48H, 45H, 53H, 45H, 21H, 00H            ; 14C5 _ THESE!.

__1013  label byte
        db 31H, 35H, 30H, 20H, 50H, 4FH, 49H, 4EH       ; 14CC _ 150 POIN
        db 54H, 53H, 00H                                ; 14D4 _ TS.

__1014  label byte
        db 32H, 35H, 30H, 20H, 50H, 4FH, 49H, 4EH       ; 14D7 _ 250 POIN
        db 54H, 53H, 00H                                ; 14DF _ TS.

__1015  label byte
        db 35H, 30H, 30H, 20H, 50H, 4FH, 49H, 4EH       ; 14E2 _ 500 POIN
        db 54H, 53H, 00H                                ; 14EA _ TS.

__1016  label byte
        db 31H, 30H, 30H, 20H, 50H, 4FH, 49H, 4EH       ; 14ED _ 100 POIN
        db 54H, 53H, 00H                                ; 14F5 _ TS.

__1017  label byte
        db 35H, 30H, 30H, 20H, 50H, 4FH, 49H, 4EH       ; 14F8 _ 500 POIN
        db 54H, 53H, 00H                                ; 1500 _ TS.

__1018  label byte
        db 50H, 4FH, 49H, 4EH, 54H, 53H, 20H, 44H       ; 1503 _ POINTS D
        db 4FH, 55H, 42H, 4CH, 45H, 52H, 00H, 90H       ; 150B _ OUBLER..
        db 90H, 90H                                     ; 1513 _ ..

__vplanecounter label dword
        dd 00000000H                                    ; 1515 _ 0 

__vkillthrusters label dword
        dd 00000000H                                    ; 1519 _ 0 

__vtraincounter label dword
        dd 00000000H                                    ; 151D _ 0 

__verupt dd 00000000H                                   ; 1521 _ 0 

__vmountedguns label dword
        dd 00000000H                                    ; 1525 _ 0 

__awaterfaller label dword
        dd 00000000H, 00000001H                         ; 1529 _ 0 1 
        dd 00000001H, 00000000H                         ; 1531 _ 1 0 

__adoubler label dword
        dd 00000000H, 00000001H                         ; 1539 _ 0 1 
        dd 00000001H, 00000000H                         ; 1541 _ 1 0 

__vexplod label dword
        dd 00000000H                                    ; 1549 _ 0 

__vspecial label dword
        dd 00000000H                                    ; 154D _ 0 

__vfirewait label dword
        dd 00000000H                                    ; 1551 _ 0 

__vhoming_speed label dword
        dd 00000000H                                    ; 1555 _ 0 

__vpt1  dd 00000000H                                    ; 1559 _ 0 

__vpt2  dd 00000000H                                    ; 155D _ 0 

__vfirstplane label dword
        dd 00000000H                                    ; 1561 _ 0 

__vcounter2 label dword
        dd 00000000H                                    ; 1565 _ 0 

__1178  label byte
        db 50H, 41H, 55H, 53H, 45H, 44H, 3AH, 00H       ; 1569 _ PAUSED:.

__1179  label byte
        db 50H, 52H, 45H, 53H, 53H, 20H, 45H, 53H       ; 1571 _ PRESS ES
        db 43H, 20H, 54H, 4FH, 20H, 51H, 55H, 49H       ; 1579 _ C TO QUI
        db 54H, 00H                                     ; 1581 _ T.

__1180  label byte
        db 41H, 4EH, 59H, 20H, 4BH, 45H, 59H, 20H       ; 1583 _ ANY KEY 
        db 54H, 4FH, 20H, 43H, 4FH, 4EH, 54H, 49H       ; 158B _ TO CONTI
        db 4EH, 55H, 45H, 00H                           ; 1593 _ NUE.

__1214  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 74H, 69H       ; 1597 _ music\ti
        db 74H, 6CH, 65H, 5FH, 74H, 75H, 6EH, 65H       ; 159F _ tle_tune
        db 2EH, 6FH, 67H, 67H, 00H                      ; 15A7 _ .ogg.

__1218  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 6CH, 65H       ; 15AC _ music\le
        db 76H, 65H, 6CH, 5FH, 73H, 65H, 6CH, 65H       ; 15B4 _ vel_sele
        db 63H, 74H, 2EH, 6FH, 67H, 67H, 00H            ; 15BC _ ct.ogg.

__1222  label byte
        db 67H, 66H, 78H, 2FH, 77H, 6FH, 72H, 6CH       ; 15C3 _ gfx/worl
        db 64H, 31H, 2EH, 62H, 6DH, 70H, 00H            ; 15CB _ d1.bmp.

__1225  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 65H, 67H, 00H       ; 15D2 _ gfx\leg.

__1226  label byte
        db 2EH, 62H, 6DH, 70H, 00H, 90H, 90H            ; 15DA _ .bmp...

__asel_im label dword
        dd 00000000H, 00000001H                         ; 15E1 _ 0 1 
        dd 00000001H, 00000000H                         ; 15E9 _ 1 0 

__1229  label byte
        db 67H, 66H, 78H, 5CH, 73H, 65H, 6CH, 00H       ; 15F1 _ gfx\sel.

__1230  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 15F9 _ .bmp.

__1231  label byte
        db 53H, 45H, 4CH, 45H, 43H, 54H, 20H, 53H       ; 15FE _ SELECT S
        db 54H, 41H, 52H, 54H, 49H, 4EH, 47H, 20H       ; 1606 _ TARTING 
        db 4CH, 45H, 56H, 45H, 4CH, 00H, 90H            ; 160E _ LEVEL..

__aex_play label byte
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; 1615 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 161D _ ........

__abloop_play label byte
        db 00H, 00H, 00H, 00H, 01H, 00H, 00H, 00H       ; 1625 _ ........
        db 01H, 00H, 00H, 00H, 00H, 00H, 00H, 00H       ; 162D _ ........

__1280  label byte
        db 43H, 4FH, 4EH, 54H, 49H, 4EH, 55H, 45H       ; 1635 _ CONTINUE
        db 3FH, 00H                                     ; 163D _ ?.

__1281  label byte
        db 31H, 30H, 00H                                ; 163F _ 10.

__1282  label byte
        db 2EH, 00H                                     ; 1642 _ ..

__1283  label byte
        db 30H, 30H, 00H                                ; 1644 _ 00.

__1284  label byte
        db 47H, 41H, 4DH, 45H, 20H, 4FH, 56H, 45H       ; 1647 _ GAME OVE
        db 52H, 00H                                     ; 164F _ R.

__1286  label byte
        db 31H, 30H, 00H                                ; 1651 _ 10.

__1289  label byte
        db 30H, 30H, 00H                                ; 1654 _ 00.

__1291  label byte
        db 30H, 00H                                     ; 1657 _ 0.

__1396  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 62H, 61H       ; 1659 _ music\ba
        db 64H, 64H, 69H, 65H, 5FH, 74H, 75H, 6EH       ; 1661 _ ddie_tun
        db 65H, 2EH, 6FH, 67H, 67H, 00H                 ; 1669 _ e.ogg.

__1398  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 62H, 61H       ; 166F _ music\ba
        db 64H, 64H, 69H, 65H, 5FH, 74H, 75H, 6EH       ; 1677 _ ddie_tun
        db 65H, 5FH, 32H, 2EH, 6FH, 67H, 67H, 00H       ; 167F _ e_2.ogg.

__1430  label byte
        db 54H, 48H, 45H, 20H, 45H, 4EH, 44H, 00H       ; 1687 _ THE END.

__1431  label byte
        db 4CH, 45H, 56H, 45H, 4CH, 20H, 00H            ; 168F _ LEVEL .

__1432  label byte
        db 41H, 52H, 45H, 41H, 20H, 00H                 ; 1696 _ AREA .

__1433  label byte
        db 41H, 52H, 45H, 41H, 20H, 00H                 ; 169C _ AREA .

__1437  label byte
        db 45H, 56H, 41H, 4CH, 55H, 41H, 54H, 49H       ; 16A2 _ EVALUATI
        db 4FH, 4EH, 00H                                ; 16AA _ ON.

__1439  label byte
        db 50H, 52H, 49H, 4DH, 41H, 52H, 59H, 20H       ; 16AD _ PRIMARY 
        db 54H, 41H, 52H, 47H, 45H, 54H, 53H, 3AH       ; 16B5 _ TARGETS:
        db 00H                                          ; 16BD _ .

__1441  label byte
        db 20H, 00H                                     ; 16BE _  .

__1443  label byte
        db 20H, 00H                                     ; 16C0 _  .

__1444  label byte
        db 25H, 00H                                     ; 16C2 _ %.

__1445  label byte
        db 53H, 45H, 43H, 4FH, 4EH, 44H, 41H, 52H       ; 16C4 _ SECONDAR
        db 59H, 20H, 43H, 52H, 41H, 46H, 54H, 3AH       ; 16CC _ Y CRAFT:
        db 00H                                          ; 16D4 _ .

__1447  label byte
        db 20H, 00H                                     ; 16D5 _  .

__1449  label byte
        db 20H, 00H                                     ; 16D7 _  .

__1450  label byte
        db 25H, 00H                                     ; 16D9 _ %.

__1451  label byte
        db 4FH, 56H, 45H, 52H, 41H, 4CH, 4CH, 20H       ; 16DB _ OVERALL 
        db 53H, 55H, 43H, 43H, 45H, 53H, 53H, 3AH       ; 16E3 _ SUCCESS:
        db 00H                                          ; 16EB _ .

__1453  label byte
        db 20H, 00H                                     ; 16EC _  .

__1455  label byte
        db 20H, 00H                                     ; 16EE _  .

__1456  label byte
        db 25H, 00H                                     ; 16F0 _ %.

__1464  label byte
        db 20H, 20H, 4EH, 4FH, 20H, 42H, 4FH, 4EH       ; 16F2 _   NO BON
        db 55H, 53H, 00H                                ; 16FA _ US.

__1468  label byte
        db 42H, 4FH, 4EH, 55H, 53H, 00H                 ; 16FD _ BONUS.

__1469  label byte
        db 00H                                          ; 1703 _ .

__1471  label byte
        db 50H, 45H, 52H, 46H, 45H, 43H, 54H, 21H       ; 1704 _ PERFECT!
        db 20H, 42H, 4FH, 4EH, 55H, 53H, 20H, 00H       ; 170C _  BONUS .

__1472  label byte
        db 00H                                          ; 1714 _ .

__1474  label byte
        db 20H, 4EH, 4FH, 20H, 42H, 4FH, 4EH, 55H       ; 1715 _  NO BONU
        db 53H, 00H                                     ; 171D _ S.

__1476  label byte
        db 53H, 50H, 45H, 43H, 49H, 41H, 4CH, 20H       ; 171F _ SPECIAL 
        db 42H, 4FH, 4EH, 55H, 53H, 20H, 41H, 57H       ; 1727 _ BONUS AW
        db 41H, 52H, 44H, 45H, 44H, 21H, 00H            ; 172F _ ARDED!.

__1478  label byte
        db 42H, 4FH, 4EH, 55H, 53H, 00H                 ; 1736 _ BONUS.

__1479  label byte
        db 00H                                          ; 173C _ .

__1501  label byte
        db 30H, 30H, 30H, 30H, 30H, 30H, 00H            ; 173D _ 000000.

__1503  label byte
        db 30H, 30H, 30H, 30H, 00H                      ; 1744 _ 0000.

__1505  label byte
        db 30H, 30H, 30H, 30H, 30H, 00H                 ; 1749 _ 00000.

__1507  label byte
        db 30H, 30H, 30H, 00H                           ; 174F _ 000.

__1509  label byte
        db 44H, 45H, 4DH, 4FH, 20H, 43H, 4FH, 4DH       ; 1753 _ DEMO COM
        db 50H, 4CH, 45H, 54H, 45H, 44H, 21H, 00H       ; 175B _ PLETED!.

__1511  label byte
        db 4CH, 45H, 56H, 45H, 4CH, 20H, 43H, 4FH       ; 1763 _ LEVEL CO
        db 4DH, 50H, 4CH, 45H, 54H, 45H, 21H, 00H       ; 176B _ MPLETE!.

__1512  label byte
        db 4DH, 49H, 53H, 53H, 49H, 4FH, 4EH, 20H       ; 1773 _ MISSION 
        db 43H, 4FH, 4DH, 50H, 4CH, 45H, 54H, 45H       ; 177B _ COMPLETE
        db 21H, 00H                                     ; 1783 _ !.

__1514  label byte
        db 42H, 4FH, 4EH, 55H, 53H, 3AH, 20H, 31H       ; 1785 _ BONUS: 1
        db 20H, 43H, 52H, 45H, 44H, 49H, 54H, 00H       ; 178D _  CREDIT.

__1919  label byte
        db 69H, 6DH, 3AH, 20H, 00H                      ; 1795 _ im: .

__1920  label byte
        db 6CH, 6FH, 61H, 64H, 65H, 64H, 3AH, 20H       ; 179A _ loaded: 
        db 00H                                          ; 17A2 _ .

__1921  label byte
        db 6CH, 61H, 79H, 65H, 72H, 3AH, 20H, 00H       ; 17A3 _ layer: .

__1922  label byte
        db 61H, 63H, 74H, 69H, 76H, 65H, 3AH, 20H       ; 17AB _ active: 
        db 00H, 90H                                     ; 17B3 _ ..

__aexplosion_active label dword
        dd 00000000H, 00000001H                         ; 17B5 _ 0 1 
        dd 00000001H, 00000000H                         ; 17BD _ 1 0 

__2002  label byte
        db 67H, 66H, 78H, 5CH, 74H, 72H, 61H, 79H       ; 17C5 _ gfx\tray
        db 2EH, 62H, 6DH, 70H, 00H                      ; 17CD _ .bmp.

__2003  label byte
        db 67H, 66H, 78H, 5CH, 74H, 72H, 61H, 6EH       ; 17D2 _ gfx\tran
        db 73H, 70H, 6FH, 72H, 74H, 20H, 74H, 6FH       ; 17DA _ sport to
        db 70H, 2EH, 62H, 6DH, 70H, 00H                 ; 17E2 _ p.bmp.

__2004  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 72H, 20H       ; 17E8 _ gfx\war 
        db 74H, 6FH, 70H, 2EH, 62H, 6DH, 70H, 00H       ; 17F0 _ top.bmp.

__2005  label byte
        db 67H, 66H, 78H, 5CH, 66H, 72H, 6FH, 6EH       ; 17F8 _ gfx\fron
        db 74H, 20H, 63H, 61H, 72H, 2EH, 62H, 6DH       ; 1800 _ t car.bm
        db 70H, 00H                                     ; 1808 _ p.

__2006  label byte
        db 67H, 66H, 78H, 2FH, 73H, 75H, 73H, 70H       ; 180A _ gfx/susp
        db 65H, 6EH, 73H, 69H, 6FH, 6EH, 2EH, 62H       ; 1812 _ ension.b
        db 6DH, 70H, 00H                                ; 181A _ mp.

__2007  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 69H, 73H, 73H       ; 181D _ gfx\miss
        db 69H, 6CH, 65H, 20H, 68H, 61H, 74H, 63H       ; 1825 _ ile hatc
        db 68H, 2EH, 62H, 6DH, 70H, 00H                 ; 182D _ h.bmp.

__2008  label byte
        db 67H, 66H, 78H, 2FH, 77H, 68H, 65H, 65H       ; 1833 _ gfx/whee
        db 6CH, 2EH, 62H, 6DH, 70H, 00H                 ; 183B _ l.bmp.

__2009  label byte
        db 67H, 66H, 78H, 2FH, 62H, 69H, 67H, 20H       ; 1841 _ gfx/big 
        db 67H, 75H, 6EH, 2EH, 62H, 6DH, 70H, 00H       ; 1849 _ gun.bmp.

__abase_active label dword
        dd 00000000H, 00000001H                         ; 1851 _ 0 1 
        dd 00000001H, 00000000H                         ; 1859 _ 1 0 

__2168  label byte
        db 46H, 52H, 45H, 45H, 20H, 54H, 52H, 49H       ; 1861 _ FREE TRI
        db 41H, 4CH, 20H, 00H                           ; 1869 _ AL .

__2169  label byte
        db 3AH, 00H                                     ; 186D _ :.

__2171  label byte
        db 46H, 52H, 45H, 45H, 20H, 54H, 52H, 49H       ; 186F _ FREE TRI
        db 41H, 4CH, 20H, 00H                           ; 1877 _ AL .

__2172  label byte
        db 3AH, 30H, 00H, 90H, 90H, 90H                 ; 187B _ :0....

__vdeltax label dword
        dd 00000000H                                    ; 1881 _ 0 

__vdeltay label dword
        dd 00000000H                                    ; 1885 _ 0 

__tpic_shard label byte
        db 05H, 00H, 00H, 00H                           ; 1889 _ ....

__2182  label byte
        db 00H, 00H, 00H, 00H                           ; 188D _ ....
        dd __2182                                       ; 1891 _ 00000000 (d)
        dd __2182                                       ; 1895 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1899 _ 0 -1 

__2183  label byte
        db 00H, 00H, 00H, 00H                           ; 18A1 _ ....
        dd __2183                                       ; 18A5 _ 00000000 (d)
        dd __2183                                       ; 18A9 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 18AD _ 0 -1 
        dd 00000005H                                    ; 18B5 _ 5 
        dd ___bbIntType                                 ; 18B9 _ 00000000 (d)
        dd ___bbFltType                                 ; 18BD _ 00000000 (d)
        dd ___bbFltType                                 ; 18C1 _ 00000000 (d)
        dd ___bbFltType                                 ; 18C5 _ 00000000 (d)
        dd ___bbIntType                                 ; 18C9 _ 00000000 (d)

__ttitle_cloud label byte
        db 05H, 00H, 00H, 00H                           ; 18CD _ ....

__2184  label byte
        db 00H, 00H, 00H, 00H                           ; 18D1 _ ....
        dd __2184                                       ; 18D5 _ 00000000 (d)
        dd __2184                                       ; 18D9 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 18DD _ 0 -1 

__2185  label byte
        db 00H, 00H, 00H, 00H                           ; 18E5 _ ....
        dd __2185                                       ; 18E9 _ 00000000 (d)
        dd __2185                                       ; 18ED _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 18F1 _ 0 -1 
        dd 00000005H                                    ; 18F9 _ 5 
        dd ___bbFltType                                 ; 18FD _ 00000000 (d)
        dd ___bbFltType                                 ; 1901 _ 00000000 (d)
        dd ___bbFltType                                 ; 1905 _ 00000000 (d)
        dd ___bbFltType                                 ; 1909 _ 00000000 (d)
        dd ___bbIntType                                 ; 190D _ 00000000 (d)

__tletter label byte
        db 05H, 00H, 00H, 00H                           ; 1911 _ ....

__2186  label byte
        db 00H, 00H, 00H, 00H                           ; 1915 _ ....
        dd __2186                                       ; 1919 _ 00000000 (d)
        dd __2186                                       ; 191D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1921 _ 0 -1 

__2187  label byte
        db 00H, 00H, 00H, 00H                           ; 1929 _ ....
        dd __2187                                       ; 192D _ 00000000 (d)
        dd __2187                                       ; 1931 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1935 _ 0 -1 
        dd 0000000AH                                    ; 193D _ 10 
        dd ___bbIntType                                 ; 1941 _ 00000000 (d)
        dd ___bbFltType                                 ; 1945 _ 00000000 (d)
        dd ___bbFltType                                 ; 1949 _ 00000000 (d)
        dd ___bbIntType                                 ; 194D _ 00000000 (d)
        dd ___bbIntType                                 ; 1951 _ 00000000 (d)
        dd ___bbIntType                                 ; 1955 _ 00000000 (d)
        dd ___bbIntType                                 ; 1959 _ 00000000 (d)
        dd ___bbIntType                                 ; 195D _ 00000000 (d)
        dd ___bbIntType                                 ; 1961 _ 00000000 (d)
        dd ___bbIntType                                 ; 1965 _ 00000000 (d)

__tdigit label byte
        db 05H, 00H, 00H, 00H                           ; 1969 _ ....

__2188  label byte
        db 00H, 00H, 00H, 00H                           ; 196D _ ....
        dd __2188                                       ; 1971 _ 00000000 (d)
        dd __2188                                       ; 1975 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1979 _ 0 -1 

__2189  label byte
        db 00H, 00H, 00H, 00H                           ; 1981 _ ....
        dd __2189                                       ; 1985 _ 00000000 (d)
        dd __2189                                       ; 1989 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 198D _ 0 -1 
        dd 00000008H                                    ; 1995 _ 8 
        dd ___bbIntType                                 ; 1999 _ 00000000 (d)
        dd ___bbIntType                                 ; 199D _ 00000000 (d)
        dd ___bbIntType                                 ; 19A1 _ 00000000 (d)
        dd ___bbIntType                                 ; 19A5 _ 00000000 (d)
        dd ___bbIntType                                 ; 19A9 _ 00000000 (d)
        dd ___bbIntType                                 ; 19AD _ 00000000 (d)
        dd ___bbIntType                                 ; 19B1 _ 00000000 (d)
        dd ___bbIntType                                 ; 19B5 _ 00000000 (d)

__tscroll_letter label byte
        db 05H, 00H, 00H, 00H                           ; 19B9 _ ....

__2190  label byte
        db 00H, 00H, 00H, 00H                           ; 19BD _ ....
        dd __2190                                       ; 19C1 _ 00000000 (d)
        dd __2190                                       ; 19C5 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 19C9 _ 0 -1 

__2191  label byte
        db 00H, 00H, 00H, 00H                           ; 19D1 _ ....
        dd __2191                                       ; 19D5 _ 00000000 (d)
        dd __2191                                       ; 19D9 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 19DD _ 0 -1 
        dd 00000003H                                    ; 19E5 _ 3 
        dd ___bbIntType                                 ; 19E9 _ 00000000 (d)
        dd ___bbIntType                                 ; 19ED _ 00000000 (d)
        dd ___bbFltType                                 ; 19F1 _ 00000000 (d)

__tscores label byte
        db 05H, 00H, 00H, 00H                           ; 19F5 _ ....

__2192  label byte
        db 00H, 00H, 00H, 00H                           ; 19F9 _ ....
        dd __2192                                       ; 19FD _ 00000000 (d)
        dd __2192                                       ; 1A01 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1A05 _ 0 -1 

__2193  label byte
        db 00H, 00H, 00H, 00H                           ; 1A0D _ ....
        dd __2193                                       ; 1A11 _ 00000000 (d)
        dd __2193                                       ; 1A15 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1A19 _ 0 -1 
        dd 00000004H                                    ; 1A21 _ 4 
        dd ___bbFltType                                 ; 1A25 _ 00000000 (d)
        dd ___bbIntType                                 ; 1A29 _ 00000000 (d)
        dd ___bbIntType                                 ; 1A2D _ 00000000 (d)
        dd ___bbIntType                                 ; 1A31 _ 00000000 (d)

__thill label byte
        db 05H, 00H, 00H, 00H                           ; 1A35 _ ....

__2194  label byte
        db 00H, 00H, 00H, 00H                           ; 1A39 _ ....
        dd __2194                                       ; 1A3D _ 00000000 (d)
        dd __2194                                       ; 1A41 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1A45 _ 0 -1 

__2195  label byte
        db 00H, 00H, 00H, 00H                           ; 1A4D _ ....
        dd __2195                                       ; 1A51 _ 00000000 (d)
        dd __2195                                       ; 1A55 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1A59 _ 0 -1 
        dd 00000003H                                    ; 1A61 _ 3 
        dd ___bbFltType                                 ; 1A65 _ 00000000 (d)
        dd ___bbIntType                                 ; 1A69 _ 00000000 (d)
        dd ___bbIntType                                 ; 1A6D _ 00000000 (d)

__tbird label byte
        db 05H, 00H, 00H, 00H                           ; 1A71 _ ....

__2196  label byte
        db 00H, 00H, 00H, 00H                           ; 1A75 _ ....
        dd __2196                                       ; 1A79 _ 00000000 (d)
        dd __2196                                       ; 1A7D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1A81 _ 0 -1 

__2197  label byte
        db 00H, 00H, 00H, 00H                           ; 1A89 _ ....
        dd __2197                                       ; 1A8D _ 00000000 (d)
        dd __2197                                       ; 1A91 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1A95 _ 0 -1 
        dd 00000005H                                    ; 1A9D _ 5 
        dd ___bbFltType                                 ; 1AA1 _ 00000000 (d)
        dd ___bbFltType                                 ; 1AA5 _ 00000000 (d)
        dd ___bbFltType                                 ; 1AA9 _ 00000000 (d)
        dd ___bbFltType                                 ; 1AAD _ 00000000 (d)
        dd ___bbIntType                                 ; 1AB1 _ 00000000 (d)

__tsmoke_ring label byte
        db 05H, 00H, 00H, 00H                           ; 1AB5 _ ....

__2198  label byte
        db 00H, 00H, 00H, 00H                           ; 1AB9 _ ....
        dd __2198                                       ; 1ABD _ 00000000 (d)
        dd __2198                                       ; 1AC1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1AC5 _ 0 -1 

__2199  label byte
        db 00H, 00H, 00H, 00H                           ; 1ACD _ ....
        dd __2199                                       ; 1AD1 _ 00000000 (d)
        dd __2199                                       ; 1AD5 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1AD9 _ 0 -1 
        dd 00000007H                                    ; 1AE1 _ 7 
        dd ___bbFltType                                 ; 1AE5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1AE9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1AED _ 00000000 (d)
        dd ___bbIntType                                 ; 1AF1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1AF5 _ 00000000 (d)
        dd ___bbFltType                                 ; 1AF9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1AFD _ 00000000 (d)

__tstar label byte
        db 05H, 00H, 00H, 00H                           ; 1B01 _ ....

__2200  label byte
        db 00H, 00H, 00H, 00H                           ; 1B05 _ ....
        dd __2200                                       ; 1B09 _ 00000000 (d)
        dd __2200                                       ; 1B0D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1B11 _ 0 -1 

__2201  label byte
        db 00H, 00H, 00H, 00H                           ; 1B19 _ ....
        dd __2201                                       ; 1B1D _ 00000000 (d)
        dd __2201                                       ; 1B21 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1B25 _ 0 -1 
        dd 00000006H                                    ; 1B2D _ 6 
        dd ___bbIntType                                 ; 1B31 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B35 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B39 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B3D _ 00000000 (d)
        dd ___bbIntType                                 ; 1B41 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B45 _ 00000000 (d)

__tbonus label byte
        db 05H, 00H, 00H, 00H                           ; 1B49 _ ....

__2202  label byte
        db 00H, 00H, 00H, 00H                           ; 1B4D _ ....
        dd __2202                                       ; 1B51 _ 00000000 (d)
        dd __2202                                       ; 1B55 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1B59 _ 0 -1 

__2203  label byte
        db 00H, 00H, 00H, 00H                           ; 1B61 _ ....
        dd __2203                                       ; 1B65 _ 00000000 (d)
        dd __2203                                       ; 1B69 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1B6D _ 0 -1 
        dd 0000000AH                                    ; 1B75 _ 10 
        dd ___bbFltType                                 ; 1B79 _ 00000000 (d)
        dd ___bbFltType                                 ; 1B7D _ 00000000 (d)
        dd ___bbFltType                                 ; 1B81 _ 00000000 (d)
        dd ___bbFltType                                 ; 1B85 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B89 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B8D _ 00000000 (d)
        dd ___bbIntType                                 ; 1B91 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B95 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B99 _ 00000000 (d)
        dd ___bbIntType                                 ; 1B9D _ 00000000 (d)

__tballoon label byte
        db 05H, 00H, 00H, 00H                           ; 1BA1 _ ....

__2204  label byte
        db 00H, 00H, 00H, 00H                           ; 1BA5 _ ....
        dd __2204                                       ; 1BA9 _ 00000000 (d)
        dd __2204                                       ; 1BAD _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1BB1 _ 0 -1 

__2205  label byte
        db 00H, 00H, 00H, 00H                           ; 1BB9 _ ....
        dd __2205                                       ; 1BBD _ 00000000 (d)
        dd __2205                                       ; 1BC1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1BC5 _ 0 -1 
        dd 00000009H                                    ; 1BCD _ 9 
        dd ___bbFltType                                 ; 1BD1 _ 00000000 (d)
        dd ___bbFltType                                 ; 1BD5 _ 00000000 (d)
        dd ___bbFltType                                 ; 1BD9 _ 00000000 (d)
        dd ___bbFltType                                 ; 1BDD _ 00000000 (d)
        dd ___bbIntType                                 ; 1BE1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1BE5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1BE9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1BED _ 00000000 (d)
        dd ___bbIntType                                 ; 1BF1 _ 00000000 (d)

__tskystar label byte
        db 05H, 00H, 00H, 00H                           ; 1BF5 _ ....

__2206  label byte
        db 00H, 00H, 00H, 00H                           ; 1BF9 _ ....
        dd __2206                                       ; 1BFD _ 00000000 (d)
        dd __2206                                       ; 1C01 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1C05 _ 0 -1 

__2207  label byte
        db 00H, 00H, 00H, 00H                           ; 1C0D _ ....
        dd __2207                                       ; 1C11 _ 00000000 (d)
        dd __2207                                       ; 1C15 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1C19 _ 0 -1 
        dd 00000002H                                    ; 1C21 _ 2 
        dd ___bbIntType                                 ; 1C25 _ 00000000 (d)
        dd ___bbIntType                                 ; 1C29 _ 00000000 (d)

__tparachuter label byte
        db 05H, 00H, 00H, 00H                           ; 1C2D _ ....

__2208  label byte
        db 00H, 00H, 00H, 00H                           ; 1C31 _ ....
        dd __2208                                       ; 1C35 _ 00000000 (d)
        dd __2208                                       ; 1C39 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1C3D _ 0 -1 

__2209  label byte
        db 00H, 00H, 00H, 00H                           ; 1C45 _ ....
        dd __2209                                       ; 1C49 _ 00000000 (d)
        dd __2209                                       ; 1C4D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1C51 _ 0 -1 
        dd 00000008H                                    ; 1C59 _ 8 
        dd ___bbFltType                                 ; 1C5D _ 00000000 (d)
        dd ___bbFltType                                 ; 1C61 _ 00000000 (d)
        dd ___bbFltType                                 ; 1C65 _ 00000000 (d)
        dd ___bbFltType                                 ; 1C69 _ 00000000 (d)
        dd ___bbIntType                                 ; 1C6D _ 00000000 (d)
        dd ___bbIntType                                 ; 1C71 _ 00000000 (d)
        dd ___bbIntType                                 ; 1C75 _ 00000000 (d)
        dd ___bbIntType                                 ; 1C79 _ 00000000 (d)

__tflash label byte
        db 05H, 00H, 00H, 00H                           ; 1C7D _ ....

__2210  label byte
        db 00H, 00H, 00H, 00H                           ; 1C81 _ ....
        dd __2210                                       ; 1C85 _ 00000000 (d)
        dd __2210                                       ; 1C89 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1C8D _ 0 -1 

__2211  label byte
        db 00H, 00H, 00H, 00H                           ; 1C95 _ ....
        dd __2211                                       ; 1C99 _ 00000000 (d)
        dd __2211                                       ; 1C9D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1CA1 _ 0 -1 
        dd 00000005H                                    ; 1CA9 _ 5 
        dd ___bbFltType                                 ; 1CAD _ 00000000 (d)
        dd ___bbFltType                                 ; 1CB1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1CB5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1CB9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1CBD _ 00000000 (d)

__tboulder label byte
        db 05H, 00H, 00H, 00H                           ; 1CC1 _ ....

__2212  label byte
        db 00H, 00H, 00H, 00H                           ; 1CC5 _ ....
        dd __2212                                       ; 1CC9 _ 00000000 (d)
        dd __2212                                       ; 1CCD _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1CD1 _ 0 -1 

__2213  label byte
        db 00H, 00H, 00H, 00H                           ; 1CD9 _ ....
        dd __2213                                       ; 1CDD _ 00000000 (d)
        dd __2213                                       ; 1CE1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1CE5 _ 0 -1 
        dd 00000005H                                    ; 1CED _ 5 
        dd ___bbFltType                                 ; 1CF1 _ 00000000 (d)
        dd ___bbFltType                                 ; 1CF5 _ 00000000 (d)
        dd ___bbFltType                                 ; 1CF9 _ 00000000 (d)
        dd ___bbFltType                                 ; 1CFD _ 00000000 (d)
        dd ___bbIntType                                 ; 1D01 _ 00000000 (d)

__tblimp label byte
        db 05H, 00H, 00H, 00H                           ; 1D05 _ ....

__2214  label byte
        db 00H, 00H, 00H, 00H                           ; 1D09 _ ....
        dd __2214                                       ; 1D0D _ 00000000 (d)
        dd __2214                                       ; 1D11 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1D15 _ 0 -1 

__2215  label byte
        db 00H, 00H, 00H, 00H                           ; 1D1D _ ....
        dd __2215                                       ; 1D21 _ 00000000 (d)
        dd __2215                                       ; 1D25 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1D29 _ 0 -1 
        dd 00000004H                                    ; 1D31 _ 4 
        dd ___bbIntType                                 ; 1D35 _ 00000000 (d)
        dd ___bbIntType                                 ; 1D39 _ 00000000 (d)
        dd ___bbIntType                                 ; 1D3D _ 00000000 (d)
        dd ___bbFltType                                 ; 1D41 _ 00000000 (d)

__tmoon label byte
        db 05H, 00H, 00H, 00H                           ; 1D45 _ ....

__2216  label byte
        db 00H, 00H, 00H, 00H                           ; 1D49 _ ....
        dd __2216                                       ; 1D4D _ 00000000 (d)
        dd __2216                                       ; 1D51 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1D55 _ 0 -1 

__2217  label byte
        db 00H, 00H, 00H, 00H                           ; 1D5D _ ....
        dd __2217                                       ; 1D61 _ 00000000 (d)
        dd __2217                                       ; 1D65 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1D69 _ 0 -1 
        dd 00000007H                                    ; 1D71 _ 7 
        dd ___bbFltType                                 ; 1D75 _ 00000000 (d)
        dd ___bbFltType                                 ; 1D79 _ 00000000 (d)
        dd ___bbFltType                                 ; 1D7D _ 00000000 (d)
        dd ___bbFltType                                 ; 1D81 _ 00000000 (d)
        dd ___bbIntType                                 ; 1D85 _ 00000000 (d)
        dd ___bbIntType                                 ; 1D89 _ 00000000 (d)
        dd ___bbIntType                                 ; 1D8D _ 00000000 (d)

__tplayershot label byte
        db 05H, 00H, 00H, 00H                           ; 1D91 _ ....

__2218  label byte
        db 00H, 00H, 00H, 00H                           ; 1D95 _ ....
        dd __2218                                       ; 1D99 _ 00000000 (d)
        dd __2218                                       ; 1D9D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1DA1 _ 0 -1 

__2219  label byte
        db 00H, 00H, 00H, 00H                           ; 1DA9 _ ....
        dd __2219                                       ; 1DAD _ 00000000 (d)
        dd __2219                                       ; 1DB1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1DB5 _ 0 -1 
        dd 00000009H                                    ; 1DBD _ 9 
        dd ___bbIntType                                 ; 1DC1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1DC5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1DC9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1DCD _ 00000000 (d)
        dd ___bbIntType                                 ; 1DD1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1DD5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1DD9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1DDD _ 00000000 (d)
        dd ___bbIntType                                 ; 1DE1 _ 00000000 (d)

__tenemyshot label byte
        db 05H, 00H, 00H, 00H                           ; 1DE5 _ ....

__2220  label byte
        db 00H, 00H, 00H, 00H                           ; 1DE9 _ ....
        dd __2220                                       ; 1DED _ 00000000 (d)
        dd __2220                                       ; 1DF1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1DF5 _ 0 -1 

__2221  label byte
        db 00H, 00H, 00H, 00H                           ; 1DFD _ ....
        dd __2221                                       ; 1E01 _ 00000000 (d)
        dd __2221                                       ; 1E05 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1E09 _ 0 -1 
        dd 00000006H                                    ; 1E11 _ 6 
        dd ___bbFltType                                 ; 1E15 _ 00000000 (d)
        dd ___bbFltType                                 ; 1E19 _ 00000000 (d)
        dd ___bbFltType                                 ; 1E1D _ 00000000 (d)
        dd ___bbFltType                                 ; 1E21 _ 00000000 (d)
        dd ___bbIntType                                 ; 1E25 _ 00000000 (d)
        dd ___bbIntType                                 ; 1E29 _ 00000000 (d)

__tground_target label byte
        db 05H, 00H, 00H, 00H                           ; 1E2D _ ....

__2222  label byte
        db 00H, 00H, 00H, 00H                           ; 1E31 _ ....
        dd __2222                                       ; 1E35 _ 00000000 (d)
        dd __2222                                       ; 1E39 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1E3D _ 0 -1 

__2223  label byte
        db 00H, 00H, 00H, 00H                           ; 1E45 _ ....
        dd __2223                                       ; 1E49 _ 00000000 (d)
        dd __2223                                       ; 1E4D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1E51 _ 0 -1 
        dd 00000008H                                    ; 1E59 _ 8 
        dd ___bbFltType                                 ; 1E5D _ 00000000 (d)
        dd ___bbFltType                                 ; 1E61 _ 00000000 (d)
        dd ___bbFltType                                 ; 1E65 _ 00000000 (d)
        dd ___bbIntType                                 ; 1E69 _ 00000000 (d)
        dd ___bbIntType                                 ; 1E6D _ 00000000 (d)
        dd ___bbIntType                                 ; 1E71 _ 00000000 (d)
        dd ___bbIntType                                 ; 1E75 _ 00000000 (d)
        dd ___bbIntType                                 ; 1E79 _ 00000000 (d)

__tshard label byte
        db 05H, 00H, 00H, 00H                           ; 1E7D _ ....

__2224  label byte
        db 00H, 00H, 00H, 00H                           ; 1E81 _ ....
        dd __2224                                       ; 1E85 _ 00000000 (d)
        dd __2224                                       ; 1E89 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1E8D _ 0 -1 

__2225  label byte
        db 00H, 00H, 00H, 00H                           ; 1E95 _ ....
        dd __2225                                       ; 1E99 _ 00000000 (d)
        dd __2225                                       ; 1E9D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1EA1 _ 0 -1 
        dd 0000000AH                                    ; 1EA9 _ 10 
        dd ___bbIntType                                 ; 1EAD _ 00000000 (d)
        dd ___bbIntType                                 ; 1EB1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1EB5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1EB9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1EBD _ 00000000 (d)
        dd ___bbIntType                                 ; 1EC1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1EC5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1EC9 _ 00000000 (d)
        dd ___bbIntType                                 ; 1ECD _ 00000000 (d)
        dd ___bbIntType                                 ; 1ED1 _ 00000000 (d)

__tbouncywheel label byte
        db 05H, 00H, 00H, 00H                           ; 1ED5 _ ....

__2226  label byte
        db 00H, 00H, 00H, 00H                           ; 1ED9 _ ....
        dd __2226                                       ; 1EDD _ 00000000 (d)
        dd __2226                                       ; 1EE1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1EE5 _ 0 -1 

__2227  label byte
        db 00H, 00H, 00H, 00H                           ; 1EED _ ....
        dd __2227                                       ; 1EF1 _ 00000000 (d)
        dd __2227                                       ; 1EF5 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1EF9 _ 0 -1 
        dd 00000006H                                    ; 1F01 _ 6 
        dd ___bbFltType                                 ; 1F05 _ 00000000 (d)
        dd ___bbFltType                                 ; 1F09 _ 00000000 (d)
        dd ___bbFltType                                 ; 1F0D _ 00000000 (d)
        dd ___bbFltType                                 ; 1F11 _ 00000000 (d)
        dd ___bbFltType                                 ; 1F15 _ 00000000 (d)
        dd ___bbFltType                                 ; 1F19 _ 00000000 (d)

__twaterfall label byte
        db 05H, 00H, 00H, 00H                           ; 1F1D _ ....

__2228  label byte
        db 00H, 00H, 00H, 00H                           ; 1F21 _ ....
        dd __2228                                       ; 1F25 _ 00000000 (d)
        dd __2228                                       ; 1F29 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1F2D _ 0 -1 

__2229  label byte
        db 00H, 00H, 00H, 00H                           ; 1F35 _ ....
        dd __2229                                       ; 1F39 _ 00000000 (d)
        dd __2229                                       ; 1F3D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1F41 _ 0 -1 
        dd 00000003H                                    ; 1F49 _ 3 
        dd ___bbFltType                                 ; 1F4D _ 00000000 (d)
        dd ___bbIntType                                 ; 1F51 _ 00000000 (d)
        dd ___bbIntType                                 ; 1F55 _ 00000000 (d)

__twaterfall2 label byte
        db 05H, 00H, 00H, 00H                           ; 1F59 _ ....

__2230  label byte
        db 00H, 00H, 00H, 00H                           ; 1F5D _ ....
        dd __2230                                       ; 1F61 _ 00000000 (d)
        dd __2230                                       ; 1F65 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1F69 _ 0 -1 

__2231  label byte
        db 00H, 00H, 00H, 00H                           ; 1F71 _ ....
        dd __2231                                       ; 1F75 _ 00000000 (d)
        dd __2231                                       ; 1F79 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1F7D _ 0 -1 
        dd 00000003H                                    ; 1F85 _ 3 
        dd ___bbFltType                                 ; 1F89 _ 00000000 (d)
        dd ___bbIntType                                 ; 1F8D _ 00000000 (d)
        dd ___bbIntType                                 ; 1F91 _ 00000000 (d)

__tback_element label byte
        db 05H, 00H, 00H, 00H                           ; 1F95 _ ....

__2232  label byte
        db 00H, 00H, 00H, 00H                           ; 1F99 _ ....
        dd __2232                                       ; 1F9D _ 00000000 (d)
        dd __2232                                       ; 1FA1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1FA5 _ 0 -1 

__2233  label byte
        db 00H, 00H, 00H, 00H                           ; 1FAD _ ....
        dd __2233                                       ; 1FB1 _ 00000000 (d)
        dd __2233                                       ; 1FB5 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1FB9 _ 0 -1 
        dd 0000000AH                                    ; 1FC1 _ 10 
        dd ___bbIntType                                 ; 1FC5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1FC9 _ 00000000 (d)
        dd ___bbFltType                                 ; 1FCD _ 00000000 (d)
        dd ___bbFltType                                 ; 1FD1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1FD5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1FD9 _ 00000000 (d)
        dd ___bbFltType                                 ; 1FDD _ 00000000 (d)
        dd ___bbFltType                                 ; 1FE1 _ 00000000 (d)
        dd ___bbIntType                                 ; 1FE5 _ 00000000 (d)
        dd ___bbIntType                                 ; 1FE9 _ 00000000 (d)

__tenemy_zap label byte
        db 05H, 00H, 00H, 00H                           ; 1FED _ ....

__2234  label byte
        db 00H, 00H, 00H, 00H                           ; 1FF1 _ ....
        dd __2234                                       ; 1FF5 _ 00000000 (d)
        dd __2234                                       ; 1FF9 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 1FFD _ 0 -1 

__2235  label byte
        db 00H, 00H, 00H, 00H                           ; 2005 _ ....
        dd __2235                                       ; 2009 _ 00000000 (d)
        dd __2235                                       ; 200D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2011 _ 0 -1 
        dd 00000004H                                    ; 2019 _ 4 
        dd ___bbIntType                                 ; 201D _ 00000000 (d)
        dd ___bbIntType                                 ; 2021 _ 00000000 (d)
        dd ___bbIntType                                 ; 2025 _ 00000000 (d)
        dd ___bbIntType                                 ; 2029 _ 00000000 (d)

__tenemy label byte
        db 05H, 00H, 00H, 00H                           ; 202D _ ....

__2236  label byte
        db 00H, 00H, 00H, 00H                           ; 2031 _ ....
        dd __2236                                       ; 2035 _ 00000000 (d)
        dd __2236                                       ; 2039 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 203D _ 0 -1 

__2237  label byte
        db 00H, 00H, 00H, 00H                           ; 2045 _ ....
        dd __2237                                       ; 2049 _ 00000000 (d)
        dd __2237                                       ; 204D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2051 _ 0 -1 
        dd 00000011H                                    ; 2059 _ 17 
        dd ___bbFltType                                 ; 205D _ 00000000 (d)
        dd ___bbFltType                                 ; 2061 _ 00000000 (d)
        dd ___bbIntType                                 ; 2065 _ 00000000 (d)
        dd ___bbIntType                                 ; 2069 _ 00000000 (d)
        dd ___bbIntType                                 ; 206D _ 00000000 (d)
        dd ___bbIntType                                 ; 2071 _ 00000000 (d)
        dd ___bbIntType                                 ; 2075 _ 00000000 (d)
        dd ___bbIntType                                 ; 2079 _ 00000000 (d)
        dd ___bbIntType                                 ; 207D _ 00000000 (d)
        dd ___bbIntType                                 ; 2081 _ 00000000 (d)
        dd ___bbIntType                                 ; 2085 _ 00000000 (d)
        dd ___bbIntType                                 ; 2089 _ 00000000 (d)
        dd ___bbIntType                                 ; 208D _ 00000000 (d)
        dd ___bbFltType                                 ; 2091 _ 00000000 (d)
        dd ___bbFltType                                 ; 2095 _ 00000000 (d)
        dd ___bbIntType                                 ; 2099 _ 00000000 (d)
        dd ___bbIntType                                 ; 209D _ 00000000 (d)

__tcar  label byte
        db 05H, 00H, 00H, 00H                           ; 20A1 _ ....

__2238  label byte
        db 00H, 00H, 00H, 00H                           ; 20A5 _ ....
        dd __2238                                       ; 20A9 _ 00000000 (d)
        dd __2238                                       ; 20AD _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 20B1 _ 0 -1 

__2239  label byte
        db 00H, 00H, 00H, 00H                           ; 20B9 _ ....
        dd __2239                                       ; 20BD _ 00000000 (d)
        dd __2239                                       ; 20C1 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 20C5 _ 0 -1 
        dd 00000014H                                    ; 20CD _ 20 
        dd ___bbFltType                                 ; 20D1 _ 00000000 (d)
        dd ___bbIntType                                 ; 20D5 _ 00000000 (d)
        dd ___bbIntType                                 ; 20D9 _ 00000000 (d)
        dd ___bbIntType                                 ; 20DD _ 00000000 (d)
        dd ___bbIntType                                 ; 20E1 _ 00000000 (d)
        dd ___bbIntType                                 ; 20E5 _ 00000000 (d)
        dd ___bbFltType                                 ; 20E9 _ 00000000 (d)
        dd ___bbIntType                                 ; 20ED _ 00000000 (d)
        dd ___bbIntType                                 ; 20F1 _ 00000000 (d)
        dd __tcar                                       ; 20F5 _ 00000000 (d)
        dd ___bbIntType                                 ; 20F9 _ 00000000 (d)
        dd ___bbIntType                                 ; 20FD _ 00000000 (d)
        dd ___bbIntType                                 ; 2101 _ 00000000 (d)
        dd ___bbFltType                                 ; 2105 _ 00000000 (d)
        dd ___bbIntType                                 ; 2109 _ 00000000 (d)
        dd ___bbIntType                                 ; 210D _ 00000000 (d)
        dd ___bbIntType                                 ; 2111 _ 00000000 (d)
        dd ___bbIntType                                 ; 2115 _ 00000000 (d)
        dd ___bbIntType                                 ; 2119 _ 00000000 (d)
        dd ___bbIntType                                 ; 211D _ 00000000 (d)

__tturret label byte
        db 05H, 00H, 00H, 00H                           ; 2121 _ ....

__2240  label byte
        db 00H, 00H, 00H, 00H                           ; 2125 _ ....
        dd __2240                                       ; 2129 _ 00000000 (d)
        dd __2240                                       ; 212D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2131 _ 0 -1 

__2241  label byte
        db 00H, 00H, 00H, 00H                           ; 2139 _ ....
        dd __2241                                       ; 213D _ 00000000 (d)
        dd __2241                                       ; 2141 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2145 _ 0 -1 
        dd 0000000BH                                    ; 214D _ 11 
        dd ___bbIntType                                 ; 2151 _ 00000000 (d)
        dd ___bbFltType                                 ; 2155 _ 00000000 (d)
        dd ___bbIntType                                 ; 2159 _ 00000000 (d)
        dd ___bbIntType                                 ; 215D _ 00000000 (d)
        dd ___bbIntType                                 ; 2161 _ 00000000 (d)
        dd ___bbIntType                                 ; 2165 _ 00000000 (d)
        dd ___bbIntType                                 ; 2169 _ 00000000 (d)
        dd __tenemy                                     ; 216D _ 00000000 (d)
        dd ___bbIntType                                 ; 2171 _ 00000000 (d)
        dd ___bbIntType                                 ; 2175 _ 00000000 (d)
        dd ___bbIntType                                 ; 2179 _ 00000000 (d)

__tturret2 label byte
        db 05H, 00H, 00H, 00H                           ; 217D _ ....

__2242  label byte
        db 00H, 00H, 00H, 00H                           ; 2181 _ ....
        dd __2242                                       ; 2185 _ 00000000 (d)
        dd __2242                                       ; 2189 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 218D _ 0 -1 

__2243  label byte
        db 00H, 00H, 00H, 00H                           ; 2195 _ ....
        dd __2243                                       ; 2199 _ 00000000 (d)
        dd __2243                                       ; 219D _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 21A1 _ 0 -1 
        dd 0000000BH                                    ; 21A9 _ 11 
        dd ___bbIntType                                 ; 21AD _ 00000000 (d)
        dd ___bbFltType                                 ; 21B1 _ 00000000 (d)
        dd ___bbIntType                                 ; 21B5 _ 00000000 (d)
        dd ___bbIntType                                 ; 21B9 _ 00000000 (d)
        dd ___bbIntType                                 ; 21BD _ 00000000 (d)
        dd ___bbIntType                                 ; 21C1 _ 00000000 (d)
        dd ___bbIntType                                 ; 21C5 _ 00000000 (d)
        dd __tcar                                       ; 21C9 _ 00000000 (d)
        dd ___bbIntType                                 ; 21CD _ 00000000 (d)
        dd ___bbIntType                                 ; 21D1 _ 00000000 (d)
        dd ___bbIntType                                 ; 21D5 _ 00000000 (d)

__texplosion label byte
        db 05H, 00H, 00H, 00H                           ; 21D9 _ ....

__2244  label byte
        db 00H, 00H, 00H, 00H                           ; 21DD _ ....
        dd __2244                                       ; 21E1 _ 00000000 (d)
        dd __2244                                       ; 21E5 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 21E9 _ 0 -1 

__2245  label byte
        db 00H, 00H, 00H, 00H                           ; 21F1 _ ....
        dd __2245                                       ; 21F5 _ 00000000 (d)
        dd __2245                                       ; 21F9 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 21FD _ 0 -1 
        dd 00000004H                                    ; 2205 _ 4 
        dd ___bbIntType                                 ; 2209 _ 00000000 (d)
        dd ___bbIntType                                 ; 220D _ 00000000 (d)
        dd ___bbIntType                                 ; 2211 _ 00000000 (d)
        dd ___bbIntType                                 ; 2215 _ 00000000 (d)

__tloadsprite label byte
        db 05H, 00H, 00H, 00H                           ; 2219 _ ....

__2246  label byte
        db 00H, 00H, 00H, 00H                           ; 221D _ ....
        dd __2246                                       ; 2221 _ 00000000 (d)
        dd __2246                                       ; 2225 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2229 _ 0 -1 

__2247  label byte
        db 00H, 00H, 00H, 00H                           ; 2231 _ ....
        dd __2247                                       ; 2235 _ 00000000 (d)
        dd __2247                                       ; 2239 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 223D _ 0 -1 
        dd 00000003H                                    ; 2245 _ 3 
        dd ___bbIntType                                 ; 2249 _ 00000000 (d)
        dd ___bbStrType                                 ; 224D _ 00000000 (d)
        dd ___bbIntType                                 ; 2251 _ 00000000 (d)

__tsoundloader label byte
        db 05H, 00H, 00H, 00H                           ; 2255 _ ....

__2248  label byte
        db 00H, 00H, 00H, 00H                           ; 2259 _ ....
        dd __2248                                       ; 225D _ 00000000 (d)
        dd __2248                                       ; 2261 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2265 _ 0 -1 

__2249  label byte
        db 00H, 00H, 00H, 00H                           ; 226D _ ....
        dd __2249                                       ; 2271 _ 00000000 (d)
        dd __2249                                       ; 2275 _ 00000000 (d)
        dd 00000000H, 0FFFFFFFFH                        ; 2279 _ 0 -1 
        dd 00000002H                                    ; 2281 _ 2 
        dd ___bbIntType                                 ; 2285 _ 00000000 (d)
        dd ___bbStrType                                 ; 2289 _ 00000000 (d)

__2402  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 68H, 69H       ; 228D _ music\hi
        db 67H, 68H, 5FH, 73H, 63H, 6FH, 72H, 65H       ; 2295 _ gh_score
        db 2EH, 6FH, 67H, 67H, 00H                      ; 229D _ .ogg.

__2403  label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 22A2 _ gfx\big 
        db 70H, 6CH, 61H, 6EH, 65H, 74H, 2EH, 62H       ; 22AA _ planet.b
        db 6DH, 70H, 00H                                ; 22B2 _ mp.

__2404  label byte
        db 67H, 66H, 78H, 5CH, 74H, 69H, 74H, 6CH       ; 22B5 _ gfx\titl
        db 65H, 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH       ; 22BD _ e balloo
        db 6EH, 20H, 79H, 65H, 6CH, 6CH, 6FH, 77H       ; 22C5 _ n yellow
        db 2EH, 62H, 6DH, 70H, 00H                      ; 22CD _ .bmp.

__2405  label byte
        db 67H, 66H, 78H, 5CH, 74H, 69H, 74H, 6CH       ; 22D2 _ gfx\titl
        db 65H, 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH       ; 22DA _ e balloo
        db 6EH, 20H, 72H, 65H, 64H, 2EH, 62H, 6DH       ; 22E2 _ n red.bm
        db 70H, 00H                                     ; 22EA _ p.

__2406  label byte
        db 00H                                          ; 22EC _ .

__2417  label byte
        db 43H, 4FH, 4EH, 47H, 52H, 41H, 54H, 55H       ; 22ED _ CONGRATU
        db 4CH, 41H, 54H, 49H, 4FH, 4EH, 53H, 21H       ; 22F5 _ LATIONS!
        db 00H                                          ; 22FD _ .

__2418  label byte
        db 59H, 4FH, 55H, 20H, 48H, 41H, 56H, 45H       ; 22FE _ YOU HAVE
        db 20H, 41H, 20H, 48H, 49H, 47H, 48H, 20H       ; 2306 _  A HIGH 
        db 53H, 43H, 4FH, 52H, 45H, 2EH, 00H            ; 230E _ SCORE..

__2419  label byte
        db 50H, 4CH, 45H, 41H, 53H, 45H, 20H, 45H       ; 2315 _ PLEASE E
        db 4EH, 54H, 45H, 52H, 20H, 59H, 4FH, 55H       ; 231D _ NTER YOU
        db 52H, 20H, 4EH, 41H, 4DH, 45H, 3AH, 00H       ; 2325 _ R NAME:.

__2422  label byte
        db 20H, 00H                                     ; 232D _  .

__2426  label byte
        db 00H                                          ; 232F _ .

__2427  label byte
        db 3FH, 3FH, 3FH, 00H                           ; 2330 _ ???.

__2441  label byte
        db 20H, 00H                                     ; 2334 _  .

__2474  label byte
        db 50H, 00H                                     ; 2336 _ P.

__3450  label byte
        db 20H, 00H                                     ; 2338 _  .

__3522  label byte
        db 30H, 00H                                     ; 233A _ 0.

__3530  label byte
        db 30H, 00H                                     ; 233C _ 0.

__3560  label byte
        db 67H, 66H, 78H, 5CH, 65H, 78H, 70H, 6CH       ; 233E _ gfx\expl
        db 6FH, 73H, 69H, 6FH, 6EH, 00H                 ; 2346 _ osion.

__3561  label byte
        db 72H, 2EH, 62H, 6DH, 70H, 00H                 ; 234C _ r.bmp.

__3564  label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 61H, 6CH       ; 2352 _ gfx\smal
        db 6CH, 20H, 65H, 78H, 70H, 6CH, 6FH, 73H       ; 235A _ l explos
        db 69H, 6FH, 6EH, 20H, 00H                      ; 2362 _ ion .

__3565  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2367 _ .bmp.

__3567  label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 236C _ gfx\big 
        db 65H, 78H, 70H, 6CH, 6FH, 73H, 69H, 6FH       ; 2374 _ explosio
        db 6EH, 20H, 00H                                ; 237C _ n .

__3568  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 237F _ .bmp.

__3642  label byte
        db 67H, 66H, 78H, 5CH, 73H, 61H, 75H, 63H       ; 2384 _ gfx\sauc
        db 65H, 72H, 2EH, 62H, 6DH, 70H, 00H            ; 238C _ er.bmp.

__3643  label byte
        db 67H, 66H, 78H, 5CH, 72H, 65H, 64H, 20H       ; 2393 _ gfx\red 
        db 62H, 69H, 67H, 20H, 75H, 6EH, 73H, 2EH       ; 239B _ big uns.
        db 62H, 6DH, 70H, 00H                           ; 23A3 _ bmp.

__3644  label byte
        db 67H, 66H, 78H, 5CH, 67H, 72H, 65H, 65H       ; 23A7 _ gfx\gree
        db 6EH, 20H, 62H, 69H, 67H, 20H, 75H, 6EH       ; 23AF _ n big un
        db 73H, 2EH, 62H, 6DH, 70H, 00H                 ; 23B7 _ s.bmp.

__3645  label byte
        db 67H, 66H, 78H, 5CH, 72H, 65H, 64H, 20H       ; 23BD _ gfx\red 
        db 73H, 61H, 75H, 63H, 65H, 72H, 2EH, 62H       ; 23C5 _ saucer.b
        db 6DH, 70H, 00H                                ; 23CD _ mp.

__3646  label byte
        db 67H, 66H, 78H, 5CH, 66H, 69H, 73H, 68H       ; 23D0 _ gfx\fish
        db 20H, 66H, 69H, 67H, 68H, 74H, 65H, 72H       ; 23D8 _  fighter
        db 20H, 6FH, 72H, 61H, 6EH, 67H, 65H, 2EH       ; 23E0 _  orange.
        db 62H, 6DH, 70H, 00H                           ; 23E8 _ bmp.

__3647  label byte
        db 67H, 66H, 78H, 5CH, 66H, 69H, 73H, 68H       ; 23EC _ gfx\fish
        db 20H, 66H, 69H, 67H, 68H, 74H, 65H, 72H       ; 23F4 _  fighter
        db 20H, 62H, 6CH, 61H, 63H, 6BH, 2EH, 62H       ; 23FC _  black.b
        db 6DH, 70H, 00H                                ; 2404 _ mp.

__3648  label byte
        db 67H, 66H, 78H, 5CH, 73H, 71H, 75H, 69H       ; 2407 _ gfx\squi
        db 64H, 20H, 74H, 6FH, 70H, 2EH, 62H, 6DH       ; 240F _ d top.bm
        db 70H, 00H                                     ; 2417 _ p.

__3649  label byte
        db 67H, 66H, 78H, 5CH, 73H, 71H, 75H, 69H       ; 2419 _ gfx\squi
        db 64H, 20H, 62H, 6FH, 74H, 74H, 6FH, 6DH       ; 2421 _ d bottom
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2429 _ .bmp.

__3650  label byte
        db 67H, 66H, 78H, 5CH, 67H, 75H, 6EH, 73H       ; 242E _ gfx\guns
        db 68H, 69H, 70H, 2EH, 62H, 6DH, 70H, 00H       ; 2436 _ hip.bmp.

__3651  label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 243E _ gfx\big 
        db 73H, 71H, 75H, 69H, 64H, 20H, 74H, 6FH       ; 2446 _ squid to
        db 70H, 2EH, 62H, 6DH, 70H, 00H                 ; 244E _ p.bmp.

__3652  label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 2454 _ gfx\big 
        db 73H, 71H, 75H, 69H, 64H, 20H, 62H, 6FH       ; 245C _ squid bo
        db 74H, 74H, 6FH, 6DH, 2EH, 62H, 6DH, 70H       ; 2464 _ ttom.bmp
        db 00H                                          ; 246C _ .

__3653  label byte
        db 67H, 66H, 78H, 5CH, 72H, 61H, 79H, 2EH       ; 246D _ gfx\ray.
        db 62H, 6DH, 70H, 00H                           ; 2475 _ bmp.

__3654  label byte
        db 67H, 66H, 78H, 2FH, 74H, 61H, 6EH, 6BH       ; 2479 _ gfx/tank
        db 62H, 6CH, 6FH, 63H, 6BH, 2EH, 62H, 6DH       ; 2481 _ block.bm
        db 70H, 00H                                     ; 2489 _ p.

__3655  label byte
        db 67H, 66H, 78H, 2FH, 62H, 75H, 69H, 6CH       ; 248B _ gfx/buil
        db 64H, 69H, 6EH, 67H, 62H, 6CH, 6FH, 63H       ; 2493 _ dingbloc
        db 6BH, 2EH, 62H, 6DH, 70H, 00H                 ; 249B _ k.bmp.

__3656  label byte
        db 67H, 66H, 78H, 2FH, 74H, 61H, 6EH, 6BH       ; 24A1 _ gfx/tank
        db 2EH, 62H, 6DH, 70H, 00H                      ; 24A9 _ .bmp.

__3657  label byte
        db 67H, 66H, 78H, 2FH, 62H, 75H, 69H, 6CH       ; 24AE _ gfx/buil
        db 64H, 69H, 6EH, 67H, 2EH, 62H, 6DH, 70H       ; 24B6 _ ding.bmp
        db 00H                                          ; 24BE _ .

__3658  label byte
        db 67H, 66H, 78H, 2FH, 67H, 6FH, 6CH, 64H       ; 24BF _ gfx/gold
        db 66H, 69H, 73H, 68H, 2EH, 62H, 6DH, 70H       ; 24C7 _ fish.bmp
        db 00H                                          ; 24CF _ .

__3659  label byte
        db 67H, 66H, 78H, 5CH, 67H, 75H, 6EH, 6DH       ; 24D0 _ gfx\gunm
        db 6FH, 75H, 6EH, 74H, 2EH, 62H, 6DH, 70H       ; 24D8 _ ount.bmp
        db 00H                                          ; 24E0 _ .

__3660  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 69H, 73H, 73H       ; 24E1 _ gfx\miss
        db 69H, 6CH, 65H, 2EH, 62H, 6DH, 70H, 00H       ; 24E9 _ ile.bmp.

__3661  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 6DH, 62H       ; 24F1 _ gfx\bomb
        db 2EH, 62H, 6DH, 70H, 00H                      ; 24F9 _ .bmp.

__3662  label byte
        db 67H, 66H, 78H, 5CH, 63H, 6CH, 6FH, 75H       ; 24FE _ gfx\clou
        db 64H, 20H, 35H, 31H, 2DH, 31H, 2EH, 62H       ; 2506 _ d 51-1.b
        db 6DH, 70H, 00H                                ; 250E _ mp.

__3663  label byte
        db 67H, 66H, 78H, 5CH, 68H, 6FH, 6DH, 69H       ; 2511 _ gfx\homi
        db 6EH, 67H, 20H, 73H, 68H, 69H, 70H, 2EH       ; 2519 _ ng ship.
        db 62H, 6DH, 70H, 00H                           ; 2521 _ bmp.

__3664  label byte
        db 67H, 66H, 78H, 5CH, 66H, 6CH, 69H, 70H       ; 2525 _ gfx\flip
        db 20H, 70H, 6CH, 61H, 6EH, 65H, 20H, 31H       ; 252D _  plane 1
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2535 _ .bmp.

__3665  label byte
        db 67H, 66H, 78H, 5CH, 66H, 6CH, 69H, 70H       ; 253A _ gfx\flip
        db 20H, 70H, 6CH, 61H, 6EH, 65H, 20H, 32H       ; 2542 _  plane 2
        db 2EH, 62H, 6DH, 70H, 00H                      ; 254A _ .bmp.

__3666  label byte
        db 67H, 66H, 78H, 5CH, 66H, 6CH, 69H, 70H       ; 254F _ gfx\flip
        db 20H, 70H, 6CH, 61H, 6EH, 65H, 20H, 33H       ; 2557 _  plane 3
        db 2EH, 62H, 6DH, 70H, 00H                      ; 255F _ .bmp.

__3667  label byte
        db 67H, 66H, 78H, 5CH, 66H, 6CH, 69H, 70H       ; 2564 _ gfx\flip
        db 20H, 70H, 6CH, 61H, 6EH, 65H, 20H, 34H       ; 256C _  plane 4
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2574 _ .bmp.

__3668  label byte
        db 67H, 66H, 78H, 5CH, 66H, 6CH, 69H, 70H       ; 2579 _ gfx\flip
        db 20H, 70H, 6CH, 61H, 6EH, 65H, 20H, 35H       ; 2581 _  plane 5
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2589 _ .bmp.

__3669  label byte
        db 67H, 66H, 78H, 5CH, 32H, 20H, 62H, 6FH       ; 258E _ gfx\2 bo
        db 73H, 73H, 20H, 62H, 6FH, 64H, 79H, 20H       ; 2596 _ ss body 
        db 31H, 2EH, 62H, 6DH, 70H, 00H                 ; 259E _ 1.bmp.

__3670  label byte
        db 67H, 66H, 78H, 5CH, 32H, 20H, 62H, 6FH       ; 25A4 _ gfx\2 bo
        db 73H, 73H, 20H, 62H, 6FH, 64H, 79H, 20H       ; 25AC _ ss body 
        db 32H, 2EH, 62H, 6DH, 70H, 00H                 ; 25B4 _ 2.bmp.

__3671  label byte
        db 67H, 66H, 78H, 5CH, 32H, 20H, 62H, 6FH       ; 25BA _ gfx\2 bo
        db 73H, 73H, 20H, 62H, 6FH, 64H, 79H, 20H       ; 25C2 _ ss body 
        db 33H, 2EH, 62H, 6DH, 70H, 00H                 ; 25CA _ 3.bmp.

__3672  label byte
        db 67H, 66H, 78H, 5CH, 32H, 20H, 62H, 6FH       ; 25D0 _ gfx\2 bo
        db 73H, 73H, 20H, 62H, 6FH, 64H, 79H, 20H       ; 25D8 _ ss body 
        db 34H, 2EH, 62H, 6DH, 70H, 00H                 ; 25E0 _ 4.bmp.

__3673  label byte
        db 67H, 66H, 78H, 5CH, 32H, 20H, 62H, 6FH       ; 25E6 _ gfx\2 bo
        db 73H, 73H, 20H, 62H, 6FH, 64H, 79H, 20H       ; 25EE _ ss body 
        db 35H, 2EH, 62H, 6DH, 70H, 00H                 ; 25F6 _ 5.bmp.

__3674  label byte
        db 67H, 66H, 78H, 5CH, 74H, 6FH, 70H, 20H       ; 25FC _ gfx\top 
        db 65H, 6EH, 67H, 69H, 6EH, 65H, 2EH, 62H       ; 2604 _ engine.b
        db 6DH, 70H, 00H                                ; 260C _ mp.

__3675  label byte
        db 67H, 66H, 78H, 5CH, 74H, 6FH, 70H, 20H       ; 260F _ gfx\top 
        db 66H, 69H, 6EH, 20H, 31H, 2EH, 62H, 6DH       ; 2617 _ fin 1.bm
        db 70H, 00H                                     ; 261F _ p.

__3676  label byte
        db 67H, 66H, 78H, 5CH, 74H, 6FH, 70H, 20H       ; 2621 _ gfx\top 
        db 66H, 69H, 6EH, 20H, 32H, 2EH, 62H, 6DH       ; 2629 _ fin 2.bm
        db 70H, 00H                                     ; 2631 _ p.

__3677  label byte
        db 67H, 66H, 78H, 5CH, 74H, 6FH, 70H, 20H       ; 2633 _ gfx\top 
        db 66H, 69H, 6EH, 20H, 33H, 2EH, 62H, 6DH       ; 263B _ fin 3.bm
        db 70H, 00H                                     ; 2643 _ p.

__3678  label byte
        db 67H, 66H, 78H, 5CH, 74H, 6FH, 70H, 20H       ; 2645 _ gfx\top 
        db 66H, 69H, 6EH, 20H, 34H, 2EH, 62H, 6DH       ; 264D _ fin 4.bm
        db 70H, 00H                                     ; 2655 _ p.

__3679  label byte
        db 67H, 66H, 78H, 5CH, 74H, 6FH, 70H, 20H       ; 2657 _ gfx\top 
        db 66H, 69H, 6EH, 20H, 35H, 2EH, 62H, 6DH       ; 265F _ fin 5.bm
        db 70H, 00H                                     ; 2667 _ p.

__3680  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 74H, 74H       ; 2669 _ gfx\bott
        db 6FH, 6DH, 20H, 66H, 69H, 6EH, 20H, 31H       ; 2671 _ om fin 1
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2679 _ .bmp.

__3681  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 74H, 74H       ; 267E _ gfx\bott
        db 6FH, 6DH, 20H, 66H, 69H, 6EH, 20H, 32H       ; 2686 _ om fin 2
        db 2EH, 62H, 6DH, 70H, 00H                      ; 268E _ .bmp.

__3682  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 74H, 74H       ; 2693 _ gfx\bott
        db 6FH, 6DH, 20H, 66H, 69H, 6EH, 20H, 33H       ; 269B _ om fin 3
        db 2EH, 62H, 6DH, 70H, 00H                      ; 26A3 _ .bmp.

__3683  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 74H, 74H       ; 26A8 _ gfx\bott
        db 6FH, 6DH, 20H, 66H, 69H, 6EH, 20H, 34H       ; 26B0 _ om fin 4
        db 2EH, 62H, 6DH, 70H, 00H                      ; 26B8 _ .bmp.

__3684  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 74H, 74H       ; 26BD _ gfx\bott
        db 6FH, 6DH, 20H, 66H, 69H, 6EH, 20H, 35H       ; 26C5 _ om fin 5
        db 2EH, 62H, 6DH, 70H, 00H                      ; 26CD _ .bmp.

__3685  label byte
        db 67H, 66H, 78H, 5CH, 74H, 68H, 72H, 75H       ; 26D2 _ gfx\thru
        db 73H, 74H, 65H, 72H, 20H, 31H, 2EH, 62H       ; 26DA _ ster 1.b
        db 6DH, 70H, 00H                                ; 26E2 _ mp.

__3686  label byte
        db 67H, 66H, 78H, 5CH, 74H, 68H, 72H, 75H       ; 26E5 _ gfx\thru
        db 73H, 74H, 65H, 72H, 20H, 32H, 2EH, 62H       ; 26ED _ ster 2.b
        db 6DH, 70H, 00H                                ; 26F5 _ mp.

__3687  label byte
        db 67H, 66H, 78H, 5CH, 74H, 68H, 72H, 75H       ; 26F8 _ gfx\thru
        db 73H, 74H, 65H, 72H, 20H, 33H, 2EH, 62H       ; 2700 _ ster 3.b
        db 6DH, 70H, 00H                                ; 2708 _ mp.

__3688  label byte
        db 67H, 66H, 78H, 5CH, 74H, 68H, 72H, 75H       ; 270B _ gfx\thru
        db 73H, 74H, 65H, 72H, 20H, 34H, 2EH, 62H       ; 2713 _ ster 4.b
        db 6DH, 70H, 00H                                ; 271B _ mp.

__3689  label byte
        db 67H, 66H, 78H, 5CH, 74H, 68H, 72H, 75H       ; 271E _ gfx\thru
        db 73H, 74H, 65H, 72H, 20H, 35H, 2EH, 62H       ; 2726 _ ster 5.b
        db 6DH, 70H, 00H                                ; 272E _ mp.

__3690  label byte
        db 67H, 66H, 78H, 5CH, 68H, 65H, 61H, 64H       ; 2731 _ gfx\head
        db 20H, 31H, 2EH, 62H, 6DH, 70H, 00H            ; 2739 _  1.bmp.

__3691  label byte
        db 67H, 66H, 78H, 5CH, 68H, 65H, 61H, 64H       ; 2740 _ gfx\head
        db 20H, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 2748 _  2.bmp.

__3692  label byte
        db 67H, 66H, 78H, 5CH, 68H, 65H, 61H, 64H       ; 274F _ gfx\head
        db 20H, 33H, 2EH, 62H, 6DH, 70H, 00H            ; 2757 _  3.bmp.

__3693  label byte
        db 67H, 66H, 78H, 5CH, 68H, 65H, 61H, 64H       ; 275E _ gfx\head
        db 20H, 34H, 2EH, 62H, 6DH, 70H, 00H            ; 2766 _  4.bmp.

__3694  label byte
        db 67H, 66H, 78H, 5CH, 68H, 65H, 61H, 64H       ; 276D _ gfx\head
        db 20H, 35H, 2EH, 62H, 6DH, 70H, 00H            ; 2775 _  5.bmp.

__3695  label byte
        db 67H, 66H, 78H, 5CH, 72H, 6FH, 63H, 6BH       ; 277C _ gfx\rock
        db 20H, 31H, 2DH, 31H, 2EH, 62H, 6DH, 70H       ; 2784 _  1-1.bmp
        db 00H                                          ; 278C _ .

__3696  label byte
        db 67H, 66H, 78H, 5CH, 72H, 6FH, 63H, 6BH       ; 278D _ gfx\rock
        db 20H, 32H, 2DH, 31H, 2EH, 62H, 6DH, 70H       ; 2795 _  2-1.bmp
        db 00H                                          ; 279D _ .

__3697  label byte
        db 67H, 66H, 78H, 5CH, 72H, 6FH, 63H, 6BH       ; 279E _ gfx\rock
        db 20H, 33H, 2DH, 31H, 2EH, 62H, 6DH, 70H       ; 27A6 _  3-1.bmp
        db 00H                                          ; 27AE _ .

__3698  label byte
        db 67H, 66H, 78H, 2FH, 66H, 61H, 73H, 74H       ; 27AF _ gfx/fast
        db 20H, 73H, 68H, 69H, 70H, 2EH, 62H, 6DH       ; 27B7 _  ship.bm
        db 70H, 00H                                     ; 27BF _ p.

__3699  label byte
        db 67H, 66H, 78H, 2FH, 6DH, 69H, 73H, 73H       ; 27C1 _ gfx/miss
        db 69H, 6CH, 65H, 20H, 62H, 6FH, 61H, 74H       ; 27C9 _ ile boat
        db 2EH, 62H, 6DH, 70H, 00H                      ; 27D1 _ .bmp.

__3700  label byte
        db 67H, 66H, 78H, 2FH, 63H, 61H, 6EH, 6EH       ; 27D6 _ gfx/cann
        db 6FH, 6EH, 20H, 62H, 6FH, 61H, 74H, 2EH       ; 27DE _ on boat.
        db 62H, 6DH, 70H, 00H                           ; 27E6 _ bmp.

__3701  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 65H, 76H, 65H       ; 27EA _ gfx/leve
        db 6CH, 20H, 33H, 20H, 62H, 6FH, 73H, 73H       ; 27F2 _ l 3 boss
        db 20H, 31H, 2EH, 62H, 6DH, 70H, 00H            ; 27FA _  1.bmp.

__3702  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 65H, 76H, 65H       ; 2801 _ gfx/leve
        db 6CH, 20H, 33H, 20H, 62H, 6FH, 73H, 73H       ; 2809 _ l 3 boss
        db 20H, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 2811 _  2.bmp.

__3703  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 65H, 76H, 65H       ; 2818 _ gfx/leve
        db 6CH, 20H, 33H, 20H, 62H, 6FH, 73H, 73H       ; 2820 _ l 3 boss
        db 20H, 33H, 2EH, 62H, 6DH, 70H, 00H            ; 2828 _  3.bmp.

__3704  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 65H, 76H, 65H       ; 282F _ gfx/leve
        db 6CH, 20H, 33H, 20H, 62H, 6FH, 73H, 73H       ; 2837 _ l 3 boss
        db 20H, 34H, 2EH, 62H, 6DH, 70H, 00H            ; 283F _  4.bmp.

__3705  label byte
        db 67H, 66H, 78H, 2FH, 73H, 75H, 62H, 20H       ; 2846 _ gfx/sub 
        db 31H, 2EH, 62H, 6DH, 70H, 00H                 ; 284E _ 1.bmp.

__3706  label byte
        db 67H, 66H, 78H, 2FH, 73H, 75H, 62H, 20H       ; 2854 _ gfx/sub 
        db 32H, 2EH, 62H, 6DH, 70H, 00H                 ; 285C _ 2.bmp.

__3707  label byte
        db 67H, 66H, 78H, 2FH, 73H, 75H, 62H, 20H       ; 2862 _ gfx/sub 
        db 33H, 2EH, 62H, 6DH, 70H, 00H                 ; 286A _ 3.bmp.

__3708  label byte
        db 67H, 66H, 78H, 2FH, 73H, 75H, 62H, 20H       ; 2870 _ gfx/sub 
        db 34H, 2EH, 62H, 6DH, 70H, 00H                 ; 2878 _ 4.bmp.

__3709  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 61H, 73H, 65H       ; 287E _ gfx\lase
        db 72H, 20H, 73H, 71H, 75H, 69H, 64H, 2EH       ; 2886 _ r squid.
        db 62H, 6DH, 70H, 00H                           ; 288E _ bmp.

__3710  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 61H, 73H, 65H       ; 2892 _ gfx\lase
        db 72H, 20H, 73H, 71H, 75H, 69H, 64H, 20H       ; 289A _ r squid 
        db 62H, 6FH, 74H, 74H, 6FH, 6DH, 2EH, 62H       ; 28A2 _ bottom.b
        db 6DH, 70H, 00H                                ; 28AA _ mp.

__3711  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 61H, 73H, 74H       ; 28AD _ gfx/last
        db 20H, 62H, 6FH, 73H, 73H, 20H, 31H, 2EH       ; 28B5 _  boss 1.
        db 62H, 6DH, 70H, 00H                           ; 28BD _ bmp.

__3712  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 61H, 73H, 74H       ; 28C1 _ gfx/last
        db 20H, 62H, 6FH, 73H, 73H, 20H, 32H, 2EH       ; 28C9 _  boss 2.
        db 62H, 6DH, 70H, 00H                           ; 28D1 _ bmp.

__3713  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 61H, 73H, 74H       ; 28D5 _ gfx/last
        db 20H, 62H, 6FH, 73H, 73H, 20H, 33H, 2EH       ; 28DD _  boss 3.
        db 62H, 6DH, 70H, 00H                           ; 28E5 _ bmp.

__3714  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 61H, 73H, 74H       ; 28E9 _ gfx/last
        db 20H, 62H, 6FH, 73H, 73H, 20H, 34H, 2EH       ; 28F1 _  boss 4.
        db 62H, 6DH, 70H, 00H                           ; 28F9 _ bmp.

__3715  label byte
        db 67H, 66H, 78H, 2FH, 6CH, 61H, 73H, 74H       ; 28FD _ gfx/last
        db 20H, 62H, 6FH, 73H, 73H, 20H, 35H, 2EH       ; 2905 _  boss 5.
        db 62H, 6DH, 70H, 00H                           ; 290D _ bmp.

__3721  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2911 _ font\fon
        db 74H, 00H                                     ; 2919 _ t.

__3722  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 291B _ .bmp.

__3723  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2920 _ font\fon
        db 74H, 62H, 00H                                ; 2928 _ tb.

__3724  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 292B _ .bmp.

__3725  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2930 _ font\fon
        db 74H, 63H, 00H                                ; 2938 _ tc.

__3726  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 293B _ .bmp.

__3738  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2940 _ font\fon
        db 74H, 00H                                     ; 2948 _ t.

__3739  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 294A _ .bmp.

__3741  label byte
        db 66H, 6FH, 6EH, 74H, 20H, 6EH, 6FH, 74H       ; 294F _ font not
        db 20H, 6CH, 6FH, 61H, 64H, 65H, 64H, 21H       ; 2957 _  loaded!
        db 00H                                          ; 295F _ .

__3744  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2960 _ font\fon
        db 74H, 62H, 00H                                ; 2968 _ tb.

__3745  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 296B _ .bmp.

__3747  label byte
        db 66H, 6FH, 6EH, 74H, 20H, 6EH, 6FH, 74H       ; 2970 _ font not
        db 20H, 6CH, 6FH, 61H, 64H, 65H, 64H, 21H       ; 2978 _  loaded!
        db 00H                                          ; 2980 _ .

__3750  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2981 _ font\fon
        db 74H, 63H, 00H                                ; 2989 _ tc.

__3751  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 298C _ .bmp.

__3752  label byte
        db 66H, 6FH, 6EH, 74H, 5CH, 66H, 6FH, 6EH       ; 2991 _ font\fon
        db 74H, 63H, 00H                                ; 2999 _ tc.

__3753  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 299C _ .bmp.

__3755  label byte
        db 66H, 6FH, 6EH, 74H, 20H, 6EH, 6FH, 74H       ; 29A1 _ font not
        db 20H, 6CH, 6FH, 61H, 64H, 65H, 64H, 21H       ; 29A9 _  loaded!
        db 00H                                          ; 29B1 _ .

__3780  label byte
        db 67H, 66H, 78H, 5CH, 68H, 69H, 6CH, 6CH       ; 29B2 _ gfx\hill
        db 20H, 00H                                     ; 29BA _  .

__3781  label byte
        db 2DH, 00H                                     ; 29BC _ -.

__3782  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 29BE _ .bmp.

__3784  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 29C3 _ gfx\moun
        db 74H, 61H, 69H, 6EH, 34H, 2EH, 62H, 6DH       ; 29CB _ tain4.bm
        db 70H, 00H                                     ; 29D3 _ p.

__3786  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 29D5 _ gfx\moun
        db 74H, 61H, 69H, 6EH, 33H, 2EH, 62H, 6DH       ; 29DD _ tain3.bm
        db 70H, 00H                                     ; 29E5 _ p.

__3787  label byte
        db 67H, 66H, 78H, 5CH, 66H, 72H, 6FH, 6EH       ; 29E7 _ gfx\fron
        db 74H, 20H, 68H, 69H, 6CH, 6CH, 20H, 00H       ; 29EF _ t hill .

__3788  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 29F7 _ .bmp.

__3795  label byte
        db 67H, 66H, 78H, 5CH, 63H, 6CH, 6FH, 75H       ; 29FC _ gfx\clou
        db 64H, 20H, 00H                                ; 2A04 _ d .

__3796  label byte
        db 2DH, 00H                                     ; 2A07 _ -.

__3797  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2A09 _ .bmp.

__3799  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 2A0E _ gfx\moun
        db 74H, 61H, 69H, 6EH, 31H, 2EH, 62H, 6DH       ; 2A16 _ tain1.bm
        db 70H, 00H                                     ; 2A1E _ p.

__3801  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 2A20 _ gfx\moun
        db 74H, 61H, 69H, 6EH, 32H, 2EH, 62H, 6DH       ; 2A28 _ tain2.bm
        db 70H, 00H                                     ; 2A30 _ p.

__3803  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6CH, 61H, 6EH       ; 2A32 _ gfx\blan
        db 6BH, 2EH, 62H, 6DH, 70H, 00H                 ; 2A3A _ k.bmp.

__3804  label byte
        db 67H, 66H, 78H, 5CH, 66H, 72H, 6FH, 6EH       ; 2A40 _ gfx\fron
        db 74H, 20H, 63H, 6CH, 6FH, 75H, 64H, 20H       ; 2A48 _ t cloud 
        db 00H                                          ; 2A50 _ .

__3805  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2A51 _ .bmp.

__3812  label byte
        db 67H, 66H, 78H, 5CH, 69H, 73H, 6CH, 61H       ; 2A56 _ gfx\isla
        db 6EH, 64H, 20H, 00H                           ; 2A5E _ nd .

__3813  label byte
        db 2DH, 00H                                     ; 2A62 _ -.

__3814  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2A64 _ .bmp.

__3816  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 2A69 _ gfx\moun
        db 74H, 61H, 69H, 6EH, 35H, 2EH, 62H, 6DH       ; 2A71 _ tain5.bm
        db 70H, 00H                                     ; 2A79 _ p.

__3818  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 2A7B _ gfx\moun
        db 74H, 61H, 69H, 6EH, 36H, 2EH, 62H, 6DH       ; 2A83 _ tain6.bm
        db 70H, 00H                                     ; 2A8B _ p.

__3820  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6CH, 61H, 6EH       ; 2A8D _ gfx\blan
        db 6BH, 2EH, 62H, 6DH, 70H, 00H                 ; 2A95 _ k.bmp.

__3822  label byte
        db 67H, 66H, 78H, 5CH, 73H, 6BH, 79H, 6CH       ; 2A9B _ gfx\skyl
        db 69H, 6EH, 65H, 2EH, 62H, 6DH, 70H, 00H       ; 2AA3 _ ine.bmp.

__3823  label byte
        db 67H, 66H, 78H, 5CH, 66H, 72H, 6FH, 6EH       ; 2AAB _ gfx\fron
        db 74H, 20H, 69H, 73H, 6CH, 61H, 6EH, 64H       ; 2AB3 _ t island
        db 20H, 00H                                     ; 2ABB _  .

__3824  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2ABD _ .bmp.

__3830  label byte
        db 67H, 66H, 78H, 5CH, 62H, 75H, 69H, 6CH       ; 2AC2 _ gfx\buil
        db 64H, 69H, 6EH, 67H, 20H, 00H                 ; 2ACA _ ding .

__3831  label byte
        db 2DH, 00H                                     ; 2AD0 _ -.

__3832  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2AD2 _ .bmp.

__3834  label byte
        db 67H, 66H, 78H, 5CH, 73H, 6BH, 79H, 6CH       ; 2AD7 _ gfx\skyl
        db 69H, 6EH, 65H, 32H, 2EH, 62H, 6DH, 70H       ; 2ADF _ ine2.bmp
        db 00H                                          ; 2AE7 _ .

__3836  label byte
        db 67H, 66H, 78H, 5CH, 6DH, 6FH, 75H, 6EH       ; 2AE8 _ gfx\moun
        db 74H, 61H, 69H, 6EH, 36H, 2EH, 62H, 6DH       ; 2AF0 _ tain6.bm
        db 70H, 00H                                     ; 2AF8 _ p.

__3838  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6CH, 61H, 6EH       ; 2AFA _ gfx\blan
        db 6BH, 2EH, 62H, 6DH, 70H, 00H                 ; 2B02 _ k.bmp.

__3839  label byte
        db 67H, 66H, 78H, 5CH, 66H, 72H, 6FH, 6EH       ; 2B08 _ gfx\fron
        db 74H, 20H, 69H, 73H, 6CH, 61H, 6EH, 64H       ; 2B10 _ t island
        db 20H, 00H                                     ; 2B18 _  .

__3840  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2B1A _ .bmp.

__3856  label byte
        db 67H, 66H, 78H, 5CH, 64H, 69H, 73H, 68H       ; 2B1F _ gfx\dish
        db 65H, 73H, 2EH, 62H, 6DH, 70H, 00H            ; 2B27 _ es.bmp.

__3870  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 6CH, 65H       ; 2B2E _ music\le
        db 76H, 65H, 6CH, 31H, 2EH, 6FH, 67H, 67H       ; 2B36 _ vel1.ogg
        db 00H                                          ; 2B3E _ .

__3889  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 6CH, 65H       ; 2B3F _ music\le
        db 76H, 65H, 6CH, 32H, 2EH, 6FH, 67H, 67H       ; 2B47 _ vel2.ogg
        db 00H                                          ; 2B4F _ .

__3908  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 6CH, 65H       ; 2B50 _ music\le
        db 76H, 65H, 6CH, 33H, 2EH, 6FH, 67H, 67H       ; 2B58 _ vel3.ogg
        db 00H                                          ; 2B60 _ .

__3929  label byte
        db 6DH, 75H, 73H, 69H, 63H, 5CH, 6CH, 65H       ; 2B61 _ music\le
        db 76H, 65H, 6CH, 34H, 2EH, 6FH, 67H, 67H       ; 2B69 _ vel4.ogg
        db 00H                                          ; 2B71 _ .

__3932  label byte
        db 67H, 66H, 78H, 5CH, 62H, 69H, 67H, 20H       ; 2B72 _ gfx\big 
        db 73H, 6DH, 6FH, 6BH, 20H, 00H                 ; 2B7A _ smok .

__3933  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2B80 _ .bmp.

__4014  label byte
        db 64H, 61H, 74H, 61H, 5CH, 64H, 65H, 6DH       ; 2B85 _ data\dem
        db 6FH, 00H                                     ; 2B8D _ o.

__4015  label byte
        db 2EH, 64H, 61H, 74H, 00H                      ; 2B8F _ .dat.

__4025  label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 2B94 _ NONE.

__4030  label byte
        db 63H, 6FH, 6EH, 66H, 69H, 67H, 2EH, 64H       ; 2B99 _ config.d
        db 61H, 74H, 00H                                ; 2BA1 _ at.

__4040  label byte
        db 67H, 66H, 78H, 5CH, 70H, 79H, 6CH, 6FH       ; 2BA4 _ gfx\pylo
        db 6EH, 00H                                     ; 2BAC _ n.

__4041  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2BAE _ .bmp.

__4042  label byte
        db 67H, 66H, 78H, 5CH, 70H, 79H, 6CH, 6FH       ; 2BB3 _ gfx\pylo
        db 6EH, 20H, 62H, 69H, 74H, 2EH, 62H, 6DH       ; 2BBB _ n bit.bm
        db 70H, 00H                                     ; 2BC3 _ p.

__4043  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 74H, 65H       ; 2BC5 _ gfx\wate
        db 72H, 66H, 61H, 6CH, 6CH, 2EH, 62H, 6DH       ; 2BCD _ rfall.bm
        db 70H, 00H                                     ; 2BD5 _ p.

__4044  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 74H, 65H       ; 2BD7 _ gfx\wate
        db 72H, 66H, 61H, 6CH, 6CH, 20H, 74H, 6FH       ; 2BDF _ rfall to
        db 70H, 2EH, 62H, 6DH, 70H, 00H                 ; 2BE7 _ p.bmp.

__4045  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 74H, 65H       ; 2BED _ gfx\wate
        db 72H, 66H, 61H, 6CH, 6CH, 20H, 32H, 2EH       ; 2BF5 _ rfall 2.
        db 62H, 6DH, 70H, 00H                           ; 2BFD _ bmp.

__4046  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 74H, 65H       ; 2C01 _ gfx\wate
        db 72H, 66H, 61H, 6CH, 6CH, 20H, 74H, 6FH       ; 2C09 _ rfall to
        db 70H, 20H, 32H, 2EH, 62H, 6DH, 70H, 00H       ; 2C11 _ p 2.bmp.

__4047  label byte
        db 67H, 66H, 78H, 5CH, 62H, 61H, 63H, 6BH       ; 2C19 _ gfx\back
        db 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH, 6EH       ; 2C21 _  balloon
        db 20H, 31H, 2EH, 62H, 6DH, 70H, 00H            ; 2C29 _  1.bmp.

__4048  label byte
        db 67H, 66H, 78H, 5CH, 62H, 61H, 63H, 6BH       ; 2C30 _ gfx\back
        db 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH, 6EH       ; 2C38 _  balloon
        db 20H, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 2C40 _  2.bmp.

__4049  label byte
        db 67H, 66H, 78H, 5CH, 62H, 61H, 63H, 6BH       ; 2C47 _ gfx\back
        db 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH, 6EH       ; 2C4F _  balloon
        db 20H, 33H, 2EH, 62H, 6DH, 70H, 00H            ; 2C57 _  3.bmp.

__4050  label byte
        db 67H, 66H, 78H, 5CH, 62H, 61H, 63H, 6BH       ; 2C5E _ gfx\back
        db 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH, 6EH       ; 2C66 _  balloon
        db 20H, 34H, 2EH, 62H, 6DH, 70H, 00H            ; 2C6E _  4.bmp.

__4051  label byte
        db 67H, 66H, 78H, 5CH, 64H, 69H, 73H, 74H       ; 2C75 _ gfx\dist
        db 61H, 6EH, 74H, 20H, 69H, 73H, 6CH, 61H       ; 2C7D _ ant isla
        db 6EH, 64H, 2EH, 62H, 6DH, 70H, 00H            ; 2C85 _ nd.bmp.

__4052  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 73H, 73H       ; 2C8C _ gfx\boss
        db 20H, 32H, 20H, 62H, 61H, 63H, 6BH, 67H       ; 2C94 _  2 backg
        db 72H, 6FH, 75H, 6EH, 64H, 2EH, 62H, 6DH       ; 2C9C _ round.bm
        db 70H, 00H                                     ; 2CA4 _ p.

__4053  label byte
        db 67H, 66H, 78H, 2FH, 62H, 69H, 67H, 20H       ; 2CA6 _ gfx/big 
        db 70H, 6CH, 61H, 6EH, 65H, 74H, 2EH, 62H       ; 2CAE _ planet.b
        db 6DH, 70H, 00H                                ; 2CB6 _ mp.

__4054  label byte
        db 67H, 66H, 78H, 2FH, 66H, 72H, 61H, 79H       ; 2CB9 _ gfx/fray
        db 65H, 64H, 20H, 62H, 6FH, 64H, 79H, 2EH       ; 2CC1 _ ed body.
        db 62H, 6DH, 70H, 00H                           ; 2CC9 _ bmp.

__4055  label byte
        db 67H, 66H, 78H, 2FH, 66H, 72H, 61H, 79H       ; 2CCD _ gfx/fray
        db 65H, 64H, 20H, 62H, 6FH, 64H, 79H, 20H       ; 2CD5 _ ed body 
        db 32H, 2EH, 62H, 6DH, 70H, 00H                 ; 2CDD _ 2.bmp.

__4056  label byte
        db 67H, 66H, 78H, 2FH, 68H, 6FH, 6DH, 65H       ; 2CE3 _ gfx/home
        db 72H, 31H, 2EH, 62H, 6DH, 70H, 00H            ; 2CEB _ r1.bmp.

__4057  label byte
        db 67H, 66H, 78H, 2FH, 68H, 6FH, 6DH, 65H       ; 2CF2 _ gfx/home
        db 72H, 32H, 2EH, 62H, 6DH, 70H, 00H            ; 2CFA _ r2.bmp.

__4058  label byte
        db 67H, 66H, 78H, 2FH, 61H, 72H, 6DH, 20H       ; 2D01 _ gfx/arm 
        db 31H, 2EH, 62H, 6DH, 70H, 00H                 ; 2D09 _ 1.bmp.

__4059  label byte
        db 67H, 66H, 78H, 2FH, 61H, 72H, 6DH, 20H       ; 2D0F _ gfx/arm 
        db 32H, 2EH, 62H, 6DH, 70H, 00H                 ; 2D17 _ 2.bmp.

__4060  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 6DH, 62H       ; 2D1D _ gfx\bomb
        db 20H, 62H, 61H, 6CH, 6CH, 6FH, 6FH, 6EH       ; 2D25 _  balloon
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2D2D _ .bmp.

__4061  label byte
        db 67H, 66H, 78H, 5CH, 62H, 61H, 6CH, 6CH       ; 2D32 _ gfx\ball
        db 6FH, 6FH, 6EH, 20H, 62H, 6FH, 6DH, 62H       ; 2D3A _ oon bomb
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2D42 _ .bmp.

__4062  label byte
        db 67H, 66H, 78H, 5CH, 65H, 6EH, 64H, 20H       ; 2D47 _ gfx\end 
        db 73H, 74H, 72H, 69H, 6EH, 67H, 2EH, 62H       ; 2D4F _ string.b
        db 6DH, 70H, 00H                                ; 2D57 _ mp.

__4063  label byte
        db 67H, 66H, 78H, 5CH, 62H, 6FH, 6DH, 62H       ; 2D5A _ gfx\bomb
        db 20H, 72H, 6FH, 70H, 65H, 2EH, 62H, 6DH       ; 2D62 _  rope.bm
        db 70H, 00H                                     ; 2D6A _ p.

__4064  label byte
        db 67H, 66H, 78H, 5CH, 64H, 69H, 73H, 74H       ; 2D6C _ gfx\dist
        db 61H, 6EH, 74H, 20H, 62H, 6FH, 61H, 74H       ; 2D74 _ ant boat
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2D7C _ .bmp.

__4067  label byte
        db 67H, 66H, 78H, 5CH, 73H, 6DH, 6FH, 6BH       ; 2D81 _ gfx\smok
        db 65H, 20H, 00H                                ; 2D89 _ e .

__4068  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2D8C _ .bmp.

__4073  label byte
        db 67H, 66H, 78H, 2FH, 72H, 6FH, 63H, 6BH       ; 2D91 _ gfx/rock
        db 20H, 00H                                     ; 2D99 _  .

__4074  label byte
        db 2DH, 00H                                     ; 2D9B _ -.

__4075  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2D9D _ .bmp.

__4076  label byte
        db 67H, 66H, 78H, 5CH, 73H, 70H, 6CH, 61H       ; 2DA2 _ gfx\spla
        db 73H, 68H, 20H, 31H, 2EH, 62H, 6DH, 70H       ; 2DAA _ sh 1.bmp
        db 00H                                          ; 2DB2 _ .

__4077  label byte
        db 67H, 66H, 78H, 5CH, 73H, 70H, 6CH, 61H       ; 2DB3 _ gfx\spla
        db 73H, 68H, 20H, 33H, 2EH, 62H, 6DH, 70H       ; 2DBB _ sh 3.bmp
        db 00H                                          ; 2DC3 _ .

__4078  label byte
        db 67H, 66H, 78H, 5CH, 73H, 70H, 6CH, 61H       ; 2DC4 _ gfx\spla
        db 73H, 68H, 20H, 34H, 2EH, 62H, 6DH, 70H       ; 2DCC _ sh 4.bmp
        db 00H                                          ; 2DD4 _ .

__4079  label byte
        db 67H, 66H, 78H, 5CH, 73H, 70H, 6CH, 61H       ; 2DD5 _ gfx\spla
        db 73H, 68H, 20H, 35H, 2EH, 62H, 6DH, 70H       ; 2DDD _ sh 5.bmp
        db 00H                                          ; 2DE5 _ .

__4080  label byte
        db 67H, 66H, 78H, 5CH, 73H, 70H, 6CH, 61H       ; 2DE6 _ gfx\spla
        db 73H, 68H, 20H, 36H, 2EH, 62H, 6DH, 70H       ; 2DEE _ sh 6.bmp
        db 00H                                          ; 2DF6 _ .

__4081  label byte
        db 67H, 66H, 78H, 5CH, 73H, 70H, 6CH, 61H       ; 2DF7 _ gfx\spla
        db 73H, 68H, 20H, 37H, 2EH, 62H, 6DH, 70H       ; 2DFF _ sh 7.bmp
        db 00H                                          ; 2E07 _ .

__4082  label byte
        db 67H, 66H, 78H, 5CH, 70H, 61H, 72H, 72H       ; 2E08 _ gfx\parr
        db 6FH, 74H, 2EH, 62H, 6DH, 70H, 00H            ; 2E10 _ ot.bmp.

__4083  label byte
        db 67H, 66H, 78H, 5CH, 70H, 61H, 72H, 72H       ; 2E17 _ gfx\parr
        db 6FH, 74H, 32H, 2EH, 62H, 6DH, 70H, 00H       ; 2E1F _ ot2.bmp.

__4086  label byte
        db 67H, 66H, 78H, 2FH, 64H, 72H, 69H, 70H       ; 2E27 _ gfx/drip
        db 20H, 00H                                     ; 2E2F _  .

__4087  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2E31 _ .bmp.

__4088  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 69H, 74H, 74H       ; 2E36 _ gfx\litt
        db 6CH, 65H, 20H, 73H, 70H, 6CH, 61H, 73H       ; 2E3E _ le splas
        db 68H, 2EH, 62H, 6DH, 70H, 00H                 ; 2E46 _ h.bmp.

__4089  label byte
        db 67H, 66H, 78H, 5CH, 63H, 61H, 72H, 67H       ; 2E4C _ gfx\carg
        db 6FH, 20H, 62H, 6FH, 61H, 74H, 2EH, 62H       ; 2E54 _ o boat.b
        db 6DH, 70H, 00H                                ; 2E5C _ mp.

__4090  label byte
        db 67H, 66H, 78H, 2FH, 62H, 6FH, 61H, 74H       ; 2E5F _ gfx/boat
        db 20H, 77H, 61H, 6BH, 65H, 2EH, 62H, 6DH       ; 2E67 _  wake.bm
        db 70H, 00H                                     ; 2E6F _ p.

__4091  label byte
        db 67H, 66H, 78H, 2FH, 62H, 6FH, 61H, 74H       ; 2E71 _ gfx/boat
        db 20H, 77H, 61H, 6BH, 65H, 20H, 32H, 2EH       ; 2E79 _  wake 2.
        db 62H, 6DH, 70H, 00H                           ; 2E81 _ bmp.

__4092  label byte
        db 67H, 66H, 78H, 2FH, 62H, 6FH, 61H, 74H       ; 2E85 _ gfx/boat
        db 20H, 77H, 61H, 6BH, 65H, 20H, 33H, 2EH       ; 2E8D _  wake 3.
        db 62H, 6DH, 70H, 00H                           ; 2E95 _ bmp.

__4093  label byte
        db 67H, 66H, 78H, 2FH, 6DH, 69H, 73H, 73H       ; 2E99 _ gfx/miss
        db 69H, 6CH, 65H, 20H, 6CH, 61H, 75H, 6EH       ; 2EA1 _ ile laun
        db 63H, 68H, 65H, 72H, 2EH, 62H, 6DH, 70H       ; 2EA9 _ cher.bmp
        db 00H                                          ; 2EB1 _ .

__4094  label byte
        db 67H, 66H, 78H, 5CH, 63H, 6CH, 6FH, 75H       ; 2EB2 _ gfx\clou
        db 64H, 33H, 2DH, 31H, 36H, 2EH, 62H, 6DH       ; 2EBA _ d3-16.bm
        db 70H, 00H                                     ; 2EC2 _ p.

__4095  label byte
        db 67H, 66H, 78H, 5CH, 63H, 6CH, 6FH, 75H       ; 2EC4 _ gfx\clou
        db 64H, 34H, 2DH, 31H, 36H, 2EH, 62H, 6DH       ; 2ECC _ d4-16.bm
        db 70H, 00H                                     ; 2ED4 _ p.

__4096  label byte
        db 67H, 66H, 78H, 5CH, 63H, 6CH, 6FH, 75H       ; 2ED6 _ gfx\clou
        db 64H, 35H, 2DH, 31H, 36H, 2EH, 62H, 6DH       ; 2EDE _ d5-16.bm
        db 70H, 00H                                     ; 2EE6 _ p.

__4097  label byte
        db 67H, 66H, 78H, 5CH, 64H, 69H, 72H, 74H       ; 2EE8 _ gfx\dirt
        db 79H, 20H, 73H, 65H, 61H, 2DH, 31H, 36H       ; 2EF0 _ y sea-16
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2EF8 _ .bmp.

__4098  label byte
        db 67H, 66H, 78H, 5CH, 64H, 69H, 72H, 74H       ; 2EFD _ gfx\dirt
        db 79H, 20H, 73H, 65H, 61H, 20H, 63H, 6FH       ; 2F05 _ y sea co
        db 6EH, 74H, 2DH, 31H, 36H, 2EH, 62H, 6DH       ; 2F0D _ nt-16.bm
        db 70H, 00H                                     ; 2F15 _ p.

__4101  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 74H, 65H       ; 2F17 _ gfx\wate
        db 72H, 20H, 00H                                ; 2F1F _ r .

__4102  label byte
        db 2EH, 62H, 6DH, 70H, 00H                      ; 2F22 _ .bmp.

__4103  label byte
        db 67H, 66H, 78H, 5CH, 77H, 61H, 74H, 65H       ; 2F27 _ gfx\wate
        db 72H, 20H, 73H, 70H, 72H, 61H, 79H, 2EH       ; 2F2F _ r spray.
        db 62H, 6DH, 70H, 00H                           ; 2F37 _ bmp.

__4104  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 65H, 76H, 65H       ; 2F3B _ gfx\leve
        db 6CH, 20H, 33H, 20H, 62H, 6FH, 73H, 73H       ; 2F43 _ l 3 boss
        db 20H, 62H, 61H, 63H, 6BH, 2EH, 62H, 6DH       ; 2F4B _  back.bm
        db 70H, 00H                                     ; 2F53 _ p.

__4105  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 61H, 73H, 74H       ; 2F55 _ gfx\last
        db 20H, 62H, 6FH, 73H, 73H, 20H, 68H, 61H       ; 2F5D _  boss ha
        db 74H, 63H, 68H, 2EH, 62H, 6DH, 70H, 00H       ; 2F65 _ tch.bmp.

__4106  label byte
        db 67H, 66H, 78H, 5CH, 6CH, 69H, 67H, 68H       ; 2F6D _ gfx\ligh
        db 74H, 6EH, 69H, 6EH, 67H, 2EH, 62H, 6DH       ; 2F75 _ tning.bm
        db 70H, 00H                                     ; 2F7D _ p.

__4107  label byte
        db 67H, 66H, 78H, 5CH, 65H, 6EH, 65H, 6DH       ; 2F7F _ gfx\enem
        db 79H, 20H, 6CH, 69H, 67H, 68H, 74H, 6EH       ; 2F87 _ y lightn
        db 69H, 6EH, 67H, 2EH, 62H, 6DH, 70H, 00H       ; 2F8F _ ing.bmp.

__4134  label byte
        db 77H, 65H, 62H, 73H, 69H, 74H, 65H, 33H       ; 2F97 _ website3
        db 2EH, 75H, 72H, 6CH, 00H                      ; 2F9F _ .url.

__4136  label byte
        db 2EH, 00H                                     ; 2FA4 _ ..

__4138  label byte
        db 77H, 65H, 62H, 73H, 69H, 74H, 65H, 2EH       ; 2FA6 _ website.
        db 75H, 72H, 6CH, 00H                           ; 2FAE _ url.

__4181  label byte
        db 44H, 49H, 46H, 46H, 49H, 43H, 55H, 4CH       ; 2FB2 _ DIFFICUL
        db 54H, 59H, 3AH, 20H, 45H, 41H, 53H, 59H       ; 2FBA _ TY: EASY
        db 00H                                          ; 2FC2 _ .

__4184  label byte
        db 44H, 49H, 46H, 46H, 49H, 43H, 55H, 4CH       ; 2FC3 _ DIFFICUL
        db 54H, 59H, 3AH, 20H, 4EH, 4FH, 52H, 4DH       ; 2FCB _ TY: NORM
        db 41H, 4CH, 00H                                ; 2FD3 _ AL.

__4187  label byte
        db 44H, 49H, 46H, 46H, 49H, 43H, 55H, 4CH       ; 2FD6 _ DIFFICUL
        db 54H, 59H, 3AH, 20H, 48H, 41H, 52H, 44H       ; 2FDE _ TY: HARD
        db 00H                                          ; 2FE6 _ .

__4189  label byte
        db 50H, 4CH, 41H, 59H, 45H, 52H, 20H, 31H       ; 2FE7 _ PLAYER 1
        db 20H, 43H, 4FH, 4EH, 54H, 52H, 4FH, 4CH       ; 2FEF _  CONTROL
        db 53H, 3AH, 20H, 4AH, 4FH, 59H, 00H            ; 2FF7 _ S: JOY.

__4192  label byte
        db 50H, 4CH, 41H, 59H, 45H, 52H, 20H, 31H       ; 2FFE _ PLAYER 1
        db 20H, 43H, 4FH, 4EH, 54H, 52H, 4FH, 4CH       ; 3006 _  CONTROL
        db 53H, 3AH, 20H, 4DH, 4FH, 55H, 53H, 45H       ; 300E _ S: MOUSE
        db 00H                                          ; 3016 _ .

__4194  label byte
        db 50H, 4CH, 41H, 59H, 45H, 52H, 20H, 31H       ; 3017 _ PLAYER 1
        db 20H, 43H, 4FH, 4EH, 54H, 52H, 4FH, 4CH       ; 301F _  CONTROL
        db 53H, 3AH, 20H, 4BH, 45H, 59H, 53H, 00H       ; 3027 _ S: KEYS.

__4196  label byte
        db 50H, 4CH, 41H, 59H, 45H, 52H, 20H, 32H       ; 302F _ PLAYER 2
        db 20H, 43H, 4FH, 4EH, 54H, 52H, 4FH, 4CH       ; 3037 _  CONTROL
        db 53H, 3AH, 20H, 4AH, 4FH, 59H, 00H            ; 303F _ S: JOY.

__4199  label byte
        db 50H, 4CH, 41H, 59H, 45H, 52H, 20H, 32H       ; 3046 _ PLAYER 2
        db 20H, 43H, 4FH, 4EH, 54H, 52H, 4FH, 4CH       ; 304E _  CONTROL
        db 53H, 3AH, 20H, 4DH, 4FH, 55H, 53H, 45H       ; 3056 _ S: MOUSE
        db 00H                                          ; 305E _ .

__4201  label byte
        db 50H, 4CH, 41H, 59H, 45H, 52H, 20H, 32H       ; 305F _ PLAYER 2
        db 20H, 43H, 4FH, 4EH, 54H, 52H, 4FH, 4CH       ; 3067 _  CONTROL
        db 53H, 3AH, 20H, 4BH, 45H, 59H, 53H, 00H       ; 306F _ S: KEYS.

__4203  label byte
        db 4DH, 55H, 53H, 49H, 43H, 3AH, 20H, 4FH       ; 3077 _ MUSIC: O
        db 4EH, 00H                                     ; 307F _ N.

__4205  label byte
        db 4DH, 55H, 53H, 49H, 43H, 3AH, 20H, 4FH       ; 3081 _ MUSIC: O
        db 46H, 46H, 00H                                ; 3089 _ FF.

__4206  label byte
        db 53H, 54H, 41H, 52H, 54H, 20H, 47H, 41H       ; 308C _ START GA
        db 4DH, 45H, 00H                                ; 3094 _ ME.

__4208  label byte
        db 42H, 55H, 59H, 20H, 46H, 55H, 4CH, 4CH       ; 3097 _ BUY FULL
        db 20H, 56H, 45H, 52H, 53H, 49H, 4FH, 4EH       ; 309F _  VERSION
        db 00H                                          ; 30A7 _ .

__4210  label byte
        db 56H, 49H, 53H, 49H, 54H, 20H, 49H, 44H       ; 30A8 _ VISIT ID
        db 49H, 47H, 49H, 43H, 4FH, 4EH, 2EH, 43H       ; 30B0 _ IGICON.C
        db 4FH, 4DH, 00H                                ; 30B8 _ OM.

__4213  label byte
        db 56H, 49H, 53H, 49H, 54H, 20H, 52H, 45H       ; 30BB _ VISIT RE
        db 54H, 52H, 4FH, 36H, 34H, 2EH, 43H, 4FH       ; 30C3 _ TRO64.CO
        db 4DH, 00H                                     ; 30CB _ M.

__4214  label byte
        db 45H, 58H, 49H, 54H, 20H, 54H, 4FH, 20H       ; 30CD _ EXIT TO 
        db 57H, 49H, 4EH, 44H, 4FH, 57H, 53H, 00H       ; 30D5 _ WINDOWS.

__4220  label byte
        db 20H, 00H                                     ; 30DD _  .

__4250  label byte
        db 77H, 65H, 62H, 73H, 69H, 74H, 65H, 33H       ; 30DF _ website3
        db 2EH, 75H, 72H, 6CH, 00H                      ; 30E7 _ .url.

__4252  label byte
        db 2EH, 00H                                     ; 30EC _ ..

__4260  label byte
        db 42H, 55H, 59H, 20H, 4EH, 4FH, 57H, 21H       ; 30EE _ BUY NOW!
        db 00H                                          ; 30F6 _ .

__4262  label byte
        db 4DH, 41H, 59H, 42H, 45H, 20H, 4CH, 41H       ; 30F7 _ MAYBE LA
        db 54H, 45H, 52H, 00H                           ; 30FF _ TER.

__4264  label byte
        db 45H, 58H, 49H, 54H, 00H                      ; 3103 _ EXIT.

__4267  label byte
        db 47H, 45H, 54H, 20H, 54H, 48H, 45H, 20H       ; 3108 _ GET THE 
        db 46H, 55H, 4CH, 4CH, 20H, 56H, 45H, 52H       ; 3110 _ FULL VER
        db 53H, 49H, 4FH, 4EH, 21H, 00H                 ; 3118 _ SION!.

__4268  label byte
        db 32H, 30H, 20H, 4DH, 41H, 53H, 53H, 49H       ; 311E _ 20 MASSI
        db 56H, 45H, 20H, 4CH, 45H, 56H, 45H, 4CH       ; 3126 _ VE LEVEL
        db 53H, 21H, 00H                                ; 312E _ S!.

__4269  label byte
        db 47H, 49H, 47H, 41H, 4EH, 54H, 49H, 43H       ; 3131 _ GIGANTIC
        db 20H, 42H, 4FH, 53H, 53H, 45H, 53H, 21H       ; 3139 _  BOSSES!
        db 00H                                          ; 3141 _ .

__4270  label byte
        db 4DH, 4FH, 52H, 45H, 20H, 43H, 4CH, 41H       ; 3142 _ MORE CLA
        db 59H, 2CH, 4DH, 4FH, 52H, 45H, 20H, 46H       ; 314A _ Y,MORE F
        db 55H, 4EH, 21H, 00H                           ; 3152 _ UN!.

__4271  label byte
        db 53H, 4BH, 59H, 2CH, 57H, 41H, 54H, 45H       ; 3156 _ SKY,WATE
        db 52H, 2CH, 41H, 4EH, 44H, 20H, 43H, 49H       ; 315E _ R,AND CI
        db 54H, 59H, 21H, 00H                           ; 3166 _ TY!.

__4272  label byte
        db 4DH, 4FH, 4EH, 45H, 59H, 2DH, 42H, 41H       ; 316A _ MONEY-BA
        db 43H, 4BH, 20H, 47H, 55H, 41H, 52H, 41H       ; 3172 _ CK GUARA
        db 4EH, 54H, 45H, 45H, 21H, 00H                 ; 317A _ NTEE!.

__4273  label byte
        db 50H, 4CH, 41H, 59H, 20H, 49H, 4EH, 20H       ; 3180 _ PLAY IN 
        db 4AH, 55H, 53H, 54H, 20H, 31H, 30H, 20H       ; 3188 _ JUST 10 
        db 4DH, 49H, 4EH, 55H, 54H, 45H, 53H, 21H       ; 3190 _ MINUTES!
        db 00H                                          ; 3198 _ .

__4275  label byte
        db 59H, 4FH, 55H, 52H, 20H, 46H, 52H, 45H       ; 3199 _ YOUR FRE
        db 45H, 20H, 54H, 52H, 49H, 41H, 4CH, 20H       ; 31A1 _ E TRIAL 
        db 48H, 41H, 53H, 20H, 45H, 4EH, 44H, 45H       ; 31A9 _ HAS ENDE
        db 44H, 00H                                     ; 31B1 _ D.

__4276  label byte
        db 54H, 4FH, 20H, 43H, 4FH, 4EH, 54H, 49H       ; 31B3 _ TO CONTI
        db 4EH, 55H, 45H, 20H, 50H, 4CH, 41H, 59H       ; 31BB _ NUE PLAY
        db 49H, 4EH, 47H, 2CH, 00H                      ; 31C3 _ ING,.

__4277  label byte
        db 59H, 4FH, 55H, 20H, 4DH, 55H, 53H, 54H       ; 31C8 _ YOU MUST
        db 20H, 50H, 55H, 52H, 43H, 48H, 41H, 53H       ; 31D0 _  PURCHAS
        db 45H, 20H, 54H, 48H, 45H, 00H                 ; 31D8 _ E THE.

__4278  label byte
        db 41H, 4DH, 41H, 5AH, 49H, 4EH, 47H, 20H       ; 31DE _ AMAZING 
        db 46H, 55H, 4CH, 4CH, 20H, 56H, 45H, 52H       ; 31E6 _ FULL VER
        db 53H, 49H, 4FH, 4EH, 00H                      ; 31EE _ SION.

__4279  label byte
        db 4FH, 46H, 20H, 50H, 4CH, 41H, 54H, 59H       ; 31F3 _ OF PLATY
        db 50H, 55H, 53H, 2EH, 20H, 43H, 4CH, 49H       ; 31FB _ PUS. CLI
        db 43H, 4BH, 00H                                ; 3203 _ CK.

__4280  label byte
        db 42H, 55H, 59H, 20H, 4EH, 4FH, 57H, 00H       ; 3206 _ BUY NOW.

__4281  label byte
        db 20H, 42H, 45H, 4CH, 4FH, 57H, 20H, 54H       ; 320E _  BELOW T
        db 4FH, 00H                                     ; 3216 _ O.

__4282  label byte
        db 4FH, 52H, 44H, 45H, 52H, 20H, 41H, 4EH       ; 3218 _ ORDER AN
        db 44H, 20H, 59H, 4FH, 55H, 20H, 57H, 49H       ; 3220 _ D YOU WI
        db 4CH, 4CH, 20H, 42H, 45H, 00H                 ; 3228 _ LL BE.

__4283  label byte
        db 41H, 42H, 4CH, 45H, 20H, 54H, 4FH, 20H       ; 322E _ ABLE TO 
        db 44H, 4FH, 57H, 4EH, 4CH, 4FH, 41H, 44H       ; 3236 _ DOWNLOAD
        db 20H, 54H, 48H, 45H, 00H                      ; 323E _  THE.

__4284  label byte
        db 46H, 55H, 4CH, 4CH, 20H, 56H, 45H, 52H       ; 3243 _ FULL VER
        db 53H, 49H, 4FH, 4EH, 20H, 52H, 49H, 47H       ; 324B _ SION RIG
        db 48H, 54H, 00H                                ; 3253 _ HT.

__4285  label byte
        db 41H, 57H, 41H, 59H, 21H, 21H, 21H, 21H       ; 3256 _ AWAY!!!!
        db 21H, 21H, 00H                                ; 325E _ !!.

__496   label byte
        db 50H, 52H, 45H, 53H, 53H, 20H, 41H, 20H       ; 3261 _ PRESS A 
        db 4BH, 45H, 59H, 00H                           ; 3269 _ KEY.

__497   label byte
        db 45H, 53H, 43H, 41H, 50H, 45H, 00H            ; 326D _ ESCAPE.

__498   label byte
        db 31H, 00H                                     ; 3274 _ 1.

__499   label byte
        db 32H, 00H                                     ; 3276 _ 2.

__500   label byte
        db 33H, 00H                                     ; 3278 _ 3.

__501   label byte
        db 34H, 00H                                     ; 327A _ 4.

__502   label byte
        db 35H, 00H                                     ; 327C _ 5.

__503   label byte
        db 36H, 00H                                     ; 327E _ 6.

__504   label byte
        db 37H, 00H                                     ; 3280 _ 7.

__505   label byte
        db 38H, 00H                                     ; 3282 _ 8.

__506   label byte
        db 39H, 00H                                     ; 3284 _ 9.

__507   label byte
        db 30H, 00H                                     ; 3286 _ 0.

__508   label byte
        db 6DH, 69H, 6EH, 75H, 73H, 00H                 ; 3288 _ minus.

__509   label byte
        db 65H, 71H, 75H, 61H, 6CH, 73H, 00H            ; 328E _ equals.

__510   label byte
        db 62H, 61H, 63H, 6BH, 73H, 70H, 61H, 63H       ; 3295 _ backspac
        db 65H, 00H                                     ; 329D _ e.

__511   label byte
        db 74H, 61H, 62H, 00H                           ; 329F _ tab.

__512   label byte
        db 71H, 00H                                     ; 32A3 _ q.

__513   label byte
        db 77H, 00H                                     ; 32A5 _ w.

__514   label byte
        db 65H, 00H                                     ; 32A7 _ e.

__515   label byte
        db 72H, 00H                                     ; 32A9 _ r.

__516   label byte
        db 74H, 00H                                     ; 32AB _ t.

__517   label byte
        db 79H, 00H                                     ; 32AD _ y.

__518   label byte
        db 75H, 00H                                     ; 32AF _ u.

__519   label byte
        db 69H, 00H                                     ; 32B1 _ i.

__520   label byte
        db 6FH, 00H                                     ; 32B3 _ o.

__521   label byte
        db 70H, 00H                                     ; 32B5 _ p.

__522   label byte
        db 6CH, 65H, 66H, 74H, 20H, 62H, 72H, 61H       ; 32B7 _ left bra
        db 63H, 6BH, 65H, 74H, 00H                      ; 32BF _ cket.

__523   label byte
        db 72H, 69H, 67H, 68H, 74H, 20H, 62H, 72H       ; 32C4 _ right br
        db 61H, 63H, 6BH, 65H, 74H, 00H                 ; 32CC _ acket.

__524   label byte
        db 65H, 6EH, 74H, 65H, 72H, 00H                 ; 32D2 _ enter.

__525   label byte
        db 6CH, 65H, 66H, 74H, 20H, 63H, 74H, 72H       ; 32D8 _ left ctr
        db 6CH, 00H                                     ; 32E0 _ l.

__526   label byte
        db 61H, 00H                                     ; 32E2 _ a.

__527   label byte
        db 73H, 00H                                     ; 32E4 _ s.

__528   label byte
        db 64H, 00H                                     ; 32E6 _ d.

__529   label byte
        db 66H, 00H                                     ; 32E8 _ f.

__530   label byte
        db 67H, 00H                                     ; 32EA _ g.

__531   label byte
        db 68H, 00H                                     ; 32EC _ h.

__532   label byte
        db 6AH, 00H                                     ; 32EE _ j.

__533   label byte
        db 6BH, 00H                                     ; 32F0 _ k.

__534   label byte
        db 6CH, 00H                                     ; 32F2 _ l.

__535   label byte
        db 73H, 65H, 6DH, 69H, 63H, 6FH, 6CH, 6FH       ; 32F4 _ semicolo
        db 6EH, 00H                                     ; 32FC _ n.

__536   label byte
        db 61H, 70H, 6FH, 73H, 74H, 72H, 6FH, 70H       ; 32FE _ apostrop
        db 68H, 65H, 00H                                ; 3306 _ he.

__537   label byte
        db 67H, 72H, 61H, 76H, 65H, 00H                 ; 3309 _ grave.

__538   label byte
        db 4CH, 65H, 66H, 74H, 20H, 73H, 68H, 69H       ; 330F _ Left shi
        db 66H, 74H, 00H                                ; 3317 _ ft.

__539   label byte
        db 62H, 61H, 63H, 6BH, 20H, 73H, 6CH, 61H       ; 331A _ back sla
        db 73H, 68H, 00H                                ; 3322 _ sh.

__540   label byte
        db 7AH, 00H                                     ; 3325 _ z.

__541   label byte
        db 78H, 00H                                     ; 3327 _ x.

__542   label byte
        db 63H, 00H                                     ; 3329 _ c.

__543   label byte
        db 76H, 00H                                     ; 332B _ v.

__544   label byte
        db 62H, 00H                                     ; 332D _ b.

__545   label byte
        db 6EH, 00H                                     ; 332F _ n.

__546   label byte
        db 6DH, 00H                                     ; 3331 _ m.

__547   label byte
        db 63H, 6FH, 6DH, 6DH, 61H, 00H                 ; 3333 _ comma.

__548   label byte
        db 70H, 65H, 72H, 69H, 6FH, 64H, 00H            ; 3339 _ period.

__549   label byte
        db 73H, 6CH, 61H, 73H, 68H, 00H                 ; 3340 _ slash.

__550   label byte
        db 72H, 69H, 67H, 68H, 74H, 20H, 73H, 68H       ; 3346 _ right sh
        db 69H, 66H, 74H, 00H                           ; 334E _ ift.

__551   label byte
        db 6DH, 75H, 6CH, 74H, 69H, 70H, 6CH, 79H       ; 3352 _ multiply
        db 00H                                          ; 335A _ .

__552   label byte
        db 6CH, 65H, 66H, 74H, 20H, 61H, 6CH, 74H       ; 335B _ left alt
        db 00H                                          ; 3363 _ .

__553   label byte
        db 73H, 70H, 61H, 63H, 65H, 00H                 ; 3364 _ space.

__554   label byte
        db 63H, 61H, 70H, 73H, 6CH, 6FH, 63H, 6BH       ; 336A _ capslock
        db 00H                                          ; 3372 _ .

__555   label byte
        db 66H, 31H, 00H                                ; 3373 _ f1.

__556   label byte
        db 66H, 32H, 00H                                ; 3376 _ f2.

__557   label byte
        db 66H, 33H, 00H                                ; 3379 _ f3.

__558   label byte
        db 66H, 34H, 00H                                ; 337C _ f4.

__559   label byte
        db 66H, 35H, 00H                                ; 337F _ f5.

__560   label byte
        db 66H, 36H, 00H                                ; 3382 _ f6.

__561   label byte
        db 66H, 37H, 00H                                ; 3385 _ f7.

__562   label byte
        db 66H, 38H, 00H                                ; 3388 _ f8.

__563   label byte
        db 66H, 39H, 00H                                ; 338B _ f9.

__564   label byte
        db 66H, 31H, 30H, 00H                           ; 338E _ f10.

__565   label byte
        db 6EH, 75H, 6DH, 6CH, 6FH, 63H, 6BH, 00H       ; 3392 _ numlock.

__566   label byte
        db 73H, 63H, 72H, 6FH, 6CH, 6CH, 00H            ; 339A _ scroll.

__567   label byte
        db 6EH, 75H, 6DH, 20H, 37H, 00H                 ; 33A1 _ num 7.

__568   label byte
        db 6EH, 75H, 6DH, 20H, 38H, 00H                 ; 33A7 _ num 8.

__569   label byte
        db 6EH, 75H, 6DH, 20H, 39H, 00H                 ; 33AD _ num 9.

__570   label byte
        db 73H, 75H, 62H, 74H, 72H, 61H, 63H, 74H       ; 33B3 _ subtract
        db 00H                                          ; 33BB _ .

__571   label byte
        db 6EH, 75H, 6DH, 20H, 34H, 00H                 ; 33BC _ num 4.

__572   label byte
        db 6EH, 75H, 6DH, 20H, 35H, 00H                 ; 33C2 _ num 5.

__573   label byte
        db 6EH, 75H, 6DH, 20H, 36H, 00H                 ; 33C8 _ num 6.

__574   label byte
        db 61H, 64H, 64H, 00H                           ; 33CE _ add.

__575   label byte
        db 6EH, 75H, 6DH, 20H, 31H, 00H                 ; 33D2 _ num 1.

__576   label byte
        db 6EH, 75H, 6DH, 20H, 32H, 00H                 ; 33D8 _ num 2.

__577   label byte
        db 6EH, 75H, 6DH, 20H, 33H, 00H                 ; 33DE _ num 3.

__578   label byte
        db 6EH, 75H, 6DH, 20H, 30H, 00H                 ; 33E4 _ num 0.

__579   label byte
        db 64H, 65H, 63H, 69H, 6DH, 61H, 6CH, 00H       ; 33EA _ decimal.

__580   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 33F2 _ NONE.

__581   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 33F7 _ NONE.

__582   label byte
        db 6FH, 65H, 6DH, 31H, 30H, 32H, 00H            ; 33FC _ oem102.

__583   label byte
        db 66H, 31H, 31H, 00H                           ; 3403 _ f11.

__584   label byte
        db 66H, 31H, 32H, 00H                           ; 3407 _ f12.

__585   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 340B _ NONE.

__586   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3410 _ NONE.

__587   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3415 _ NONE.

__588   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 341A _ NONE.

__589   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 341F _ NONE.

__590   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3424 _ NONE.

__591   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3429 _ NONE.

__592   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 342E _ NONE.

__593   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3433 _ NONE.

__594   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3438 _ NONE.

__595   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 343D _ NONE.

__596   label byte
        db 66H, 31H, 33H, 00H                           ; 3442 _ f13.

__597   label byte
        db 66H, 31H, 34H, 00H                           ; 3446 _ f14.

__598   label byte
        db 66H, 31H, 35H, 00H                           ; 344A _ f15.

__599   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 344E _ NONE.

__600   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3453 _ NONE.

__601   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3458 _ NONE.

__602   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 345D _ NONE.

__603   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3462 _ NONE.

__604   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3467 _ NONE.

__605   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 346C _ NONE.

__606   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3471 _ NONE.

__607   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3476 _ NONE.

__608   label byte
        db 6BH, 61H, 6EH, 61H, 00H                      ; 347B _ kana.

__609   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3480 _ NONE.

__610   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3485 _ NONE.

__611   label byte
        db 61H, 62H, 6EH, 74H, 20H, 63H, 31H, 00H       ; 348A _ abnt c1.

__612   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3492 _ NONE.

__613   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3497 _ NONE.

__614   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 349C _ NONE.

__615   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34A1 _ NONE.

__616   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34A6 _ NONE.

__617   label byte
        db 63H, 6FH, 6EH, 76H, 65H, 72H, 74H, 00H       ; 34AB _ convert.

__618   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34B3 _ NONE.

__619   label byte
        db 6EH, 6FH, 2DH, 63H, 6FH, 6EH, 76H, 65H       ; 34B8 _ no-conve
        db 72H, 74H, 00H                                ; 34C0 _ rt.

__620   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34C3 _ NONE.

__621   label byte
        db 79H, 65H, 6EH, 00H                           ; 34C8 _ yen.

__622   label byte
        db 61H, 62H, 6EH, 74H, 20H, 63H, 32H, 00H       ; 34CC _ abnt c2.

__623   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34D4 _ NONE.

__624   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34D9 _ NONE.

__625   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34DE _ NONE.

__626   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34E3 _ NONE.

__627   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34E8 _ NONE.

__628   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34ED _ NONE.

__629   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34F2 _ NONE.

__630   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34F7 _ NONE.

__631   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 34FC _ NONE.

__632   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3501 _ NONE.

__633   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3506 _ NONE.

__634   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 350B _ NONE.

__635   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3510 _ NONE.

__636   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3515 _ NONE.

__637   label byte
        db 6EH, 75H, 6DH, 20H, 3DH, 00H                 ; 351A _ num =.

__638   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3520 _ NONE.

__639   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3525 _ NONE.

__640   label byte
        db 70H, 72H, 65H, 76H, 2EH, 20H, 74H, 72H       ; 352A _ prev. tr
        db 61H, 6BH, 00H                                ; 3532 _ ak.

__641   label byte
        db 61H, 74H, 00H                                ; 3535 _ at.

__642   label byte
        db 63H, 6FH, 6CH, 6FH, 6EH, 00H                 ; 3538 _ colon.

__643   label byte
        db 75H, 6EH, 64H, 65H, 72H, 6CH, 69H, 6EH       ; 353E _ underlin
        db 65H, 00H                                     ; 3546 _ e.

__644   label byte
        db 6BH, 61H, 6EH, 6AH, 69H, 00H                 ; 3548 _ kanji.

__645   label byte
        db 53H, 74H, 6FH, 70H, 00H                      ; 354E _ Stop.

__646   label byte
        db 61H, 78H, 00H                                ; 3553 _ ax.

__647   label byte
        db 75H, 6EH, 6CH, 61H, 62H, 65H, 6CH, 64H       ; 3556 _ unlabeld
        db 00H                                          ; 355E _ .

__648   label byte
        db 20H, 4EH, 4FH, 4EH, 45H, 00H                 ; 355F _  NONE.

__649   label byte
        db 6EH, 65H, 78H, 74H, 20H, 74H, 72H, 61H       ; 3565 _ next tra
        db 63H, 6BH, 00H                                ; 356D _ ck.

__650   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3570 _ NONE.

__651   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3575 _ NONE.

__652   label byte
        db 6EH, 75H, 6DH, 70H, 61H, 64H, 20H, 65H       ; 357A _ numpad e
        db 6EH, 74H, 65H, 72H, 00H                      ; 3582 _ nter.

__653   label byte
        db 72H, 69H, 67H, 68H, 74H, 20H, 63H, 74H       ; 3587 _ right ct
        db 72H, 6CH, 00H                                ; 358F _ rl.

__654   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3592 _ NONE.

__655   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3597 _ NONE.

__656   label byte
        db 6DH, 75H, 74H, 65H, 00H                      ; 359C _ mute.

__657   label byte
        db 63H, 61H, 6CH, 63H, 00H                      ; 35A1 _ calc.

__658   label byte
        db 70H, 6CH, 61H, 79H, 20H, 70H, 61H, 75H       ; 35A6 _ play pau
        db 73H, 65H, 00H                                ; 35AE _ se.

__659   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35B1 _ NONE.

__660   label byte
        db 6DH, 65H, 64H, 69H, 61H, 20H, 73H, 74H       ; 35B6 _ media st
        db 6FH, 70H, 00H                                ; 35BE _ op.

__661   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35C1 _ NONE.

__662   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35C6 _ NONE.

__663   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35CB _ NONE.

__664   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35D0 _ NONE.

__665   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35D5 _ NONE.

__666   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35DA _ NONE.

__667   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35DF _ NONE.

__668   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35E4 _ NONE.

__669   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35E9 _ NONE.

__670   label byte
        db 76H, 6FH, 6CH, 75H, 6DH, 65H, 20H, 64H       ; 35EE _ volume d
        db 6FH, 77H, 6EH, 00H                           ; 35F6 _ own.

__671   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 35FA _ NONE.

__672   label byte
        db 76H, 6FH, 6CH, 75H, 6DH, 65H, 20H, 75H       ; 35FF _ volume u
        db 70H, 00H                                     ; 3607 _ p.

__673   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3609 _ NONE.

__674   label byte
        db 77H, 65H, 62H, 68H, 6FH, 6DH, 65H, 00H       ; 360E _ webhome.

__675   label byte
        db 6EH, 75H, 6DH, 70H, 61H, 64H, 20H, 63H       ; 3616 _ numpad c
        db 6FH, 6DH, 6DH, 61H, 00H                      ; 361E _ omma.

__676   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3623 _ NONE.

__677   label byte
        db 64H, 69H, 76H, 69H, 64H, 65H, 00H            ; 3628 _ divide.

__678   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 362F _ NONE.

__679   label byte
        db 73H, 79H, 73H, 72H, 71H, 00H                 ; 3634 _ sysrq.

__680   label byte
        db 72H, 69H, 67H, 68H, 74H, 20H, 61H, 6CH       ; 363A _ right al
        db 74H, 00H                                     ; 3642 _ t.

__681   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3644 _ NONE.

__682   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3649 _ NONE.

__683   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 364E _ NONE.

__684   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3653 _ NONE.

__685   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3658 _ NONE.

__686   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 365D _ NONE.

__687   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3662 _ NONE.

__688   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3667 _ NONE.

__689   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 366C _ NONE.

__690   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3671 _ NONE.

__691   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3676 _ NONE.

__692   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 367B _ NONE.

__693   label byte
        db 70H, 61H, 75H, 73H, 65H, 00H                 ; 3680 _ pause.

__694   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3686 _ NONE.

__695   label byte
        db 68H, 6FH, 6DH, 65H, 00H                      ; 368B _ home.

__696   label byte
        db 75H, 70H, 20H, 61H, 72H, 72H, 6FH, 77H       ; 3690 _ up arrow
        db 00H                                          ; 3698 _ .

__697   label byte
        db 70H, 61H, 67H, 65H, 20H, 75H, 70H, 00H       ; 3699 _ page up.

__698   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36A1 _ NONE.

__699   label byte
        db 4CH, 65H, 66H, 74H, 20H, 61H, 72H, 72H       ; 36A6 _ Left arr
        db 6FH, 77H, 00H                                ; 36AE _ ow.

__700   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36B1 _ NONE.

__701   label byte
        db 52H, 69H, 67H, 68H, 74H, 20H, 61H, 72H       ; 36B6 _ Right ar
        db 72H, 6FH, 77H, 00H                           ; 36BE _ row.

__702   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36C2 _ NONE.

__703   label byte
        db 45H, 6EH, 64H, 00H                           ; 36C7 _ End.

__704   label byte
        db 64H, 6FH, 77H, 6EH, 20H, 61H, 72H, 72H       ; 36CB _ down arr
        db 6FH, 77H, 00H                                ; 36D3 _ ow.

__705   label byte
        db 70H, 61H, 67H, 65H, 20H, 64H, 6FH, 77H       ; 36D6 _ page dow
        db 6EH, 00H                                     ; 36DE _ n.

__706   label byte
        db 49H, 6EH, 73H, 65H, 72H, 74H, 00H            ; 36E0 _ Insert.

__707   label byte
        db 44H, 65H, 6CH, 65H, 74H, 65H, 00H            ; 36E7 _ Delete.

__708   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36EE _ NONE.

__709   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36F3 _ NONE.

__710   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36F8 _ NONE.

__711   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 36FD _ NONE.

__712   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3702 _ NONE.

__713   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3707 _ NONE.

__714   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 370C _ NONE.

__715   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3711 _ NONE.

__716   label byte
        db 4EH, 4FH, 4EH, 45H, 00H                      ; 3716 _ NONE.

__717   label byte
        db 61H, 70H, 70H, 73H, 00H                      ; 371B _ apps.

__718   label byte
        db 41H, 00H                                     ; 3720 _ A.

__719   label byte
        db 42H, 00H                                     ; 3722 _ B.

__720   label byte
        db 43H, 00H                                     ; 3724 _ C.

__721   label byte
        db 44H, 00H                                     ; 3726 _ D.

__722   label byte
        db 45H, 00H                                     ; 3728 _ E.

__723   label byte
        db 46H, 00H                                     ; 372A _ F.

__724   label byte
        db 47H, 00H                                     ; 372C _ G.

__725   label byte
        db 48H, 00H                                     ; 372E _ H.

__726   label byte
        db 49H, 00H                                     ; 3730 _ I.

__727   label byte
        db 4AH, 00H                                     ; 3732 _ J.

__728   label byte
        db 4BH, 00H                                     ; 3734 _ K.

__729   label byte
        db 4CH, 00H                                     ; 3736 _ L.

__730   label byte
        db 4DH, 00H                                     ; 3738 _ M.

__731   label byte
        db 4EH, 00H                                     ; 373A _ N.

__732   label byte
        db 4FH, 00H                                     ; 373C _ O.

__733   label byte
        db 50H, 00H                                     ; 373E _ P.

__734   label byte
        db 51H, 00H                                     ; 3740 _ Q.

__735   label byte
        db 52H, 00H                                     ; 3742 _ R.

__736   label byte
        db 53H, 00H                                     ; 3744 _ S.

__737   label byte
        db 54H, 00H                                     ; 3746 _ T.

__738   label byte
        db 55H, 00H                                     ; 3748 _ U.

__739   label byte
        db 56H, 00H                                     ; 374A _ V.

__740   label byte
        db 57H, 00H                                     ; 374C _ W.

__741   label byte
        db 58H, 00H                                     ; 374E _ X.

__742   label byte
        db 59H, 00H                                     ; 3750 _ Y.

__743   label byte
        db 5AH, 00H                                     ; 3752 _ Z.

__744   label byte
        db 30H, 00H                                     ; 3754 _ 0.

__745   label byte
        db 31H, 00H                                     ; 3756 _ 1.

__746   label byte
        db 32H, 00H                                     ; 3758 _ 2.

__747   label byte
        db 33H, 00H                                     ; 375A _ 3.

__748   label byte
        db 34H, 00H                                     ; 375C _ 4.

__749   label byte
        db 35H, 00H                                     ; 375E _ 5.

__750   label byte
        db 36H, 00H                                     ; 3760 _ 6.

__751   label byte
        db 37H, 00H                                     ; 3762 _ 7.

__752   label byte
        db 38H, 00H                                     ; 3764 _ 8.

__753   label byte
        db 39H, 00H                                     ; 3766 _ 9.

__754   label byte
        db 2AH, 00H                                     ; 3768 _ *.

__755   label byte
        db 21H, 00H                                     ; 376A _ !.

__756   label byte
        db 28H, 00H                                     ; 376C _ (.

__757   label byte
        db 29H, 00H                                     ; 376E _ ).

__758   label byte
        db 2BH, 00H                                     ; 3770 _ +.

__759   label byte
        db 3FH, 00H                                     ; 3772 _ ?.

__760   label byte
        db 2EH, 00H                                     ; 3774 _ ..

__761   label byte
        db 4AH, 00H                                     ; 3776 _ J.

__762   label byte
        db 5EH, 00H                                     ; 3778 _ ^.

__763   label byte
        db 25H, 00H                                     ; 377A _ %.

__764   label byte
        db 24H, 00H                                     ; 377C _ $.

__765   label byte
        db 26H, 00H                                     ; 377E _ &.

__766   label byte
        db 2DH, 00H                                     ; 3780 _ -.

__767   label byte
        db 3AH, 00H                                     ; 3782 _ :.

__768   label byte
        db 3DH, 00H                                     ; 3784 _ =.

__769   label byte
        db 2CH, 00H                                     ; 3786 _ ,.

__770   label byte
        db 20H, 00H                                     ; 3788 _  .

__771   label byte
        db 41H, 4EH, 54H, 48H, 4FH, 4EH, 59H, 00H       ; 378A _ ANTHONY.

__772   label byte
        db 42H, 45H, 52H, 54H, 00H                      ; 3792 _ BERT.

__773   label byte
        db 56H, 4CH, 41H, 44H, 00H                      ; 3797 _ VLAD.

__774   label byte
        db 42H, 4FH, 52H, 49H, 53H, 00H                 ; 379C _ BORIS.

__775   label byte
        db 43H, 48H, 41H, 55H, 4EH, 43H, 45H, 59H       ; 37A2 _ CHAUNCEY
        db 00H                                          ; 37AA _ .

__776   label byte
        db 45H, 52H, 4EH, 53H, 54H, 00H                 ; 37AB _ ERNST.

__777   label byte
        db 45H, 47H, 4FH, 4EH, 00H                      ; 37B1 _ EGON.

__778   label byte
        db 4CH, 55H, 44H, 57H, 49H, 47H, 00H            ; 37B6 _ LUDWIG.

__779   label byte
        db 44H, 4FH, 4DH, 49H, 4EH, 4FH, 00H            ; 37BD _ DOMINO.

__780   label byte
        db 5AH, 45H, 4BH, 45H, 00H                      ; 37C4 _ ZEKE.

__781   label byte
        db 53H, 4DH, 41H, 4CH, 4CH, 20H, 43H, 41H       ; 37C9 _ SMALL CA
        db 52H, 52H, 49H, 45H, 52H, 00H                 ; 37D1 _ RRIER.

__782   label byte
        db 53H, 4DH, 41H, 4CH, 4CH, 20H, 48H, 4FH       ; 37D7 _ SMALL HO
        db 56H, 45H, 52H, 53H, 48H, 49H, 50H, 00H       ; 37DF _ VERSHIP.

__783   label byte
        db 4CH, 41H, 52H, 47H, 45H, 20H, 48H, 4FH       ; 37E7 _ LARGE HO
        db 56H, 45H, 52H, 53H, 48H, 49H, 50H, 00H       ; 37EF _ VERSHIP.

__784   label byte
        db 4CH, 41H, 52H, 47H, 45H, 20H, 43H, 41H       ; 37F7 _ LARGE CA
        db 52H, 52H, 49H, 45H, 52H, 00H                 ; 37FF _ RRIER.

__785   label byte
        db 47H, 55H, 4EH, 53H, 48H, 49H, 50H, 20H       ; 3805 _ GUNSHIP 
        db 4DH, 4BH, 49H, 00H                           ; 380D _ MKI.

__786   label byte
        db 4DH, 4FH, 55H, 4EH, 54H, 45H, 44H, 20H       ; 3811 _ MOUNTED 
        db 43H, 41H, 4EH, 4EH, 4FH, 4EH, 00H            ; 3819 _ CANNON.

__787   label byte
        db 4DH, 49H, 53H, 53H, 49H, 4CH, 45H, 20H       ; 3820 _ MISSILE 
        db 47H, 55H, 4EH, 53H, 48H, 49H, 50H, 00H       ; 3828 _ GUNSHIP.

__788   label byte
        db 47H, 55H, 4EH, 53H, 48H, 49H, 50H, 20H       ; 3830 _ GUNSHIP 
        db 4DH, 4BH, 49H, 49H, 00H                      ; 3838 _ MKII.

__789   label byte
        db 4DH, 49H, 53H, 53H, 49H, 4CH, 45H, 20H       ; 383D _ MISSILE 
        db 42H, 4FH, 41H, 54H, 00H                      ; 3845 _ BOAT.

__790   label byte
        db 4CH, 41H, 53H, 45H, 52H, 20H, 48H, 4FH       ; 384A _ LASER HO
        db 56H, 45H, 52H, 53H, 48H, 49H, 50H, 00H       ; 3852 _ VERSHIP.

__791   label byte
        db 53H, 41H, 54H, 45H, 4CH, 4CH, 49H, 54H       ; 385A _ SATELLIT
        db 45H, 20H, 44H, 49H, 53H, 48H, 00H            ; 3862 _ E DISH.

.CONST

___LIBS label byte
        db 00H, 90H, 90H, 90H                           ; 0000 _ ....

___DATA label byte
        db 04H, 00H, 00H, 00H                           ; 0004 _ ....
        dd __496                                        ; 0008 _ 00000000 (d)
        dd 00000004H                                    ; 000C _ 4 
        dd __497                                        ; 0010 _ 00000000 (d)
        dd 00000004H                                    ; 0014 _ 4 
        dd __498                                        ; 0018 _ 00000000 (d)
        dd 00000004H                                    ; 001C _ 4 
        dd __499                                        ; 0020 _ 00000000 (d)
        dd 00000004H                                    ; 0024 _ 4 
        dd __500                                        ; 0028 _ 00000000 (d)
        dd 00000004H                                    ; 002C _ 4 
        dd __501                                        ; 0030 _ 00000000 (d)
        dd 00000004H                                    ; 0034 _ 4 
        dd __502                                        ; 0038 _ 00000000 (d)
        dd 00000004H                                    ; 003C _ 4 
        dd __503                                        ; 0040 _ 00000000 (d)
        dd 00000004H                                    ; 0044 _ 4 
        dd __504                                        ; 0048 _ 00000000 (d)
        dd 00000004H                                    ; 004C _ 4 
        dd __505                                        ; 0050 _ 00000000 (d)
        dd 00000004H                                    ; 0054 _ 4 
        dd __506                                        ; 0058 _ 00000000 (d)
        dd 00000004H                                    ; 005C _ 4 
        dd __507                                        ; 0060 _ 00000000 (d)
        dd 00000004H                                    ; 0064 _ 4 
        dd __508                                        ; 0068 _ 00000000 (d)
        dd 00000004H                                    ; 006C _ 4 
        dd __509                                        ; 0070 _ 00000000 (d)
        dd 00000004H                                    ; 0074 _ 4 
        dd __510                                        ; 0078 _ 00000000 (d)
        dd 00000004H                                    ; 007C _ 4 
        dd __511                                        ; 0080 _ 00000000 (d)
        dd 00000004H                                    ; 0084 _ 4 
        dd __512                                        ; 0088 _ 00000000 (d)
        dd 00000004H                                    ; 008C _ 4 
        dd __513                                        ; 0090 _ 00000000 (d)
        dd 00000004H                                    ; 0094 _ 4 
        dd __514                                        ; 0098 _ 00000000 (d)
        dd 00000004H                                    ; 009C _ 4 
        dd __515                                        ; 00A0 _ 00000000 (d)
        dd 00000004H                                    ; 00A4 _ 4 
        dd __516                                        ; 00A8 _ 00000000 (d)
        dd 00000004H                                    ; 00AC _ 4 
        dd __517                                        ; 00B0 _ 00000000 (d)
        dd 00000004H                                    ; 00B4 _ 4 
        dd __518                                        ; 00B8 _ 00000000 (d)
        dd 00000004H                                    ; 00BC _ 4 
        dd __519                                        ; 00C0 _ 00000000 (d)
        dd 00000004H                                    ; 00C4 _ 4 
        dd __520                                        ; 00C8 _ 00000000 (d)
        dd 00000004H                                    ; 00CC _ 4 
        dd __521                                        ; 00D0 _ 00000000 (d)
        dd 00000004H                                    ; 00D4 _ 4 
        dd __522                                        ; 00D8 _ 00000000 (d)
        dd 00000004H                                    ; 00DC _ 4 
        dd __523                                        ; 00E0 _ 00000000 (d)
        dd 00000004H                                    ; 00E4 _ 4 
        dd __524                                        ; 00E8 _ 00000000 (d)
        dd 00000004H                                    ; 00EC _ 4 
        dd __525                                        ; 00F0 _ 00000000 (d)
        dd 00000004H                                    ; 00F4 _ 4 
        dd __526                                        ; 00F8 _ 00000000 (d)
        dd 00000004H                                    ; 00FC _ 4 
        dd __527                                        ; 0100 _ 00000000 (d)
        dd 00000004H                                    ; 0104 _ 4 
        dd __528                                        ; 0108 _ 00000000 (d)
        dd 00000004H                                    ; 010C _ 4 
        dd __529                                        ; 0110 _ 00000000 (d)
        dd 00000004H                                    ; 0114 _ 4 
        dd __530                                        ; 0118 _ 00000000 (d)
        dd 00000004H                                    ; 011C _ 4 
        dd __531                                        ; 0120 _ 00000000 (d)
        dd 00000004H                                    ; 0124 _ 4 
        dd __532                                        ; 0128 _ 00000000 (d)
        dd 00000004H                                    ; 012C _ 4 
        dd __533                                        ; 0130 _ 00000000 (d)
        dd 00000004H                                    ; 0134 _ 4 
        dd __534                                        ; 0138 _ 00000000 (d)
        dd 00000004H                                    ; 013C _ 4 
        dd __535                                        ; 0140 _ 00000000 (d)
        dd 00000004H                                    ; 0144 _ 4 
        dd __536                                        ; 0148 _ 00000000 (d)
        dd 00000004H                                    ; 014C _ 4 
        dd __537                                        ; 0150 _ 00000000 (d)
        dd 00000004H                                    ; 0154 _ 4 
        dd __538                                        ; 0158 _ 00000000 (d)
        dd 00000004H                                    ; 015C _ 4 
        dd __539                                        ; 0160 _ 00000000 (d)
        dd 00000004H                                    ; 0164 _ 4 
        dd __540                                        ; 0168 _ 00000000 (d)
        dd 00000004H                                    ; 016C _ 4 
        dd __541                                        ; 0170 _ 00000000 (d)
        dd 00000004H                                    ; 0174 _ 4 
        dd __542                                        ; 0178 _ 00000000 (d)
        dd 00000004H                                    ; 017C _ 4 
        dd __543                                        ; 0180 _ 00000000 (d)
        dd 00000004H                                    ; 0184 _ 4 
        dd __544                                        ; 0188 _ 00000000 (d)
        dd 00000004H                                    ; 018C _ 4 
        dd __545                                        ; 0190 _ 00000000 (d)
        dd 00000004H                                    ; 0194 _ 4 
        dd __546                                        ; 0198 _ 00000000 (d)
        dd 00000004H                                    ; 019C _ 4 
        dd __547                                        ; 01A0 _ 00000000 (d)
        dd 00000004H                                    ; 01A4 _ 4 
        dd __548                                        ; 01A8 _ 00000000 (d)
        dd 00000004H                                    ; 01AC _ 4 
        dd __549                                        ; 01B0 _ 00000000 (d)
        dd 00000004H                                    ; 01B4 _ 4 
        dd __550                                        ; 01B8 _ 00000000 (d)
        dd 00000004H                                    ; 01BC _ 4 
        dd __551                                        ; 01C0 _ 00000000 (d)
        dd 00000004H                                    ; 01C4 _ 4 
        dd __552                                        ; 01C8 _ 00000000 (d)
        dd 00000004H                                    ; 01CC _ 4 
        dd __553                                        ; 01D0 _ 00000000 (d)
        dd 00000004H                                    ; 01D4 _ 4 
        dd __554                                        ; 01D8 _ 00000000 (d)
        dd 00000004H                                    ; 01DC _ 4 
        dd __555                                        ; 01E0 _ 00000000 (d)
        dd 00000004H                                    ; 01E4 _ 4 
        dd __556                                        ; 01E8 _ 00000000 (d)
        dd 00000004H                                    ; 01EC _ 4 
        dd __557                                        ; 01F0 _ 00000000 (d)
        dd 00000004H                                    ; 01F4 _ 4 
        dd __558                                        ; 01F8 _ 00000000 (d)
        dd 00000004H                                    ; 01FC _ 4 
        dd __559                                        ; 0200 _ 00000000 (d)
        dd 00000004H                                    ; 0204 _ 4 
        dd __560                                        ; 0208 _ 00000000 (d)
        dd 00000004H                                    ; 020C _ 4 
        dd __561                                        ; 0210 _ 00000000 (d)
        dd 00000004H                                    ; 0214 _ 4 
        dd __562                                        ; 0218 _ 00000000 (d)
        dd 00000004H                                    ; 021C _ 4 
        dd __563                                        ; 0220 _ 00000000 (d)
        dd 00000004H                                    ; 0224 _ 4 
        dd __564                                        ; 0228 _ 00000000 (d)
        dd 00000004H                                    ; 022C _ 4 
        dd __565                                        ; 0230 _ 00000000 (d)
        dd 00000004H                                    ; 0234 _ 4 
        dd __566                                        ; 0238 _ 00000000 (d)
        dd 00000004H                                    ; 023C _ 4 
        dd __567                                        ; 0240 _ 00000000 (d)
        dd 00000004H                                    ; 0244 _ 4 
        dd __568                                        ; 0248 _ 00000000 (d)
        dd 00000004H                                    ; 024C _ 4 
        dd __569                                        ; 0250 _ 00000000 (d)
        dd 00000004H                                    ; 0254 _ 4 
        dd __570                                        ; 0258 _ 00000000 (d)
        dd 00000004H                                    ; 025C _ 4 
        dd __571                                        ; 0260 _ 00000000 (d)
        dd 00000004H                                    ; 0264 _ 4 
        dd __572                                        ; 0268 _ 00000000 (d)
        dd 00000004H                                    ; 026C _ 4 
        dd __573                                        ; 0270 _ 00000000 (d)
        dd 00000004H                                    ; 0274 _ 4 
        dd __574                                        ; 0278 _ 00000000 (d)
        dd 00000004H                                    ; 027C _ 4 
        dd __575                                        ; 0280 _ 00000000 (d)
        dd 00000004H                                    ; 0284 _ 4 
        dd __576                                        ; 0288 _ 00000000 (d)
        dd 00000004H                                    ; 028C _ 4 
        dd __577                                        ; 0290 _ 00000000 (d)
        dd 00000004H                                    ; 0294 _ 4 
        dd __578                                        ; 0298 _ 00000000 (d)
        dd 00000004H                                    ; 029C _ 4 
        dd __579                                        ; 02A0 _ 00000000 (d)
        dd 00000004H                                    ; 02A4 _ 4 
        dd __580                                        ; 02A8 _ 00000000 (d)
        dd 00000004H                                    ; 02AC _ 4 
        dd __581                                        ; 02B0 _ 00000000 (d)
        dd 00000004H                                    ; 02B4 _ 4 
        dd __582                                        ; 02B8 _ 00000000 (d)
        dd 00000004H                                    ; 02BC _ 4 
        dd __583                                        ; 02C0 _ 00000000 (d)
        dd 00000004H                                    ; 02C4 _ 4 
        dd __584                                        ; 02C8 _ 00000000 (d)
        dd 00000004H                                    ; 02CC _ 4 
        dd __585                                        ; 02D0 _ 00000000 (d)
        dd 00000004H                                    ; 02D4 _ 4 
        dd __586                                        ; 02D8 _ 00000000 (d)
        dd 00000004H                                    ; 02DC _ 4 
        dd __587                                        ; 02E0 _ 00000000 (d)
        dd 00000004H                                    ; 02E4 _ 4 
        dd __588                                        ; 02E8 _ 00000000 (d)
        dd 00000004H                                    ; 02EC _ 4 
        dd __589                                        ; 02F0 _ 00000000 (d)
        dd 00000004H                                    ; 02F4 _ 4 
        dd __590                                        ; 02F8 _ 00000000 (d)
        dd 00000004H                                    ; 02FC _ 4 
        dd __591                                        ; 0300 _ 00000000 (d)
        dd 00000004H                                    ; 0304 _ 4 
        dd __592                                        ; 0308 _ 00000000 (d)
        dd 00000004H                                    ; 030C _ 4 
        dd __593                                        ; 0310 _ 00000000 (d)
        dd 00000004H                                    ; 0314 _ 4 
        dd __594                                        ; 0318 _ 00000000 (d)
        dd 00000004H                                    ; 031C _ 4 
        dd __595                                        ; 0320 _ 00000000 (d)
        dd 00000004H                                    ; 0324 _ 4 
        dd __596                                        ; 0328 _ 00000000 (d)
        dd 00000004H                                    ; 032C _ 4 
        dd __597                                        ; 0330 _ 00000000 (d)
        dd 00000004H                                    ; 0334 _ 4 
        dd __598                                        ; 0338 _ 00000000 (d)
        dd 00000004H                                    ; 033C _ 4 
        dd __599                                        ; 0340 _ 00000000 (d)
        dd 00000004H                                    ; 0344 _ 4 
        dd __600                                        ; 0348 _ 00000000 (d)
        dd 00000004H                                    ; 034C _ 4 
        dd __601                                        ; 0350 _ 00000000 (d)
        dd 00000004H                                    ; 0354 _ 4 
        dd __602                                        ; 0358 _ 00000000 (d)
        dd 00000004H                                    ; 035C _ 4 
        dd __603                                        ; 0360 _ 00000000 (d)
        dd 00000004H                                    ; 0364 _ 4 
        dd __604                                        ; 0368 _ 00000000 (d)
        dd 00000004H                                    ; 036C _ 4 
        dd __605                                        ; 0370 _ 00000000 (d)
        dd 00000004H                                    ; 0374 _ 4 
        dd __606                                        ; 0378 _ 00000000 (d)
        dd 00000004H                                    ; 037C _ 4 
        dd __607                                        ; 0380 _ 00000000 (d)
        dd 00000004H                                    ; 0384 _ 4 
        dd __608                                        ; 0388 _ 00000000 (d)
        dd 00000004H                                    ; 038C _ 4 
        dd __609                                        ; 0390 _ 00000000 (d)
        dd 00000004H                                    ; 0394 _ 4 
        dd __610                                        ; 0398 _ 00000000 (d)
        dd 00000004H                                    ; 039C _ 4 
        dd __611                                        ; 03A0 _ 00000000 (d)
        dd 00000004H                                    ; 03A4 _ 4 
        dd __612                                        ; 03A8 _ 00000000 (d)
        dd 00000004H                                    ; 03AC _ 4 
        dd __613                                        ; 03B0 _ 00000000 (d)
        dd 00000004H                                    ; 03B4 _ 4 
        dd __614                                        ; 03B8 _ 00000000 (d)
        dd 00000004H                                    ; 03BC _ 4 
        dd __615                                        ; 03C0 _ 00000000 (d)
        dd 00000004H                                    ; 03C4 _ 4 
        dd __616                                        ; 03C8 _ 00000000 (d)
        dd 00000004H                                    ; 03CC _ 4 
        dd __617                                        ; 03D0 _ 00000000 (d)
        dd 00000004H                                    ; 03D4 _ 4 
        dd __618                                        ; 03D8 _ 00000000 (d)
        dd 00000004H                                    ; 03DC _ 4 
        dd __619                                        ; 03E0 _ 00000000 (d)
        dd 00000004H                                    ; 03E4 _ 4 
        dd __620                                        ; 03E8 _ 00000000 (d)
        dd 00000004H                                    ; 03EC _ 4 
        dd __621                                        ; 03F0 _ 00000000 (d)
        dd 00000004H                                    ; 03F4 _ 4 
        dd __622                                        ; 03F8 _ 00000000 (d)
        dd 00000004H                                    ; 03FC _ 4 
        dd __623                                        ; 0400 _ 00000000 (d)
        dd 00000004H                                    ; 0404 _ 4 
        dd __624                                        ; 0408 _ 00000000 (d)
        dd 00000004H                                    ; 040C _ 4 
        dd __625                                        ; 0410 _ 00000000 (d)
        dd 00000004H                                    ; 0414 _ 4 
        dd __626                                        ; 0418 _ 00000000 (d)
        dd 00000004H                                    ; 041C _ 4 
        dd __627                                        ; 0420 _ 00000000 (d)
        dd 00000004H                                    ; 0424 _ 4 
        dd __628                                        ; 0428 _ 00000000 (d)
        dd 00000004H                                    ; 042C _ 4 
        dd __629                                        ; 0430 _ 00000000 (d)
        dd 00000004H                                    ; 0434 _ 4 
        dd __630                                        ; 0438 _ 00000000 (d)
        dd 00000004H                                    ; 043C _ 4 
        dd __631                                        ; 0440 _ 00000000 (d)
        dd 00000004H                                    ; 0444 _ 4 
        dd __632                                        ; 0448 _ 00000000 (d)
        dd 00000004H                                    ; 044C _ 4 
        dd __633                                        ; 0450 _ 00000000 (d)
        dd 00000004H                                    ; 0454 _ 4 
        dd __634                                        ; 0458 _ 00000000 (d)
        dd 00000004H                                    ; 045C _ 4 
        dd __635                                        ; 0460 _ 00000000 (d)
        dd 00000004H                                    ; 0464 _ 4 
        dd __636                                        ; 0468 _ 00000000 (d)
        dd 00000004H                                    ; 046C _ 4 
        dd __637                                        ; 0470 _ 00000000 (d)
        dd 00000004H                                    ; 0474 _ 4 
        dd __638                                        ; 0478 _ 00000000 (d)
        dd 00000004H                                    ; 047C _ 4 
        dd __639                                        ; 0480 _ 00000000 (d)
        dd 00000004H                                    ; 0484 _ 4 
        dd __640                                        ; 0488 _ 00000000 (d)
        dd 00000004H                                    ; 048C _ 4 
        dd __641                                        ; 0490 _ 00000000 (d)
        dd 00000004H                                    ; 0494 _ 4 
        dd __642                                        ; 0498 _ 00000000 (d)
        dd 00000004H                                    ; 049C _ 4 
        dd __643                                        ; 04A0 _ 00000000 (d)
        dd 00000004H                                    ; 04A4 _ 4 
        dd __644                                        ; 04A8 _ 00000000 (d)
        dd 00000004H                                    ; 04AC _ 4 
        dd __645                                        ; 04B0 _ 00000000 (d)
        dd 00000004H                                    ; 04B4 _ 4 
        dd __646                                        ; 04B8 _ 00000000 (d)
        dd 00000004H                                    ; 04BC _ 4 
        dd __647                                        ; 04C0 _ 00000000 (d)
        dd 00000004H                                    ; 04C4 _ 4 
        dd __648                                        ; 04C8 _ 00000000 (d)
        dd 00000004H                                    ; 04CC _ 4 
        dd __649                                        ; 04D0 _ 00000000 (d)
        dd 00000004H                                    ; 04D4 _ 4 
        dd __650                                        ; 04D8 _ 00000000 (d)
        dd 00000004H                                    ; 04DC _ 4 
        dd __651                                        ; 04E0 _ 00000000 (d)
        dd 00000004H                                    ; 04E4 _ 4 
        dd __652                                        ; 04E8 _ 00000000 (d)
        dd 00000004H                                    ; 04EC _ 4 
        dd __653                                        ; 04F0 _ 00000000 (d)
        dd 00000004H                                    ; 04F4 _ 4 
        dd __654                                        ; 04F8 _ 00000000 (d)
        dd 00000004H                                    ; 04FC _ 4 
        dd __655                                        ; 0500 _ 00000000 (d)
        dd 00000004H                                    ; 0504 _ 4 
        dd __656                                        ; 0508 _ 00000000 (d)
        dd 00000004H                                    ; 050C _ 4 
        dd __657                                        ; 0510 _ 00000000 (d)
        dd 00000004H                                    ; 0514 _ 4 
        dd __658                                        ; 0518 _ 00000000 (d)
        dd 00000004H                                    ; 051C _ 4 
        dd __659                                        ; 0520 _ 00000000 (d)
        dd 00000004H                                    ; 0524 _ 4 
        dd __660                                        ; 0528 _ 00000000 (d)
        dd 00000004H                                    ; 052C _ 4 
        dd __661                                        ; 0530 _ 00000000 (d)
        dd 00000004H                                    ; 0534 _ 4 
        dd __662                                        ; 0538 _ 00000000 (d)
        dd 00000004H                                    ; 053C _ 4 
        dd __663                                        ; 0540 _ 00000000 (d)
        dd 00000004H                                    ; 0544 _ 4 
        dd __664                                        ; 0548 _ 00000000 (d)
        dd 00000004H                                    ; 054C _ 4 
        dd __665                                        ; 0550 _ 00000000 (d)
        dd 00000004H                                    ; 0554 _ 4 
        dd __666                                        ; 0558 _ 00000000 (d)
        dd 00000004H                                    ; 055C _ 4 
        dd __667                                        ; 0560 _ 00000000 (d)
        dd 00000004H                                    ; 0564 _ 4 
        dd __668                                        ; 0568 _ 00000000 (d)
        dd 00000004H                                    ; 056C _ 4 
        dd __669                                        ; 0570 _ 00000000 (d)
        dd 00000004H                                    ; 0574 _ 4 
        dd __670                                        ; 0578 _ 00000000 (d)
        dd 00000004H                                    ; 057C _ 4 
        dd __671                                        ; 0580 _ 00000000 (d)
        dd 00000004H                                    ; 0584 _ 4 
        dd __672                                        ; 0588 _ 00000000 (d)
        dd 00000004H                                    ; 058C _ 4 
        dd __673                                        ; 0590 _ 00000000 (d)
        dd 00000004H                                    ; 0594 _ 4 
        dd __674                                        ; 0598 _ 00000000 (d)
        dd 00000004H                                    ; 059C _ 4 
        dd __675                                        ; 05A0 _ 00000000 (d)
        dd 00000004H                                    ; 05A4 _ 4 
        dd __676                                        ; 05A8 _ 00000000 (d)
        dd 00000004H                                    ; 05AC _ 4 
        dd __677                                        ; 05B0 _ 00000000 (d)
        dd 00000004H                                    ; 05B4 _ 4 
        dd __678                                        ; 05B8 _ 00000000 (d)
        dd 00000004H                                    ; 05BC _ 4 
        dd __679                                        ; 05C0 _ 00000000 (d)
        dd 00000004H                                    ; 05C4 _ 4 
        dd __680                                        ; 05C8 _ 00000000 (d)
        dd 00000004H                                    ; 05CC _ 4 
        dd __681                                        ; 05D0 _ 00000000 (d)
        dd 00000004H                                    ; 05D4 _ 4 
        dd __682                                        ; 05D8 _ 00000000 (d)
        dd 00000004H                                    ; 05DC _ 4 
        dd __683                                        ; 05E0 _ 00000000 (d)
        dd 00000004H                                    ; 05E4 _ 4 
        dd __684                                        ; 05E8 _ 00000000 (d)
        dd 00000004H                                    ; 05EC _ 4 
        dd __685                                        ; 05F0 _ 00000000 (d)
        dd 00000004H                                    ; 05F4 _ 4 
        dd __686                                        ; 05F8 _ 00000000 (d)
        dd 00000004H                                    ; 05FC _ 4 
        dd __687                                        ; 0600 _ 00000000 (d)
        dd 00000004H                                    ; 0604 _ 4 
        dd __688                                        ; 0608 _ 00000000 (d)
        dd 00000004H                                    ; 060C _ 4 
        dd __689                                        ; 0610 _ 00000000 (d)
        dd 00000004H                                    ; 0614 _ 4 
        dd __690                                        ; 0618 _ 00000000 (d)
        dd 00000004H                                    ; 061C _ 4 
        dd __691                                        ; 0620 _ 00000000 (d)
        dd 00000004H                                    ; 0624 _ 4 
        dd __692                                        ; 0628 _ 00000000 (d)
        dd 00000004H                                    ; 062C _ 4 
        dd __693                                        ; 0630 _ 00000000 (d)
        dd 00000004H                                    ; 0634 _ 4 
        dd __694                                        ; 0638 _ 00000000 (d)
        dd 00000004H                                    ; 063C _ 4 
        dd __695                                        ; 0640 _ 00000000 (d)
        dd 00000004H                                    ; 0644 _ 4 
        dd __696                                        ; 0648 _ 00000000 (d)
        dd 00000004H                                    ; 064C _ 4 
        dd __697                                        ; 0650 _ 00000000 (d)
        dd 00000004H                                    ; 0654 _ 4 
        dd __698                                        ; 0658 _ 00000000 (d)
        dd 00000004H                                    ; 065C _ 4 
        dd __699                                        ; 0660 _ 00000000 (d)
        dd 00000004H                                    ; 0664 _ 4 
        dd __700                                        ; 0668 _ 00000000 (d)
        dd 00000004H                                    ; 066C _ 4 
        dd __701                                        ; 0670 _ 00000000 (d)
        dd 00000004H                                    ; 0674 _ 4 
        dd __702                                        ; 0678 _ 00000000 (d)
        dd 00000004H                                    ; 067C _ 4 
        dd __703                                        ; 0680 _ 00000000 (d)
        dd 00000004H                                    ; 0684 _ 4 
        dd __704                                        ; 0688 _ 00000000 (d)
        dd 00000004H                                    ; 068C _ 4 
        dd __705                                        ; 0690 _ 00000000 (d)
        dd 00000004H                                    ; 0694 _ 4 
        dd __706                                        ; 0698 _ 00000000 (d)
        dd 00000004H                                    ; 069C _ 4 
        dd __707                                        ; 06A0 _ 00000000 (d)
        dd 00000004H                                    ; 06A4 _ 4 
        dd __708                                        ; 06A8 _ 00000000 (d)
        dd 00000004H                                    ; 06AC _ 4 
        dd __709                                        ; 06B0 _ 00000000 (d)
        dd 00000004H                                    ; 06B4 _ 4 
        dd __710                                        ; 06B8 _ 00000000 (d)
        dd 00000004H                                    ; 06BC _ 4 
        dd __711                                        ; 06C0 _ 00000000 (d)
        dd 00000004H                                    ; 06C4 _ 4 
        dd __712                                        ; 06C8 _ 00000000 (d)
        dd 00000004H                                    ; 06CC _ 4 
        dd __713                                        ; 06D0 _ 00000000 (d)
        dd 00000004H                                    ; 06D4 _ 4 
        dd __714                                        ; 06D8 _ 00000000 (d)
        dd 00000004H                                    ; 06DC _ 4 
        dd __715                                        ; 06E0 _ 00000000 (d)
        dd 00000004H                                    ; 06E4 _ 4 
        dd __716                                        ; 06E8 _ 00000000 (d)
        dd 00000004H                                    ; 06EC _ 4 
        dd __717                                        ; 06F0 _ 00000000 (d)
        dd 00000001H, 00000003H                         ; 06F4 _ 1 3 
        dd 00000001H, 00000000H                         ; 06FC _ 1 0 
        dd 00000001H, 00000001H                         ; 0704 _ 1 1 
        dd 00000001H, 00000000H                         ; 070C _ 1 0 
        dd 00000001H, 00000004H                         ; 0714 _ 1 4 
        dd 00000001H, 00000000H                         ; 071C _ 1 0 
        dd 00000001H, 00000005H                         ; 0724 _ 1 5 
        dd 00000001H, 00000000H                         ; 072C _ 1 0 
        dd 00000001H, 00000001H                         ; 0734 _ 1 1 
        dd 00000001H, 00000000H                         ; 073C _ 1 0 
        dd 00000001H, 00000004H                         ; 0744 _ 1 4 
        dd 00000001H, 00000000H                         ; 074C _ 1 0 
        dd 00000001H, 00000005H                         ; 0754 _ 1 5 
        dd 00000001H, 00000000H                         ; 075C _ 1 0 
        dd 00000001H, 00000001H                         ; 0764 _ 1 1 
        dd 00000001H, 00000000H                         ; 076C _ 1 0 
        dd 00000001H, 00000004H                         ; 0774 _ 1 4 
        dd 00000001H, 00000000H                         ; 077C _ 1 0 
        dd 00000001H, 00000005H                         ; 0784 _ 1 5 
        dd 00000004H                                    ; 078C _ 4 
        dd __718                                        ; 0790 _ 00000000 (d)
        dd 00000004H                                    ; 0794 _ 4 
        dd __719                                        ; 0798 _ 00000000 (d)
        dd 00000004H                                    ; 079C _ 4 
        dd __720                                        ; 07A0 _ 00000000 (d)
        dd 00000004H                                    ; 07A4 _ 4 
        dd __721                                        ; 07A8 _ 00000000 (d)
        dd 00000004H                                    ; 07AC _ 4 
        dd __722                                        ; 07B0 _ 00000000 (d)
        dd 00000004H                                    ; 07B4 _ 4 
        dd __723                                        ; 07B8 _ 00000000 (d)
        dd 00000004H                                    ; 07BC _ 4 
        dd __724                                        ; 07C0 _ 00000000 (d)
        dd 00000004H                                    ; 07C4 _ 4 
        dd __725                                        ; 07C8 _ 00000000 (d)
        dd 00000004H                                    ; 07CC _ 4 
        dd __726                                        ; 07D0 _ 00000000 (d)
        dd 00000004H                                    ; 07D4 _ 4 
        dd __727                                        ; 07D8 _ 00000000 (d)
        dd 00000004H                                    ; 07DC _ 4 
        dd __728                                        ; 07E0 _ 00000000 (d)
        dd 00000004H                                    ; 07E4 _ 4 
        dd __729                                        ; 07E8 _ 00000000 (d)
        dd 00000004H                                    ; 07EC _ 4 
        dd __730                                        ; 07F0 _ 00000000 (d)
        dd 00000004H                                    ; 07F4 _ 4 
        dd __731                                        ; 07F8 _ 00000000 (d)
        dd 00000004H                                    ; 07FC _ 4 
        dd __732                                        ; 0800 _ 00000000 (d)
        dd 00000004H                                    ; 0804 _ 4 
        dd __733                                        ; 0808 _ 00000000 (d)
        dd 00000004H                                    ; 080C _ 4 
        dd __734                                        ; 0810 _ 00000000 (d)
        dd 00000004H                                    ; 0814 _ 4 
        dd __735                                        ; 0818 _ 00000000 (d)
        dd 00000004H                                    ; 081C _ 4 
        dd __736                                        ; 0820 _ 00000000 (d)
        dd 00000004H                                    ; 0824 _ 4 
        dd __737                                        ; 0828 _ 00000000 (d)
        dd 00000004H                                    ; 082C _ 4 
        dd __738                                        ; 0830 _ 00000000 (d)
        dd 00000004H                                    ; 0834 _ 4 
        dd __739                                        ; 0838 _ 00000000 (d)
        dd 00000004H                                    ; 083C _ 4 
        dd __740                                        ; 0840 _ 00000000 (d)
        dd 00000004H                                    ; 0844 _ 4 
        dd __741                                        ; 0848 _ 00000000 (d)
        dd 00000004H                                    ; 084C _ 4 
        dd __742                                        ; 0850 _ 00000000 (d)
        dd 00000004H                                    ; 0854 _ 4 
        dd __743                                        ; 0858 _ 00000000 (d)
        dd 00000004H                                    ; 085C _ 4 
        dd __744                                        ; 0860 _ 00000000 (d)
        dd 00000004H                                    ; 0864 _ 4 
        dd __745                                        ; 0868 _ 00000000 (d)
        dd 00000004H                                    ; 086C _ 4 
        dd __746                                        ; 0870 _ 00000000 (d)
        dd 00000004H                                    ; 0874 _ 4 
        dd __747                                        ; 0878 _ 00000000 (d)
        dd 00000004H                                    ; 087C _ 4 
        dd __748                                        ; 0880 _ 00000000 (d)
        dd 00000004H                                    ; 0884 _ 4 
        dd __749                                        ; 0888 _ 00000000 (d)
        dd 00000004H                                    ; 088C _ 4 
        dd __750                                        ; 0890 _ 00000000 (d)
        dd 00000004H                                    ; 0894 _ 4 
        dd __751                                        ; 0898 _ 00000000 (d)
        dd 00000004H                                    ; 089C _ 4 
        dd __752                                        ; 08A0 _ 00000000 (d)
        dd 00000004H                                    ; 08A4 _ 4 
        dd __753                                        ; 08A8 _ 00000000 (d)
        dd 00000004H                                    ; 08AC _ 4 
        dd __754                                        ; 08B0 _ 00000000 (d)
        dd 00000004H                                    ; 08B4 _ 4 
        dd __755                                        ; 08B8 _ 00000000 (d)
        dd 00000004H                                    ; 08BC _ 4 
        dd __756                                        ; 08C0 _ 00000000 (d)
        dd 00000004H                                    ; 08C4 _ 4 
        dd __757                                        ; 08C8 _ 00000000 (d)
        dd 00000004H                                    ; 08CC _ 4 
        dd __758                                        ; 08D0 _ 00000000 (d)
        dd 00000004H                                    ; 08D4 _ 4 
        dd __759                                        ; 08D8 _ 00000000 (d)
        dd 00000004H                                    ; 08DC _ 4 
        dd __760                                        ; 08E0 _ 00000000 (d)
        dd 00000004H                                    ; 08E4 _ 4 
        dd __761                                        ; 08E8 _ 00000000 (d)
        dd 00000004H                                    ; 08EC _ 4 
        dd __762                                        ; 08F0 _ 00000000 (d)
        dd 00000004H                                    ; 08F4 _ 4 
        dd __763                                        ; 08F8 _ 00000000 (d)
        dd 00000004H                                    ; 08FC _ 4 
        dd __764                                        ; 0900 _ 00000000 (d)
        dd 00000004H                                    ; 0904 _ 4 
        dd __765                                        ; 0908 _ 00000000 (d)
        dd 00000004H                                    ; 090C _ 4 
        dd __766                                        ; 0910 _ 00000000 (d)
        dd 00000004H                                    ; 0914 _ 4 
        dd __767                                        ; 0918 _ 00000000 (d)
        dd 00000004H                                    ; 091C _ 4 
        dd __768                                        ; 0920 _ 00000000 (d)
        dd 00000004H                                    ; 0924 _ 4 
        dd __769                                        ; 0928 _ 00000000 (d)
        dd 00000004H                                    ; 092C _ 4 
        dd __770                                        ; 0930 _ 00000000 (d)
        dd 00000001H, 00000002H                         ; 0934 _ 1 2 
        dd 00000001H, 00000000H                         ; 093C _ 1 0 
        dd 00000001H, 00000000H                         ; 0944 _ 1 0 
        dd 00000001H, 00000002H                         ; 094C _ 1 2 
        dd 00000001H, 00000000H                         ; 0954 _ 1 0 
        dd 00000001H, 00000003H                         ; 095C _ 1 3 
        dd 00000001H, 00000001H                         ; 0964 _ 1 1 
        dd 00000001H, 00000000H                         ; 096C _ 1 0 
        dd 00000001H, 00000003H                         ; 0974 _ 1 3 
        dd 00000001H, 00000000H                         ; 097C _ 1 0 
        dd 00000001H, 00000002H                         ; 0984 _ 1 2 
        dd 00000001H, 00000001H                         ; 098C _ 1 1 
        dd 00000001H, 00000000H                         ; 0994 _ 1 0 
        dd 00000001H, 00000000H                         ; 099C _ 1 0 
        dd 00000001H, 00000003H                         ; 09A4 _ 1 3 
        dd 00000001H, 00000003H                         ; 09AC _ 1 3 
        dd 00000001H, 00000004H                         ; 09B4 _ 1 4 
        dd 00000001H, 00000000H                         ; 09BC _ 1 0 
        dd 00000001H, 00000007H                         ; 09C4 _ 1 7 
        dd 00000001H, 00000008H                         ; 09CC _ 1 8 
        dd 00000001H, 00000000H                         ; 09D4 _ 1 0 
        dd 00000001H, 00000008H                         ; 09DC _ 1 8 
        dd 00000001H, 00000000H                         ; 09E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 09EC _ 1 0 
        dd 00000001H, 0000000AH                         ; 09F4 _ 1 10 
        dd 00000001H, 00000000H                         ; 09FC _ 1 0 
        dd 00000001H, 00000009H                         ; 0A04 _ 1 9 
        dd 00000001H, 00000000H                         ; 0A0C _ 1 0 
        dd 00000001H, 00000000H                         ; 0A14 _ 1 0 
        dd 00000001H, 00000008H                         ; 0A1C _ 1 8 
        dd 00000001H, 00000008H                         ; 0A24 _ 1 8 
        dd 00000001H, 00000000H                         ; 0A2C _ 1 0 
        dd 00000001H, 00000000H                         ; 0A34 _ 1 0 
        dd 00000001H, 0000000CH                         ; 0A3C _ 1 12 
        dd 00000001H, 00000190H                         ; 0A44 _ 1 400 
        dd 00000001H, 00000320H                         ; 0A4C _ 1 800 
        dd 00000001H, 00000320H                         ; 0A54 _ 1 800 
        dd 00000001H, 000000C8H                         ; 0A5C _ 1 200 
        dd 00000001H, 000007D0H                         ; 0A64 _ 1 2000 
        dd 00000001H, 00000043H                         ; 0A6C _ 1 67 
        dd 00000001H, 0000002DH                         ; 0A74 _ 1 45 
        dd 00000001H, 0000004AH                         ; 0A7C _ 1 74 
        dd 00000001H, 00000037H                         ; 0A84 _ 1 55 
        dd 00000001H, 00000050H                         ; 0A8C _ 1 80 
        dd 00000001H, 00000045H                         ; 0A94 _ 1 69 
        dd 00000001H, 00000066H                         ; 0A9C _ 1 102 
        dd 00000001H, 00000054H                         ; 0AA4 _ 1 84 
        dd 00000001H, 00000076H                         ; 0AAC _ 1 118 
        dd 00000001H, 00000060H                         ; 0AB4 _ 1 96 
        dd 00000001H, 0000008BH                         ; 0ABC _ 1 139 
        dd 00000001H, 0000006EH                         ; 0AC4 _ 1 110 
        dd 00000001H, 000000A0H                         ; 0ACC _ 1 160 
        dd 00000001H, 0000008DH                         ; 0AD4 _ 1 141 
        dd 00000001H, 0000009FH                         ; 0ADC _ 1 159 
        dd 00000001H, 0000008BH                         ; 0AE4 _ 1 139 
        dd 00000001H, 000000A5H                         ; 0AEC _ 1 165 
        dd 00000001H, 0000008EH                         ; 0AF4 _ 1 142 
        dd 00000001H, 000000AAH                         ; 0AFC _ 1 170 
        dd 00000001H, 0000008CH                         ; 0B04 _ 1 140 
        dd 00000001H, 000000A2H                         ; 0B0C _ 1 162 
        dd 00000001H, 0000008FH                         ; 0B14 _ 1 143 
        dd 00000001H, 0000009FH                         ; 0B1C _ 1 159 
        dd 00000001H, 0000008FH                         ; 0B24 _ 1 143 
        dd 00000001H, 000D2492H                         ; 0B2C _ 1 861330 
        dd 00000004H                                    ; 0B34 _ 4 
        dd __771                                        ; 0B38 _ 00000000 (d)
        dd 00000001H, 000865B0H                         ; 0B3C _ 1 550320 
        dd 00000004H                                    ; 0B44 _ 4 
        dd __772                                        ; 0B48 _ 00000000 (d)
        dd 00000001H, 0003ABECH                         ; 0B4C _ 1 240620 
        dd 00000004H                                    ; 0B54 _ 4 
        dd __773                                        ; 0B58 _ 00000000 (d)
        dd 00000001H, 0001E9D8H                         ; 0B5C _ 1 125400 
        dd 00000004H                                    ; 0B64 _ 4 
        dd __774                                        ; 0B68 _ 00000000 (d)
        dd 00000001H, 0001684BH                         ; 0B6C _ 1 92235 
        dd 00000004H                                    ; 0B74 _ 4 
        dd __775                                        ; 0B78 _ 00000000 (d)
        dd 00000001H, 000106E9H                         ; 0B7C _ 1 67305 
        dd 00000004H                                    ; 0B84 _ 4 
        dd __776                                        ; 0B88 _ 00000000 (d)
        dd 00000001H, 0000A064H                         ; 0B8C _ 1 41060 
        dd 00000004H                                    ; 0B94 _ 4 
        dd __777                                        ; 0B98 _ 00000000 (d)
        dd 00000001H, 00006662H                         ; 0B9C _ 1 26210 
        dd 00000004H                                    ; 0BA4 _ 4 
        dd __778                                        ; 0BA8 _ 00000000 (d)
        dd 00000001H, 00003840H                         ; 0BAC _ 1 14400 
        dd 00000004H                                    ; 0BB4 _ 4 
        dd __779                                        ; 0BB8 _ 00000000 (d)
        dd 00000001H, 0000139CH                         ; 0BBC _ 1 5020 
        dd 00000004H                                    ; 0BC4 _ 4 
        dd __780                                        ; 0BC8 _ 00000000 (d)
        dd 00000004H                                    ; 0BCC _ 4 
        dd __781                                        ; 0BD0 _ 00000000 (d)
        dd 00000001H, 000000C8H                         ; 0BD4 _ 1 200 
        dd 00000004H                                    ; 0BDC _ 4 
        dd __782                                        ; 0BE0 _ 00000000 (d)
        dd 00000001H, 000000FAH                         ; 0BE4 _ 1 250 
        dd 00000004H                                    ; 0BEC _ 4 
        dd __783                                        ; 0BF0 _ 00000000 (d)
        dd 00000001H, 000003E8H                         ; 0BF4 _ 1 1000 
        dd 00000004H                                    ; 0BFC _ 4 
        dd __784                                        ; 0C00 _ 00000000 (d)
        dd 00000001H, 000003E8H                         ; 0C04 _ 1 1000 
        dd 00000004H                                    ; 0C0C _ 4 
        dd __785                                        ; 0C10 _ 00000000 (d)
        dd 00000001H, 000001F4H                         ; 0C14 _ 1 500 
        dd 00000004H                                    ; 0C1C _ 4 
        dd __786                                        ; 0C20 _ 00000000 (d)
        dd 00000001H, 00000064H                         ; 0C24 _ 1 100 
        dd 00000004H                                    ; 0C2C _ 4 
        dd __787                                        ; 0C30 _ 00000000 (d)
        dd 00000001H, 000003E8H                         ; 0C34 _ 1 1000 
        dd 00000004H                                    ; 0C3C _ 4 
        dd __788                                        ; 0C40 _ 00000000 (d)
        dd 00000001H, 000001F4H                         ; 0C44 _ 1 500 
        dd 00000004H                                    ; 0C4C _ 4 
        dd __789                                        ; 0C50 _ 00000000 (d)
        dd 00000001H, 000001F4H                         ; 0C54 _ 1 500 
        dd 00000004H                                    ; 0C5C _ 4 
        dd __790                                        ; 0C60 _ 00000000 (d)
        dd 00000001H, 000003E8H                         ; 0C64 _ 1 1000 
        dd 00000004H                                    ; 0C6C _ 4 
        dd __791                                        ; 0C70 _ 00000000 (d)
        dd 00000001H, 000000FAH                         ; 0C74 _ 1 250 
        dd 00000001H, 00000001H                         ; 0C7C _ 1 1 
        dd 00000001H, 00000000H                         ; 0C84 _ 1 0 
        dd 00000001H, 00000001H                         ; 0C8C _ 1 1 
        dd 00000001H, 0000003CH                         ; 0C94 _ 1 60 
        dd 00000001H, 00000064H                         ; 0C9C _ 1 100 
        dd 00000001H, 00000000H                         ; 0CA4 _ 1 0 
        dd 00000001H, 00000008H                         ; 0CAC _ 1 8 
        dd 00000001H, 00000032H                         ; 0CB4 _ 1 50 
        dd 00000001H, 00000008H                         ; 0CBC _ 1 8 
        dd 00000001H, 00000096H                         ; 0CC4 _ 1 150 
        dd 00000001H, 00000000H                         ; 0CCC _ 1 0 
        dd 00000001H, 00000000H                         ; 0CD4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0CDC _ 1 0 
        dd 00000001H, 00000000H                         ; 0CE4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0CEC _ 1 0 
        dd 00000001H, 00000000H                         ; 0CF4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0CFC _ 1 0 
        dd 00000001H, 00000000H                         ; 0D04 _ 1 0 
        dd 00000001H, 00000000H                         ; 0D0C _ 1 0 
        dd 00000001H, 00000000H                         ; 0D14 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 0D1C _ 1 -1 
        dd 00000001H, 00000001H                         ; 0D24 _ 1 1 
        dd 00000001H, 00000000H                         ; 0D2C _ 1 0 
        dd 00000001H, 00000001H                         ; 0D34 _ 1 1 
        dd 00000001H, 0000003CH                         ; 0D3C _ 1 60 
        dd 00000001H, 00000064H                         ; 0D44 _ 1 100 
        dd 00000001H, 00000000H                         ; 0D4C _ 1 0 
        dd 00000001H, 0000000AH                         ; 0D54 _ 1 10 
        dd 00000001H, 00000032H                         ; 0D5C _ 1 50 
        dd 00000001H, 0000000AH                         ; 0D64 _ 1 10 
        dd 00000001H, 00000096H                         ; 0D6C _ 1 150 
        dd 00000001H, 00000000H                         ; 0D74 _ 1 0 
        dd 00000001H, 00000000H                         ; 0D7C _ 1 0 
        dd 00000001H, 00000000H                         ; 0D84 _ 1 0 
        dd 00000001H, 00000000H                         ; 0D8C _ 1 0 
        dd 00000001H, 00000000H                         ; 0D94 _ 1 0 
        dd 00000001H, 00000000H                         ; 0D9C _ 1 0 
        dd 00000001H, 00000000H                         ; 0DA4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0DAC _ 1 0 
        dd 00000001H, 00000000H                         ; 0DB4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0DBC _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 0DC4 _ 1 -1 
        dd 00000001H, 0000000AH                         ; 0DCC _ 1 10 
        dd 00000001H, 00000000H                         ; 0DD4 _ 1 0 
        dd 00000001H, 00000001H                         ; 0DDC _ 1 1 
        dd 00000001H, 0000005AH                         ; 0DE4 _ 1 90 
        dd 00000001H, 00000008H                         ; 0DEC _ 1 8 
        dd 00000001H, 00000000H                         ; 0DF4 _ 1 0 
        dd 00000001H, 00000008H                         ; 0DFC _ 1 8 
        dd 00000001H, 00000096H                         ; 0E04 _ 1 150 
        dd 00000001H, 00000000H                         ; 0E0C _ 1 0 
        dd 00000001H, 00000000H                         ; 0E14 _ 1 0 
        dd 00000001H, 00000000H                         ; 0E1C _ 1 0 
        dd 00000001H, 00000000H                         ; 0E24 _ 1 0 
        dd 00000001H, 00000000H                         ; 0E2C _ 1 0 
        dd 00000001H, 00000000H                         ; 0E34 _ 1 0 
        dd 00000001H, 00000000H                         ; 0E3C _ 1 0 
        dd 00000001H, 00000000H                         ; 0E44 _ 1 0 
        dd 00000001H, 00000000H                         ; 0E4C _ 1 0 
        dd 00000001H, 00000000H                         ; 0E54 _ 1 0 
        dd 00000001H, 00000000H                         ; 0E5C _ 1 0 
        dd 00000001H, 00000000H                         ; 0E64 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 0E6C _ 1 -1 
        dd 00000001H, 0000000FH                         ; 0E74 _ 1 15 
        dd 00000001H, 00000000H                         ; 0E7C _ 1 0 
        dd 00000001H, 00000005H                         ; 0E84 _ 1 5 
        dd 00000001H, 00000082H                         ; 0E8C _ 1 130 
        dd 00000001H, 00000009H                         ; 0E94 _ 1 9 
        dd 00000001H, 00000000H                         ; 0E9C _ 1 0 
        dd 00000001H, 00000010H                         ; 0EA4 _ 1 16 
        dd 00000001H, 0000003CH                         ; 0EAC _ 1 60 
        dd 00000001H, 00000007H                         ; 0EB4 _ 1 7 
        dd 00000001H, 00000000H                         ; 0EBC _ 1 0 
        dd 00000001H, 00000007H                         ; 0EC4 _ 1 7 
        dd 00000001H, 00000096H                         ; 0ECC _ 1 150 
        dd 00000001H, 00000000H                         ; 0ED4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0EDC _ 1 0 
        dd 00000001H, 00000000H                         ; 0EE4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0EEC _ 1 0 
        dd 00000001H, 00000000H                         ; 0EF4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0EFC _ 1 0 
        dd 00000001H, 00000000H                         ; 0F04 _ 1 0 
        dd 00000001H, 00000000H                         ; 0F0C _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 0F14 _ 1 -1 
        dd 00000001H, 00000003H                         ; 0F1C _ 1 3 
        dd 00000001H, 00000000H                         ; 0F24 _ 1 0 
        dd 00000001H, 00000003H                         ; 0F2C _ 1 3 
        dd 00000001H, 00000032H                         ; 0F34 _ 1 50 
        dd 00000001H, 00000064H                         ; 0F3C _ 1 100 
        dd 00000001H, 00000000H                         ; 0F44 _ 1 0 
        dd 00000001H, 0000000FH                         ; 0F4C _ 1 15 
        dd 00000001H, 00000032H                         ; 0F54 _ 1 50 
        dd 00000001H, 0000000FH                         ; 0F5C _ 1 15 
        dd 00000001H, 00000028H                         ; 0F64 _ 1 40 
        dd 00000001H, 0000000FH                         ; 0F6C _ 1 15 
        dd 00000001H, 00000096H                         ; 0F74 _ 1 150 
        dd 00000001H, 00000000H                         ; 0F7C _ 1 0 
        dd 00000001H, 00000000H                         ; 0F84 _ 1 0 
        dd 00000001H, 00000000H                         ; 0F8C _ 1 0 
        dd 00000001H, 00000000H                         ; 0F94 _ 1 0 
        dd 00000001H, 00000000H                         ; 0F9C _ 1 0 
        dd 00000001H, 00000000H                         ; 0FA4 _ 1 0 
        dd 00000001H, 00000000H                         ; 0FAC _ 1 0 
        dd 00000001H, 00000000H                         ; 0FB4 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 0FBC _ 1 -1 
        dd 00000001H, 0000000FH                         ; 0FC4 _ 1 15 
        dd 00000001H, 00000000H                         ; 0FCC _ 1 0 
        dd 00000001H, 0000000FH                         ; 0FD4 _ 1 15 
        dd 00000001H, 00000032H                         ; 0FDC _ 1 50 
        dd 00000001H, 00000064H                         ; 0FE4 _ 1 100 
        dd 00000001H, 00000000H                         ; 0FEC _ 1 0 
        dd 00000001H, 00000003H                         ; 0FF4 _ 1 3 
        dd 00000001H, 00000032H                         ; 0FFC _ 1 50 
        dd 00000001H, 00000003H                         ; 1004 _ 1 3 
        dd 00000001H, 00000028H                         ; 100C _ 1 40 
        dd 00000001H, 00000003H                         ; 1014 _ 1 3 
        dd 00000001H, 00000096H                         ; 101C _ 1 150 
        dd 00000001H, 00000000H                         ; 1024 _ 1 0 
        dd 00000001H, 00000000H                         ; 102C _ 1 0 
        dd 00000001H, 00000000H                         ; 1034 _ 1 0 
        dd 00000001H, 00000000H                         ; 103C _ 1 0 
        dd 00000001H, 00000000H                         ; 1044 _ 1 0 
        dd 00000001H, 00000000H                         ; 104C _ 1 0 
        dd 00000001H, 00000000H                         ; 1054 _ 1 0 
        dd 00000001H, 00000000H                         ; 105C _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 1064 _ 1 -1 
        dd 00000001H, 00000003H                         ; 106C _ 1 3 
        dd 00000001H, 00000000H                         ; 1074 _ 1 0 
        dd 00000001H, 0000000FH                         ; 107C _ 1 15 
        dd 00000001H, 00000006H                         ; 1084 _ 1 6 
        dd 00000001H, 00000003H                         ; 108C _ 1 3 
        dd 00000001H, 00000006H                         ; 1094 _ 1 6 
        dd 00000001H, 0000000FH                         ; 109C _ 1 15 
        dd 00000001H, 00000006H                         ; 10A4 _ 1 6 
        dd 00000001H, 00000003H                         ; 10AC _ 1 3 
        dd 00000001H, 00000006H                         ; 10B4 _ 1 6 
        dd 00000001H, 0000000FH                         ; 10BC _ 1 15 
        dd 00000001H, 00000006H                         ; 10C4 _ 1 6 
        dd 00000001H, 00000003H                         ; 10CC _ 1 3 
        dd 00000001H, 00000006H                         ; 10D4 _ 1 6 
        dd 00000001H, 0000000FH                         ; 10DC _ 1 15 
        dd 00000001H, 00000006H                         ; 10E4 _ 1 6 
        dd 00000001H, 00000003H                         ; 10EC _ 1 3 
        dd 00000001H, 00000006H                         ; 10F4 _ 1 6 
        dd 00000001H, 0000000FH                         ; 10FC _ 1 15 
        dd 00000001H, 00000006H                         ; 1104 _ 1 6 
        dd 00000001H, 0FFFFFFFFH                        ; 110C _ 1 -1 
        dd 00000001H, 00000008H                         ; 1114 _ 1 8 
        dd 00000001H, 00000000H                         ; 111C _ 1 0 
        dd 00000001H, 00000001H                         ; 1124 _ 1 1 
        dd 00000001H, 0000005AH                         ; 112C _ 1 90 
        dd 00000001H, 0000000AH                         ; 1134 _ 1 10 
        dd 00000001H, 00000000H                         ; 113C _ 1 0 
        dd 00000001H, 0000000AH                         ; 1144 _ 1 10 
        dd 00000001H, 00000096H                         ; 114C _ 1 150 
        dd 00000001H, 00000000H                         ; 1154 _ 1 0 
        dd 00000001H, 00000000H                         ; 115C _ 1 0 
        dd 00000001H, 00000000H                         ; 1164 _ 1 0 
        dd 00000001H, 00000000H                         ; 116C _ 1 0 
        dd 00000001H, 00000000H                         ; 1174 _ 1 0 
        dd 00000001H, 00000000H                         ; 117C _ 1 0 
        dd 00000001H, 00000000H                         ; 1184 _ 1 0 
        dd 00000001H, 00000000H                         ; 118C _ 1 0 
        dd 00000001H, 00000000H                         ; 1194 _ 1 0 
        dd 00000001H, 00000000H                         ; 119C _ 1 0 
        dd 00000001H, 00000000H                         ; 11A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 11AC _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 11B4 _ 1 -1 
        dd 00000001H, 0000000FH                         ; 11BC _ 1 15 
        dd 00000001H, 00000000H                         ; 11C4 _ 1 0 
        dd 00000001H, 00000003H                         ; 11CC _ 1 3 
        dd 00000001H, 00000050H                         ; 11D4 _ 1 80 
        dd 00000001H, 00000009H                         ; 11DC _ 1 9 
        dd 00000001H, 00000001H                         ; 11E4 _ 1 1 
        dd 00000001H, 0000000FH                         ; 11EC _ 1 15 
        dd 00000001H, 00000001H                         ; 11F4 _ 1 1 
        dd 00000001H, 00000005H                         ; 11FC _ 1 5 
        dd 00000001H, 00000001H                         ; 1204 _ 1 1 
        dd 00000001H, 00000009H                         ; 120C _ 1 9 
        dd 00000001H, 00000001H                         ; 1214 _ 1 1 
        dd 00000001H, 00000009H                         ; 121C _ 1 9 
        dd 00000001H, 00000064H                         ; 1224 _ 1 100 
        dd 00000001H, 00000000H                         ; 122C _ 1 0 
        dd 00000001H, 00000000H                         ; 1234 _ 1 0 
        dd 00000001H, 00000000H                         ; 123C _ 1 0 
        dd 00000001H, 00000000H                         ; 1244 _ 1 0 
        dd 00000001H, 00000000H                         ; 124C _ 1 0 
        dd 00000001H, 00000000H                         ; 1254 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 125C _ 1 -1 
        dd 00000001H, 0000000DH                         ; 1264 _ 1 13 
        dd 00000001H, 00000000H                         ; 126C _ 1 0 
        dd 00000001H, 0000000DH                         ; 1274 _ 1 13 
        dd 00000001H, 0000001EH                         ; 127C _ 1 30 
        dd 00000001H, 00000001H                         ; 1284 _ 1 1 
        dd 00000001H, 0000001EH                         ; 128C _ 1 30 
        dd 00000001H, 00000001H                         ; 1294 _ 1 1 
        dd 00000001H, 0000008CH                         ; 129C _ 1 140 
        dd 00000001H, 00000000H                         ; 12A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 12AC _ 1 0 
        dd 00000001H, 00000000H                         ; 12B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 12BC _ 1 0 
        dd 00000001H, 00000000H                         ; 12C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 12CC _ 1 0 
        dd 00000001H, 00000000H                         ; 12D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 12DC _ 1 0 
        dd 00000001H, 00000000H                         ; 12E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 12EC _ 1 0 
        dd 00000001H, 00000000H                         ; 12F4 _ 1 0 
        dd 00000001H, 00000000H                         ; 12FC _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 1304 _ 1 -1 
        dd 00000001H, 00000005H                         ; 130C _ 1 5 
        dd 00000001H, 00000000H                         ; 1314 _ 1 0 
        dd 00000001H, 00000005H                         ; 131C _ 1 5 
        dd 00000001H, 0000001EH                         ; 1324 _ 1 30 
        dd 00000001H, 00000001H                         ; 132C _ 1 1 
        dd 00000001H, 0000001EH                         ; 1334 _ 1 30 
        dd 00000001H, 00000001H                         ; 133C _ 1 1 
        dd 00000001H, 0000008CH                         ; 1344 _ 1 140 
        dd 00000001H, 00000000H                         ; 134C _ 1 0 
        dd 00000001H, 00000000H                         ; 1354 _ 1 0 
        dd 00000001H, 00000000H                         ; 135C _ 1 0 
        dd 00000001H, 00000000H                         ; 1364 _ 1 0 
        dd 00000001H, 00000000H                         ; 136C _ 1 0 
        dd 00000001H, 00000000H                         ; 1374 _ 1 0 
        dd 00000001H, 00000000H                         ; 137C _ 1 0 
        dd 00000001H, 00000000H                         ; 1384 _ 1 0 
        dd 00000001H, 00000000H                         ; 138C _ 1 0 
        dd 00000001H, 00000000H                         ; 1394 _ 1 0 
        dd 00000001H, 00000000H                         ; 139C _ 1 0 
        dd 00000001H, 00000000H                         ; 13A4 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 13AC _ 1 -1 
        dd 00000001H, 00000000H                         ; 13B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 13BC _ 1 0 
        dd 00000001H, 00000000H                         ; 13C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 13CC _ 1 0 
        dd 00000001H, 00000000H                         ; 13D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 13DC _ 1 0 
        dd 00000001H, 00000000H                         ; 13E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 13EC _ 1 0 
        dd 00000001H, 00000000H                         ; 13F4 _ 1 0 
        dd 00000001H, 00000000H                         ; 13FC _ 1 0 
        dd 00000001H, 00000000H                         ; 1404 _ 1 0 
        dd 00000001H, 00000000H                         ; 140C _ 1 0 
        dd 00000001H, 00000000H                         ; 1414 _ 1 0 
        dd 00000001H, 00000000H                         ; 141C _ 1 0 
        dd 00000001H, 00000000H                         ; 1424 _ 1 0 
        dd 00000001H, 00000000H                         ; 142C _ 1 0 
        dd 00000001H, 00000000H                         ; 1434 _ 1 0 
        dd 00000001H, 00000000H                         ; 143C _ 1 0 
        dd 00000001H, 00000000H                         ; 1444 _ 1 0 
        dd 00000001H, 00000000H                         ; 144C _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 1454 _ 1 -1 
        dd 00000001H, 00000000H                         ; 145C _ 1 0 
        dd 00000001H, 00000000H                         ; 1464 _ 1 0 
        dd 00000001H, 00000000H                         ; 146C _ 1 0 
        dd 00000001H, 00000000H                         ; 1474 _ 1 0 
        dd 00000001H, 00000000H                         ; 147C _ 1 0 
        dd 00000001H, 00000000H                         ; 1484 _ 1 0 
        dd 00000001H, 00000000H                         ; 148C _ 1 0 
        dd 00000001H, 00000000H                         ; 1494 _ 1 0 
        dd 00000001H, 00000000H                         ; 149C _ 1 0 
        dd 00000001H, 00000000H                         ; 14A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 14AC _ 1 0 
        dd 00000001H, 00000000H                         ; 14B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 14BC _ 1 0 
        dd 00000001H, 00000000H                         ; 14C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 14CC _ 1 0 
        dd 00000001H, 00000000H                         ; 14D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 14DC _ 1 0 
        dd 00000001H, 00000000H                         ; 14E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 14EC _ 1 0 
        dd 00000001H, 00000000H                         ; 14F4 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 14FC _ 1 -1 
        dd 00000001H, 00000000H                         ; 1504 _ 1 0 
        dd 00000001H, 00000000H                         ; 150C _ 1 0 
        dd 00000001H, 00000000H                         ; 1514 _ 1 0 
        dd 00000001H, 00000000H                         ; 151C _ 1 0 
        dd 00000001H, 00000000H                         ; 1524 _ 1 0 
        dd 00000001H, 00000000H                         ; 152C _ 1 0 
        dd 00000001H, 00000000H                         ; 1534 _ 1 0 
        dd 00000001H, 00000000H                         ; 153C _ 1 0 
        dd 00000001H, 00000000H                         ; 1544 _ 1 0 
        dd 00000001H, 00000000H                         ; 154C _ 1 0 
        dd 00000001H, 00000000H                         ; 1554 _ 1 0 
        dd 00000001H, 00000000H                         ; 155C _ 1 0 
        dd 00000001H, 00000000H                         ; 1564 _ 1 0 
        dd 00000001H, 00000000H                         ; 156C _ 1 0 
        dd 00000001H, 00000000H                         ; 1574 _ 1 0 
        dd 00000001H, 00000000H                         ; 157C _ 1 0 
        dd 00000001H, 00000000H                         ; 1584 _ 1 0 
        dd 00000001H, 00000000H                         ; 158C _ 1 0 
        dd 00000001H, 00000000H                         ; 1594 _ 1 0 
        dd 00000001H, 00000000H                         ; 159C _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 15A4 _ 1 -1 
        dd 00000001H, 00000000H                         ; 15AC _ 1 0 
        dd 00000001H, 00000000H                         ; 15B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 15BC _ 1 0 
        dd 00000001H, 00000000H                         ; 15C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 15CC _ 1 0 
        dd 00000001H, 00000000H                         ; 15D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 15DC _ 1 0 
        dd 00000001H, 00000000H                         ; 15E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 15EC _ 1 0 
        dd 00000001H, 00000000H                         ; 15F4 _ 1 0 
        dd 00000001H, 00000000H                         ; 15FC _ 1 0 
        dd 00000001H, 00000000H                         ; 1604 _ 1 0 
        dd 00000001H, 00000000H                         ; 160C _ 1 0 
        dd 00000001H, 00000000H                         ; 1614 _ 1 0 
        dd 00000001H, 00000000H                         ; 161C _ 1 0 
        dd 00000001H, 00000000H                         ; 1624 _ 1 0 
        dd 00000001H, 00000000H                         ; 162C _ 1 0 
        dd 00000001H, 00000000H                         ; 1634 _ 1 0 
        dd 00000001H, 00000000H                         ; 163C _ 1 0 
        dd 00000001H, 00000000H                         ; 1644 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 164C _ 1 -1 
        dd 00000001H, 00000000H                         ; 1654 _ 1 0 
        dd 00000001H, 00000000H                         ; 165C _ 1 0 
        dd 00000001H, 00000000H                         ; 1664 _ 1 0 
        dd 00000001H, 00000000H                         ; 166C _ 1 0 
        dd 00000001H, 00000000H                         ; 1674 _ 1 0 
        dd 00000001H, 00000000H                         ; 167C _ 1 0 
        dd 00000001H, 00000000H                         ; 1684 _ 1 0 
        dd 00000001H, 00000000H                         ; 168C _ 1 0 
        dd 00000001H, 00000000H                         ; 1694 _ 1 0 
        dd 00000001H, 00000000H                         ; 169C _ 1 0 
        dd 00000001H, 00000000H                         ; 16A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 16AC _ 1 0 
        dd 00000001H, 00000000H                         ; 16B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 16BC _ 1 0 
        dd 00000001H, 00000000H                         ; 16C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 16CC _ 1 0 
        dd 00000001H, 00000000H                         ; 16D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 16DC _ 1 0 
        dd 00000001H, 00000000H                         ; 16E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 16EC _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 16F4 _ 1 -1 
        dd 00000001H, 00000000H                         ; 16FC _ 1 0 
        dd 00000001H, 00000000H                         ; 1704 _ 1 0 
        dd 00000001H, 00000000H                         ; 170C _ 1 0 
        dd 00000001H, 00000000H                         ; 1714 _ 1 0 
        dd 00000001H, 00000000H                         ; 171C _ 1 0 
        dd 00000001H, 00000000H                         ; 1724 _ 1 0 
        dd 00000001H, 00000000H                         ; 172C _ 1 0 
        dd 00000001H, 00000000H                         ; 1734 _ 1 0 
        dd 00000001H, 00000000H                         ; 173C _ 1 0 
        dd 00000001H, 00000000H                         ; 1744 _ 1 0 
        dd 00000001H, 00000000H                         ; 174C _ 1 0 
        dd 00000001H, 00000000H                         ; 1754 _ 1 0 
        dd 00000001H, 00000000H                         ; 175C _ 1 0 
        dd 00000001H, 00000000H                         ; 1764 _ 1 0 
        dd 00000001H, 00000000H                         ; 176C _ 1 0 
        dd 00000001H, 00000000H                         ; 1774 _ 1 0 
        dd 00000001H, 00000000H                         ; 177C _ 1 0 
        dd 00000001H, 00000000H                         ; 1784 _ 1 0 
        dd 00000001H, 00000000H                         ; 178C _ 1 0 
        dd 00000001H, 00000000H                         ; 1794 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 179C _ 1 -1 
        dd 00000001H, 00000000H                         ; 17A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 17AC _ 1 0 
        dd 00000001H, 00000000H                         ; 17B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 17BC _ 1 0 
        dd 00000001H, 00000000H                         ; 17C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 17CC _ 1 0 
        dd 00000001H, 00000000H                         ; 17D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 17DC _ 1 0 
        dd 00000001H, 00000000H                         ; 17E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 17EC _ 1 0 
        dd 00000001H, 00000000H                         ; 17F4 _ 1 0 
        dd 00000001H, 00000000H                         ; 17FC _ 1 0 
        dd 00000001H, 00000000H                         ; 1804 _ 1 0 
        dd 00000001H, 00000000H                         ; 180C _ 1 0 
        dd 00000001H, 00000000H                         ; 1814 _ 1 0 
        dd 00000001H, 00000000H                         ; 181C _ 1 0 
        dd 00000001H, 00000000H                         ; 1824 _ 1 0 
        dd 00000001H, 00000000H                         ; 182C _ 1 0 
        dd 00000001H, 00000000H                         ; 1834 _ 1 0 
        dd 00000001H, 00000000H                         ; 183C _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 1844 _ 1 -1 
        dd 00000001H, 00000000H                         ; 184C _ 1 0 
        dd 00000001H, 00000000H                         ; 1854 _ 1 0 
        dd 00000001H, 00000000H                         ; 185C _ 1 0 
        dd 00000001H, 00000000H                         ; 1864 _ 1 0 
        dd 00000001H, 00000000H                         ; 186C _ 1 0 
        dd 00000001H, 00000000H                         ; 1874 _ 1 0 
        dd 00000001H, 00000000H                         ; 187C _ 1 0 
        dd 00000001H, 00000000H                         ; 1884 _ 1 0 
        dd 00000001H, 00000000H                         ; 188C _ 1 0 
        dd 00000001H, 00000000H                         ; 1894 _ 1 0 
        dd 00000001H, 00000000H                         ; 189C _ 1 0 
        dd 00000001H, 00000000H                         ; 18A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 18AC _ 1 0 
        dd 00000001H, 00000000H                         ; 18B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 18BC _ 1 0 
        dd 00000001H, 00000000H                         ; 18C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 18CC _ 1 0 
        dd 00000001H, 00000000H                         ; 18D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 18DC _ 1 0 
        dd 00000001H, 00000000H                         ; 18E4 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 18EC _ 1 -1 
        dd 00000001H, 00000000H                         ; 18F4 _ 1 0 
        dd 00000001H, 00000000H                         ; 18FC _ 1 0 
        dd 00000001H, 00000000H                         ; 1904 _ 1 0 
        dd 00000001H, 00000000H                         ; 190C _ 1 0 
        dd 00000001H, 00000000H                         ; 1914 _ 1 0 
        dd 00000001H, 00000000H                         ; 191C _ 1 0 
        dd 00000001H, 00000000H                         ; 1924 _ 1 0 
        dd 00000001H, 00000000H                         ; 192C _ 1 0 
        dd 00000001H, 00000000H                         ; 1934 _ 1 0 
        dd 00000001H, 00000000H                         ; 193C _ 1 0 
        dd 00000001H, 00000000H                         ; 1944 _ 1 0 
        dd 00000001H, 00000000H                         ; 194C _ 1 0 
        dd 00000001H, 00000000H                         ; 1954 _ 1 0 
        dd 00000001H, 00000000H                         ; 195C _ 1 0 
        dd 00000001H, 00000000H                         ; 1964 _ 1 0 
        dd 00000001H, 00000000H                         ; 196C _ 1 0 
        dd 00000001H, 00000000H                         ; 1974 _ 1 0 
        dd 00000001H, 00000000H                         ; 197C _ 1 0 
        dd 00000001H, 00000000H                         ; 1984 _ 1 0 
        dd 00000001H, 00000000H                         ; 198C _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 1994 _ 1 -1 
        dd 00000001H, 00000000H                         ; 199C _ 1 0 
        dd 00000001H, 00000000H                         ; 19A4 _ 1 0 
        dd 00000001H, 00000000H                         ; 19AC _ 1 0 
        dd 00000001H, 00000000H                         ; 19B4 _ 1 0 
        dd 00000001H, 00000000H                         ; 19BC _ 1 0 
        dd 00000001H, 00000000H                         ; 19C4 _ 1 0 
        dd 00000001H, 00000000H                         ; 19CC _ 1 0 
        dd 00000001H, 00000000H                         ; 19D4 _ 1 0 
        dd 00000001H, 00000000H                         ; 19DC _ 1 0 
        dd 00000001H, 00000000H                         ; 19E4 _ 1 0 
        dd 00000001H, 00000000H                         ; 19EC _ 1 0 
        dd 00000001H, 00000000H                         ; 19F4 _ 1 0 
        dd 00000001H, 00000000H                         ; 19FC _ 1 0 
        dd 00000001H, 00000000H                         ; 1A04 _ 1 0 
        dd 00000001H, 00000000H                         ; 1A0C _ 1 0 
        dd 00000001H, 00000000H                         ; 1A14 _ 1 0 
        dd 00000001H, 00000000H                         ; 1A1C _ 1 0 
        dd 00000001H, 00000000H                         ; 1A24 _ 1 0 
        dd 00000001H, 00000000H                         ; 1A2C _ 1 0 
        dd 00000001H, 00000000H                         ; 1A34 _ 1 0 
        dd 00000001H, 0FFFFFFFFH                        ; 1A3C _ 1 -1 
        dd 00000001H, 000061A8H                         ; 1A44 _ 1 25000 
        dd 00000001H, 00002710H                         ; 1A4C _ 1 10000 
        dd 00000001H, 00001D4CH                         ; 1A54 _ 1 7500 
        dd 00000001H, 00001388H                         ; 1A5C _ 1 5000 
        dd 00000001H, 00000FA0H                         ; 1A64 _ 1 4000 
        dd 00000001H, 00000DACH                         ; 1A6C _ 1 3500 
        dd 00000001H, 00000BB8H                         ; 1A74 _ 1 3000 
        dd 00000001H, 000009C4H                         ; 1A7C _ 1 2500 
        dd 00000001H, 000007D0H                         ; 1A84 _ 1 2000 
        dd 00000001H, 000005DCH                         ; 1A8C _ 1 1500 
        dd 00000001H, 000004B0H                         ; 1A94 _ 1 1200 
        dd 00000001H, 000003E8H                         ; 1A9C _ 1 1000 
        dd 00000001H, 00000320H                         ; 1AA4 _ 1 800 
        dd 00000001H, 000001F4H                         ; 1AAC _ 1 500 
        dd 00000001H, 00000000H                         ; 1AB4 _ 1 0 
        dd 00000001H, 00000000H                         ; 1ABC _ 1 0 
        dd 00000001H, 00000000H                         ; 1AC4 _ 1 0 
        dd 00000001H, 00000000H                         ; 1ACC _ 1 0 
        dd 00000001H, 00000000H                         ; 1AD4 _ 1 0 
        dd 00000001H, 00000000H                         ; 1ADC _ 1 0 
        dd 00000001H, 00000000H                         ; 1AE4 _ 1 0 
        dd 00000001H, 00001388H                         ; 1AEC _ 1 5000 
        dd 00000001H, 00002710H                         ; 1AF4 _ 1 10000 
        dd 00000001H, 00004E20H                         ; 1AFC _ 1 20000 
        dd 00000001H, 00007530H                         ; 1B04 _ 1 30000 
        dd 00000001H, 0000C350H                         ; 1B0C _ 1 50000 
        dd 00000001H, 00011170H                         ; 1B14 _ 1 70000 
        dd 00000001H, 00015F90H                         ; 1B1C _ 1 90000 
        dd 00000001H, 0001ADB0H                         ; 1B24 _ 1 110000 
        dd 00000001H, 0001E848H                         ; 1B2C _ 1 125000 
        dd 00000001H, 000249F0H                         ; 1B34 _ 1 150000 
        dd 00000001H, 001AB3F0H                         ; 1B3C _ 1 1750000 
        dd 00000001H, 00030D40H                         ; 1B44 _ 1 200000 
        dd 00000001H, 00036EE8H                         ; 1B4C _ 1 225000 
        dd 00000001H, 0003D090H                         ; 1B54 _ 1 250000 
        dd 00000001H, 00043238H                         ; 1B5C _ 1 275000 
        dd 00000001H, 000493E0H                         ; 1B64 _ 1 300000 
        dd 00000001H, 00055730H                         ; 1B6C _ 1 350000 
        dd 00000001H, 00061A80H                         ; 1B74 _ 1 400000 
        dd 00000001H, 0006DDD0H                         ; 1B7C _ 1 450000 
        dd 00000001H, 0007A120H                         ; 1B84 _ 1 500000 
        dd 00000001H, 00000276H                         ; 1B8C _ 1 630 
        dd 00000001H, 00000244H                         ; 1B94 _ 1 580 
        dd 00000001H, 0000022AH                         ; 1B9C _ 1 554 
        dd 00000001H, 000001D6H                         ; 1BA4 _ 1 470 
        dd 00000001H, 0000019AH                         ; 1BAC _ 1 410 
        dd 00000001H, 0000016EH                         ; 1BB4 _ 1 366 
        dd 00000001H, 0000014FH                         ; 1BBC _ 1 335 
        dd 00000001H, 00000136H                         ; 1BC4 _ 1 310 
        dd 00000001H, 00000122H                         ; 1BCC _ 1 290 
        dd 00000002H, 4089999AH                         ; 1BD4 _ 2 1082759578 
        dd 00000002H, 40366666H                         ; 1BDC _ 2 1077306982 
        dd 00000002H, 40066666H                         ; 1BE4 _ 2 1074161254 
        dd 00000002H, 3FCCCCCDH                         ; 1BEC _ 2 1070386381 
        dd 00000002H, 3F99999AH                         ; 1BF4 _ 2 1067030938 
        dd 00000002H, 3F666666H                         ; 1BFC _ 2 1063675494 
        dd 00000002H, 3F19999AH                         ; 1C04 _ 2 1058642330 
        dd 00000002H, 3ECCCCCDH                         ; 1C0C _ 2 1053609165 
        dd 00000002H, 3DCCCCCDH                         ; 1C14 _ 2 1036831949 
        dd 00000002H, 3FC00000H                         ; 1C1C _ 2 1069547520 
        dd 00000001H, 00000001H                         ; 1C24 _ 1 1 
        dd 00000002H, 3F3D70A4H                         ; 1C2C _ 2 1060991140 
        dd 00000002H, 3F0F5C29H                         ; 1C34 _ 2 1057971241 
        dd 00000002H, 3ED70A3DH                         ; 1C3C _ 2 1054280253 
        dd 00000002H, 3E99999AH                         ; 1C44 _ 2 1050253722 
        dd 00000002H, 3E570A3DH                         ; 1C4C _ 2 1045891645 
        dd 00000002H, 3E0F5C29H                         ; 1C54 _ 2 1041194025 
        dd 00000002H, 3CF5C28FH                         ; 1C5C _ 2 1022739087 
        dd 00000000H                                    ; 1C64 _ 0 

___bbIntType label dword
        dd 1

___bbFltType label dword
        dd 2

___bbStrType label dword
        dd 3

___bbCStrType label dword
        dd 4

___bbObjType label dword
        dd 5

___bbVecType label dword
        dd 6

END